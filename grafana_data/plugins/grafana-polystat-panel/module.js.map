{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///../node_modules/classnames/index.js","webpack:///../node_modules/semver/semver.js","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"d3\"","webpack:///external amd \"lodash\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/types.ts","webpack:///../node_modules/uuid/dist/esm-browser/rng.js","webpack:///../node_modules/uuid/dist/esm-browser/regex.js","webpack:///../node_modules/uuid/dist/esm-browser/stringify.js","webpack:///../node_modules/uuid/dist/esm-browser/validate.js","webpack:///../node_modules/uuid/dist/esm-browser/v4.js","webpack:///./components/thresholds/types.ts","webpack:///./components/thresholds/ThresholdItem.tsx","webpack:///./components/gradients/color.ts","webpack:///./components/defaults.ts","webpack:///./components/thresholds/ThresholdsEditor.tsx","webpack:///./components/metric_hints.ts","webpack:///./components/overrides/OverrideItem.tsx","webpack:///./components/overrides/OverrideEditor.tsx","webpack:///../node_modules/d3-hexbin/src/hexbin.js","webpack:///../node_modules/@floating-ui/core/dist/floating-ui.core.browser.min.mjs","webpack:///../node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.min.mjs","webpack:///../node_modules/react-tooltip/dist/react-tooltip.min.mjs","webpack:///./components/gradients/Gradients.tsx","webpack:///./components/layout/layoutManager.ts","webpack:///./utils.ts","webpack:///./components/styles.ts","webpack:///./components/tooltips/Tooltip.tsx","webpack:///./components/Polystat.tsx","webpack:///./data/deframer.ts","webpack:///./data/threshold_processor.ts","webpack:///./data/clickThroughTransformer.ts","webpack:///./data/types.ts","webpack:///./data/composite_processor.ts","webpack:///./data/stats.ts","webpack:///./data/valueMappingsWrapper/v7/valueMappings.ts","webpack:///./data/valueMappingsWrapper/v8/types/thresholds.ts","webpack:///./data/valueMappingsWrapper/v8/types/fieldColor.ts","webpack:///./data/valueMappingsWrapper/v8/types/valueMappings.ts","webpack:///./data/valueMappingsWrapper/v8/valueMappings.ts","webpack:///./data/valueMappingsWrapper/index.ts","webpack:///./data/override_processor.ts","webpack:///./data/processor.ts","webpack:///./components/PolystatPanel.tsx","webpack:///./components/composites/types.ts","webpack:///./components/composites/CompositeMetricItem.tsx","webpack:///./components/composites/CompositeItem.tsx","webpack:///./components/composites/CompositeEditor.tsx","webpack:///./components/thresholds/GlobalThresholdEditor.tsx","webpack:///./migrations.ts","webpack:///./module.ts","webpack:///./components/suggestions.ts"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar safeRe = exports.safeRe = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nvar safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nfunction makeSafeRe (value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0]\n    var max = safeRegexReplacements[i][1]\n    value = value\n      .split(token + '*').join(token + '{0,' + max + '}')\n      .split(token + '+').join(token + '{1,' + max + '}')\n  }\n  return value\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '\\\\d+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\nsafeRe[t.COERCERTL] = new RegExp(makeSafeRe(src[t.COERCE]), 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nsafeRe[t.TILDETRIM] = new RegExp(makeSafeRe(src[t.TILDETRIM]), 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nsafeRe[t.CARETTRIM] = new RegExp(makeSafeRe(src[t.CARETTRIM]), 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nsafeRe[t.COMPARATORTRIM] = new RegExp(makeSafeRe(src[t.COMPARATORTRIM]), 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n    safeRe[i] = new RegExp(makeSafeRe(src[i]))\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  comp = comp.trim().split(/\\s+/).join(' ')\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n  this.raw = range\n    .trim()\n    .split(/\\s+/)\n    .join(' ')\n\n  // First, split based on boolean or ||\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? safeRe[t.HYPHENRANGELOOSE] : safeRe[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(safeRe[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, safeRe[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(safeRe[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(safeRe[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? safeRe[t.TILDELOOSE] : safeRe[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? safeRe[t.CARETLOOSE] : safeRe[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? safeRe[t.XRANGELOOSE] : safeRe[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(safeRe[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(safeRe[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = safeRe[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      safeRe[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    safeRe[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__200__;","module.exports = __WEBPACK_EXTERNAL_MODULE__980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { SelectableValue } from '@grafana/data';\nimport { CompositeItemType } from 'components/composites/types';\nimport { OverrideItemType } from './overrides/types';\nimport { PolystatThreshold } from './thresholds/types';\n\nexport interface PolystatOptions {\n  autoSizeColumns: boolean;\n  autoSizeRows: boolean;\n  autoSizePolygons: boolean;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  globalAutoScaleFonts: boolean;\n  globalClickthrough: string;\n  globalClickthroughNewTabEnabled: boolean;\n  globalClickthroughSanitizedEnabled: boolean;\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalFillColor: string;\n  globalFontSize: number;\n  globalGradientsEnabled: boolean;\n  globalOperator: string;\n  globalPolygonBorderSize: number;\n  globalPolygonBorderColor: string;\n  globalPolygonSize: number;\n  globalRegexPattern: string;\n  globalShape: PolygonShapes;\n  globalShowValueEnabled: boolean;\n  globalShowTooltipColumnHeadersEnabled: boolean;\n  globalTextFontAutoColor: string;\n  globalTextFontAutoColorEnabled: boolean;\n  globalTextFontColor: string;\n  globalTextFontFamily: string;\n  globalThresholdsConfig: PolystatThreshold[];\n  globalTooltipsEnabled: boolean;\n  globalTooltipsShowTimestampEnabled: boolean;\n  globalTooltipsFontFamily: string,\n  globalUnitFormat: string;\n  layoutDisplayLimit: number;\n  layoutNumColumns: number;\n  layoutNumRows: number;\n  processedData?: PolystatModel[] | null;\n  panelHeight: any;\n  panelWidth: any;\n  panelId: number;\n  radius: number | null;\n  renderTime?: Date;\n  sortByField: string;\n  sortByDirection: number;\n  overrideConfig: {\n    overrides: OverrideItemType[];\n  };\n  compositeConfig: {\n    animationSpeed: string;\n    composites: CompositeItemType[];\n    enabled: boolean;\n  };\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortByField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortByField: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n}\n\nexport interface PolystatModel {\n  displayMode?: string;\n  thresholdLevel?: number; // 0 = ok, 1 = warn, 2 = crit, 3 = unknown (same as sensu)\n  value: number;\n  valueFormatted: string;\n  valueRounded: number;\n  stats: any;\n  name: string;\n  displayName: string; // Used for composites\n  timestamp: number;\n  prefix: string;\n  suffix: string;\n  color: string;\n  clickThrough: string;\n  operatorName: string;\n  newTabEnabled: boolean;\n  sanitizedURL: string;\n  sanitizeURLEnabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  isComposite: boolean;\n  members: PolystatModel[];\n  triggerCache?: any; // holds animation frame info\n}\n\nexport enum PolygonShapes {\n  HEXAGON_POINTED_TOP = 'hexagon_pointed_top',\n  CIRCLE = 'circle',\n  SQUARE = 'square',\n}\n\nexport const PolygonNamedShapes = [\n  { value: 'hexagon_pointed_top', label: 'Hexagon Pointed Top' },\n  { value: 'circle', label: 'Circle' },\n  { value: 'square', label: 'Square' },\n];\n\nexport interface PolystatDiameters {\n  diameterX: number;\n  diameterY: number;\n}\n\nexport const OperatorOptions: SelectableValue[] = [\n  { value: 'mean', label: 'Mean (avg)' },\n  { value: 'sum', label: 'Sum' },\n  { value: 'min', label: 'Min' },\n  { value: 'max', label: 'Max' },\n  { value: 'last', label: 'Last' },\n  { value: 'lastNotNull', label: 'Last Not Null' },\n  { value: 'first', label: 'First' },\n  { value: 'firstNotNull', label: 'First Not Null' },\n  { value: 'count', label: 'Count' },\n  { value: 'allIsNull', label: 'All Is Null (boolean)' },\n  { value: 'allIsZero', label: 'All Is Zero (boolean)' },\n  { value: 'delta', label: 'Delta' },\n  { value: 'diff', label: 'Difference' },\n  { value: 'diffperc', label: 'Difference (Percent)' },\n  { value: 'last_time', label: 'Time of Last Point' },\n  { value: 'logmin', label: 'Log Min' },\n  { value: 'name', label: 'Name' },\n  { value: 'nonNullCount', label: 'Non Null Count' },\n  { value: 'previousDeltaUp', label: 'Previous Delta Up' },\n  { value: 'range', label: 'Range' },\n  { value: 'step', label: 'Step' },\n];\n\nexport const SortOptions = [\n  { value: 0, label: 'Disabled' },\n  { value: 1, label: 'Alphabetical (asc)' },\n  { value: 2, label: 'Alphabetical (desc)' },\n  { value: 3, label: 'Numerical (asc)' },\n  { value: 4, label: 'Numerical (desc)' },\n  { value: 5, label: 'Alphabetical (case-insensitive, asc)' },\n  { value: 6, label: 'Alphabetical (case-insensitive, desc)' },\n];\n\nexport const SortOptionOperators = ['disabled', 'asc', 'desc', 'asc', 'desc', 'iasc', 'idesc'];\n\nexport const SortByFieldOptions = [\n  { value: 'name', label: 'Name' },\n  { value: 'thresholdLevel', label: 'Threshold Level' },\n  { value: 'value', label: 'Value' },\n];\n\nexport const DisplayModes = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport const AnimationModes = [\n  { value: 'all', text: 'Show All' },\n  { value: 'triggered', text: 'Show Triggered' },\n];\n\nexport enum FontFamilies {\n  ARIAL = 'Arial',\n  HELVETICA = 'Helvetica',\n  HELVETICA_NEUE = 'Helvetica Neue',\n  INTER = 'Inter',\n  ROBOTO = 'Roboto',\n  ROBOTO_MONO = 'Roboto Mono',\n}\n\nexport const FontFamilyOptions = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.INTER, label: 'Inter' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\nexport const FontFamilyOptionsLegacy = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.ROBOTO, label: 'Roboto' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { SelectableValue } from '@grafana/data';\n\nexport interface PolystatThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface ThresholdItemTracker {\n  threshold: PolystatThreshold;\n  order: number;\n  ID: string;\n}\n\nexport const ThresholdStates: SelectableValue[] = [\n  { value: 0, label: 'ok' },\n  { value: 1, label: 'warning' },\n  { value: 2, label: 'critical' },\n  { value: 3, label: 'custom' },\n];\n","import React, { useState } from 'react';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Input, ColorPicker, IconButton, useStyles2, Select } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nimport { PolystatThreshold, ThresholdStates } from './types';\n\ninterface ThresholdItemProps {\n  threshold: PolystatThreshold;\n  key: string;\n  ID: string;\n  valueSetter: any;\n  colorSetter: any;\n  stateSetter: any;\n  remover: any;\n  index: number;\n  disabled: boolean;\n}\n\nexport const ThresholdItem: React.FC<ThresholdItemProps> = (options: ThresholdItemProps) => {\n  const styles = useStyles2(getThresholdStyles);\n  const getThreshold = (thresholdId: number) => {\n    const keys = ThresholdStates.keys();\n    for (const aKey of keys) {\n      if (ThresholdStates[aKey].value === thresholdId) {\n        return ThresholdStates[aKey];\n      }\n    }\n    // no match, return current by default\n    return ThresholdStates[0];\n  };\n\n  const [threshold, setThreshold] = useState<SelectableValue<any>>(getThreshold(options.threshold.state));\n\n  return (\n    <Input\n      disabled={options.disabled}\n      type=\"number\"\n      step=\"1.0\"\n      key={options.ID}\n      onChange={(e) => options.valueSetter(options.index, Number(e.currentTarget.value))}\n      value={options.threshold.value}\n      prefix={\n        <div className={styles.inputPrefix}>\n          <div className={styles.colorPicker}>\n            <ColorPicker\n              color={options.threshold.color}\n              onChange={(color) => options.colorSetter(options.index, color)}\n              enableNamedColors={true}\n            />\n          </div>\n        </div>\n      }\n      suffix={\n        <>\n          <Select\n            disabled={options.disabled}\n            menuShouldPortal={true}\n            value={threshold}\n            onChange={(v) => {\n              setThreshold(v);\n              options.stateSetter(options.index, v.value);\n            }}\n            options={ThresholdStates}\n          />\n          <IconButton\n            disabled={options.disabled}\n            key=\"deleteThreshold\"\n            variant=\"destructive\"\n            name=\"trash-alt\"\n            tooltip=\"Delete Threshold\"\n            onClick={() => options.remover(options.index)}\n          />\n        </>\n      }\n    />\n  );\n};\n\nconst getThresholdStyles = (theme: GrafanaTheme2) => {\n  return {\n    inputPrefix: css`\n      display: flex;\n      align-items: center;\n    `,\n    colorPicker: css`\n      padding: 0 ${theme.spacing(1)};\n    `,\n  };\n};\n","/*\n  Generic class to provide gradient colors\n\n  Based on https://codepen.io/anon/pen/wWxGkr\n\n*/\nexport class Color {\n  r: number;\n  g: number;\n  b: number;\n\n  constructor(r: number, g: number, b: number) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  asHex() {\n    return '#' + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1);\n  }\n\n  asRGB() {\n    return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n  }\n\n  blendWith(col: Color, a: number) {\n    const r = Math.round(col.r * (1 - a) + this.r * a);\n    const g = Math.round(col.g * (1 - a) + this.g * a);\n    const b = Math.round(col.b * (1 - a) + this.b * a);\n    return new Color(r, g, b);\n  }\n\n  Mul(col: Color, a: number) {\n    const r = Math.round((col.r / 255) * this.r * a);\n    const g = Math.round((col.g / 255) * this.g * a);\n    const b = Math.round((col.b / 255) * this.b * a);\n    return new Color(r, g, b);\n  }\n\n  RGBToHex(rgb: any) {\n    let sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n    // Convert %s to 0–255\n    for (let R in rgb) {\n      let r = rgb[R];\n      if (r.indexOf('%') > -1) {\n        rgb[R] = Math.round((r.substr(0, r.length - 1) / 100) * 255);\n      }\n    }\n  }\n\n  static RGBAToHex(orig: string) {\n    const rgb = orig.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\n    const alpha = ((rgb && rgb[4]) || '').trim();\n    let hex = rgb\n      ? (parseInt(rgb[1], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[2], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[3], 10) | (1 << 8)).toString(16).slice(1)\n      : orig;\n\n    let a = '1';\n    if (alpha !== '') {\n      const alphaVal = parseFloat(alpha);\n      // multiply before convert to HEX\n      a = ((alphaVal * 255) | (1 << 8)).toString(16).slice(1);\n    }\n    return '#' + hex + a;\n  }\n\n  fromHex(hex: string) {\n    // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    hex = hex.substring(1, 7);\n    const bigint = parseInt(hex, 16);\n    this.r = (bigint >> 16) & 255;\n    this.g = (bigint >> 8) & 255;\n    this.b = bigint & 255;\n  }\n}\n","import { Color } from './gradients/color';\nimport { FontFamilies } from './types';\n\n/**\n * Color to use when rendering without any thresholds/overrides\n */\nexport const GLOBAL_FILL_COLOR_RGBA = 'rgba(10, 85, 161, 1)'; // \"#0a55a1\"\nexport const GLOBAL_FILL_COLOR_HEX = '#0a55a1';\nexport const GLOBAL_FILL_COLOR = new Color(10, 85, 161);\n\nexport const GLOBAL_BORDER_COLOR_RGBA = 'rgba(0, 0, 0, 0)'; // \"#000000\"\n/**\n * Color for threshold OK state\n */\nexport const DEFAULT_OK_COLOR_RGBA = 'rgba(41, 156, 70, 1))'; // #299c46\nexport const DEFAULT_OK_COLOR_HEX = '#299c46';\nexport const DEFAULT_OK_COLOR = new Color(41, 156, 70);\n/**\n * Color for threshold Warning state\n */\nexport const DEFAULT_WARNING_COLOR_RGBA = 'rgba(237, 129, 40, 1)'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR_HEX = '#ed8128'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR = new Color(237, 129, 40);\n/**\n * Color for threshold Critical state\n */\nexport const DEFAULT_CRITICAL_COLOR_RGBA = 'rgba(245, 54, 54, 1)';\nexport const DEFAULT_CRITICAL_COLOR_HEX = '#f53636';\nexport const DEFAULT_CRITICAL_COLOR = new Color(245, 54, 54);\n\nexport const DEFAULT_NO_THRESHOLD_COLOR_RGBA = GLOBAL_FILL_COLOR_RGBA;\nexport const DEFAULT_NO_THRESHOLD_COLOR_HEX = GLOBAL_FILL_COLOR_HEX;\nexport const DEFAULT_NO_THRESHOLD_COLOR = new Color(64, 64, 160);\n\nexport const DEFAULT_NO_DATA_COLOR_HEX = '#808080'; // \"grey\"\n\n/**\n * Unit to apply to all metrics without overrides\n */\nexport const GLOBAL_UNIT_FORMAT = 'short';\n/**\n * Number of decimals to display in polygon\n */\nexport const GLOBAL_DISPLAY_DECIMALS = 2;\n/**\n * Show all metrics\n */\nexport const GLOBAL_DISPLAY_MODE = 'all';\n/**\n * Display OK when global mode is set to triggered and there are no triggers\n */\nexport const GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY = 'OK';\n/**\n * Display average (mean) stat for metric\n */\nexport const GLOBAL_OPERATOR_NAME = 'mean'; // mean\n\nexport const GLOBAL_OVERRIDE_COLORS = [\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n];\n\nexport const GLOBAL_TEXT_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TEXT_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\n","import React, { useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { Button, useTheme, useTheme2 } from '@grafana/ui';\nimport { v4 as uuidv4 } from 'uuid';\nimport { PolystatThreshold, ThresholdItemTracker } from './types';\nimport { ThresholdItem } from './ThresholdItem';\nimport { DEFAULT_OK_COLOR_HEX, DEFAULT_WARNING_COLOR_HEX, DEFAULT_CRITICAL_COLOR_HEX } from '../defaults';\nimport { getColorForTheme } from '@grafana/data';\ninterface Props {\n  thresholds: PolystatThreshold[];\n  setter: any;\n  disabled?: boolean;\n}\nexport const ThresholdsEditor: React.FC<Props> = (options) => {\n  const [tracker, _setTracker] = useState((): ThresholdItemTracker[] => {\n    if (!options.thresholds) {\n      const empty: ThresholdItemTracker[] = [];\n      return empty;\n    }\n    const items: ThresholdItemTracker[] = [];\n    options.thresholds.forEach((value: PolystatThreshold, index: number) => {\n      items[index] = {\n        threshold: value,\n        order: index,\n        ID: uuidv4(),\n      };\n    });\n    return items;\n  });\n  // v9 compatible\n  const theme2 = useTheme2();\n  const oldTheme = useTheme();\n\n  const setTracker = (v: ThresholdItemTracker[]) => {\n    _setTracker(v);\n    const allThresholds: PolystatThreshold[] = [];\n    v.forEach((element) => {\n      allThresholds.push(element.threshold);\n    });\n    options.setter(allThresholds);\n  };\n\n  const updateThresholdValue = (index: number, value: number) => {\n    tracker[index].threshold.value = Number(value);\n    // reorder\n    const allThresholds = [...tracker];\n    const orderedThresholds = orderBy(allThresholds, ['threshold.value'], ['asc']);\n    setTracker([...orderedThresholds]);\n  };\n\n  const updateThresholdColor = (index: number, color: string) => {\n    let useColor = color;\n    if (typeof theme2.visualization !== 'undefined') {\n      useColor = theme2.visualization.getColorByName(color);\n    } else {\n      useColor = getColorForTheme(color, oldTheme);\n    }\n    tracker[index].threshold.color = useColor;\n    setTracker([...tracker]);\n  };\n\n  const updateThresholdState = (index: number, state: any) => {\n    tracker[index].threshold.state = state;\n    // set the color if it is not a custom state\n    if (state < 3) {\n      tracker[index].threshold.color = colorForThresholdState(state);\n    }\n    setTracker([...tracker]);\n  };\n\n  const colorForThresholdState = (state: number) => {\n    switch (state) {\n      case 0:\n        return DEFAULT_OK_COLOR_HEX;\n      case 1:\n        return DEFAULT_WARNING_COLOR_HEX;\n      case 2:\n        return DEFAULT_CRITICAL_COLOR_HEX;\n      default:\n        return DEFAULT_OK_COLOR_HEX;\n    }\n  };\n\n  const removeThreshold = (index: number) => {\n    const allThresholds = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allThresholds.length; i++) {\n      if (allThresholds[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allThresholds.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allThresholds.length; i++) {\n      allThresholds[i].order = i;\n    }\n    setTracker([...allThresholds]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aThreshold: PolystatThreshold = {\n      color: DEFAULT_OK_COLOR_HEX, // \"rgba(50, 172, 45, 1)\",  // green\n      state: 0,\n      value: 0,\n    };\n    const aTracker: ThresholdItemTracker = {\n      threshold: aThreshold,\n      order: order,\n      ID: uuidv4(),\n    };\n    setTracker([...tracker, aTracker]);\n  };\n\n  return (\n    <>\n      <Button disabled={options.disabled} fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Threshold\n      </Button>\n      {tracker &&\n        tracker.map((tracker: ThresholdItemTracker, index: number) => {\n          return (\n            <ThresholdItem\n              disabled={options.disabled || false}\n              key={`threshold-item-index-${tracker.ID}`}\n              ID={tracker.ID}\n              threshold={tracker.threshold}\n              valueSetter={updateThresholdValue}\n              colorSetter={updateThresholdColor}\n              stateSetter={updateThresholdState}\n              remover={removeThreshold}\n              index={index}\n            />\n          );\n        })}\n    </>\n  );\n};\n","import { FieldType } from '@grafana/data';\n\n// builds unique metric names to shorten the list displayed\nexport const getMetricHints = (frames: any) => {\n  let metricHints = new Set<string>();\n  for (let i = 0; i < frames.length; i++) {\n    // start with empty hint\n    let hintValue = '';\n    // the frame may have a name defined, start with it, fields will change it as needed\n    if (frames[i]?.name) {\n      hintValue = frames[i].name;\n    }\n    // iterate over fields, get all number types and provide as hints\n    for (const aField of frames[i].fields) {\n      if (aField.type === FieldType.number) {\n        // update the hint to use the field Name if we didn't get a value from above\n        if ((aField.name) && (hintValue === '')) {\n          hintValue = aField.name;\n        }\n        // check for a label with __name__ and use it instead\n        if (aField?.labels && ('__name__' in aField.labels)) {\n          hintValue = aField.labels['__name__'];\n          // append the rest of the labels\n          const appendLabels: string[] = [];\n          for (const aLabel in aField.labels) {\n            if (aLabel !== '__name__') {\n              appendLabels.push(`${aLabel}=\"${aField.labels[aLabel]}\"`);\n            }\n          }\n          if (appendLabels.length > 0) {\n            // sort them first\n            appendLabels.sort();\n            hintValue += '{' + appendLabels.join('') + '}';\n          }\n        }\n        // update the hint to use the displayNameFromDS value\n        // (the query has a specified a naming convention)\n        if (aField?.config && aField.config?.displayNameFromDS) {\n          hintValue = aField.config?.displayNameFromDS;\n        }\n        metricHints.add(hintValue);\n      }\n    }\n  }\n  return metricHints;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  IconName,\n  Input,\n  Field,\n  FieldSet,\n  Switch,\n  Card,\n  IconButton,\n  UnitPicker,\n  Select,\n  Cascader,\n  CascaderOption,\n} from '@grafana/ui';\nimport { OverrideItemProps, OverrideItemType } from './types';\nimport { ThresholdsEditor } from '../../components/thresholds/ThresholdsEditor';\nimport { PolystatThreshold } from '../../components/thresholds/types';\nimport { OperatorOptions } from '../../components/types';\nimport { SelectableValue } from '@grafana/data';\nimport { getMetricHints } from '../metric_hints';\n\nexport const OverrideItem: React.FC<OverrideItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n  const [override, _setOverride] = useState(props.override);\n\n  const setOverride = (value: OverrideItemType) => {\n    _setOverride(value);\n    props.setter(override.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n\n  const getOperator = (operatorName: string) => {\n    const keys = OperatorOptions.keys();\n    for (const aKey of keys) {\n      if (OperatorOptions[aKey].value === operatorName) {\n        return OperatorOptions[aKey];\n      }\n    }\n    // no match, return last not null by default\n    return OperatorOptions[5];\n  };\n  const [operatorName, setOperatorName] = useState<SelectableValue<any>>(getOperator(props.override.operatorName));\n  const removeItem = () => {\n    props.remover(override.order);\n  };\n\n  const moveUp = () => {\n    props.moveUp(override.order);\n  };\n  const moveDown = () => {\n    props.moveDown(override.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(override.order);\n  };\n\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setOverride({ ...override, thresholds: val });\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <Card heading=\"\" key={`override-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field\n            label=\"Label\"\n            description=\"Sets the name of the override in the configuration editor.\"\n            disabled={!override.enabled}\n          >\n            <Input\n              value={override.label}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, label: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Metric/RegEx\" disabled={!override.enabled}>\n            <Cascader\n              initialValue={override.metricName}\n              allowCustomValue\n              placeholder=\"\"\n              options={metricHints}\n              onSelect={(val: string) => setOverride({ ...override, metricName: val })}\n            />\n          </Field>\n          <Field label=\"Alias\" disabled={!override.enabled} hidden={true}>\n            <Input\n              value={override.alias}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, alias: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Decimals\" disabled={!override.enabled}>\n            <Input\n              value={override.decimals}\n              type=\"number\"\n              step={1}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, decimals: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Stat\" description=\"The statistic to be displayed\" disabled={!override.enabled}>\n            <Select\n              menuShouldPortal={true}\n              value={operatorName}\n              onChange={(v) => {\n                setOperatorName(v);\n                setOverride({ ...override, operatorName: v.value });\n              }}\n              options={OperatorOptions}\n            />\n          </Field>\n          <Field label=\"Unit Format\" disabled={!override.enabled}>\n            {override.enabled ? (\n              <UnitPicker\n                value={override.unitFormat}\n                onChange={(val: any) => setOverride({ ...override, unitFormat: val })}\n              />\n            ) : (\n              <span>{override.unitFormat}</span>\n            )}\n          </Field>\n          <Field label=\"Thresholds\" disabled={!override.enabled}>\n            <ThresholdsEditor disabled={!override.enabled} thresholds={override.thresholds} setter={setThresholds} />\n          </Field>\n          <Field label=\"Prefix\" description=\"Apply text to beginning of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.prefix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, prefix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Suffix\" description=\"Apply text to end of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.suffix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, suffix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!override.enabled}>\n            <Input\n              value={override.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setOverride({ ...override, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              disabled={!override.enabled}\n              value={override.clickThroughSanitize}\n              onChange={() => setOverride({ ...override, clickThroughSanitize: !override.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open in New Tab\" description=\"Open link in new tab\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughOpenNewTab}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, clickThroughOpenNewTab: !override.clickThroughOpenNewTab })}\n            />\n          </Field>\n        </FieldSet>\n      </Card.Meta>\n\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"overrideEnabled\"\n          name={override.enabled ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Override\"\n          onClick={() => setOverride({ ...override, enabled: !override.enabled })}\n        />\n        <IconButton key=\"copyOverride\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteOverride\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Override\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { OverrideItem } from './OverrideItem';\nimport { OverrideItemType, OverrideItemTracker } from './types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, Collapse } from '@grafana/ui';\nimport { PolystatThreshold } from '../../components/thresholds/types';\nimport { OperatorOptions } from '../../components/types';\nimport {\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n} from '../../components/defaults';\n\nexport interface OverrideEditorSettings {\n  overrides: OverrideItemType[];\n  enabled: boolean;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, OverrideEditorSettings> {}\n\nexport const OverrideEditor: React.FC<Props> = ({ item, context, onChange }) => {\n  const [settings] = useState(context.options.overrideConfig);\n  const [tracker, _setTracker] = useState((): OverrideItemTracker[] => {\n    if (!settings.overrides) {\n      const empty: OverrideItemTracker[] = [];\n      return empty;\n    }\n    const items: OverrideItemTracker[] = [];\n    settings.overrides.forEach((value: OverrideItemType, index: number) => {\n      items[index] = {\n        override: value,\n        order: index,\n        ID: uuidv4(),\n      };\n    });\n    return items;\n  });\n\n  const setTracker = (v: OverrideItemTracker[]) => {\n    _setTracker(v);\n    const allOverrides: OverrideItemType[] = [];\n    v.forEach((element) => {\n      allOverrides.push(element.override);\n    });\n    const overrideConfig = {\n      overrides: allOverrides,\n      enabled: settings.enabled,\n    };\n    onChange(overrideConfig as any);\n  };\n\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      const empty: boolean[] = [];\n      return empty;\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  const updateOverride = (index: number, value: OverrideItemType) => {\n    tracker[index].override = value;\n    // works ... setTracker(tracker);\n    setTracker([...tracker]);\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].override;\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `${original.label} Copy`,\n      enabled: original.enabled,\n      metricName: original.metricName,\n      alias: original.alias,\n      thresholds: original.thresholds,\n      prefix: original.prefix,\n      suffix: original.suffix,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      unitFormat: original.unitFormat,\n      scaledDecimals: original.scaledDecimals,\n      decimals: original.decimals,\n      colors: original.colors,\n      operatorName: original.operatorName,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: uuidv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const removeOverride = (index: number) => {\n    const allOverrides = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allOverrides.length; i++) {\n      if (allOverrides[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allOverrides.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allOverrides.length; i++) {\n      allOverrides[i].order = i;\n      allOverrides[i].override.order = i;\n    }\n    setTracker([...allOverrides]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const currentState = [...isOpen];\n    currentState[index] = !currentState[index];\n    setIsOpen([...currentState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `Override-${order}`,\n      enabled: true,\n      metricName: '',\n      alias: '',\n      thresholds: [] as PolystatThreshold[],\n      prefix: '',\n      suffix: '',\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      unitFormat: 'short',\n      scaledDecimals: null,\n      decimals: '2',\n      colors: [\n        DEFAULT_OK_COLOR_HEX,\n        DEFAULT_WARNING_COLOR_HEX,\n        DEFAULT_CRITICAL_COLOR_HEX,\n        DEFAULT_NO_THRESHOLD_COLOR_HEX,\n      ],\n      operatorName: OperatorOptions[0].value,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: uuidv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Override\n      </Button>\n      {tracker &&\n        tracker.map((tracker: OverrideItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${tracker.ID}`}\n              label={tracker.override.label}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <OverrideItem\n                key={`override-item-index-${tracker.ID}`}\n                ID={tracker.ID}\n                override={tracker.override}\n                enabled={tracker.override.enabled}\n                setter={updateOverride}\n                remover={removeOverride}\n                moveDown={moveDown}\n                moveUp={moveUp}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","function t(t){return t.split(\"-\")[1]}function e(t){return\"y\"===t?\"height\":\"width\"}function n(t){return t.split(\"-\")[0]}function o(t){return[\"top\",\"bottom\"].includes(n(t))?\"x\":\"y\"}function i(i,r,a){let{reference:l,floating:s}=i;const c=l.x+l.width/2-s.width/2,f=l.y+l.height/2-s.height/2,m=o(r),u=e(m),g=l[u]/2-s[u]/2,d=\"x\"===m;let p;switch(n(r)){case\"top\":p={x:c,y:l.y-s.height};break;case\"bottom\":p={x:c,y:l.y+l.height};break;case\"right\":p={x:l.x+l.width,y:f};break;case\"left\":p={x:l.x-s.width,y:f};break;default:p={x:l.x,y:l.y}}switch(t(r)){case\"start\":p[m]-=g*(a&&d?-1:1);break;case\"end\":p[m]+=g*(a&&d?-1:1)}return p}const r=async(t,e,n)=>{const{placement:o=\"bottom\",strategy:r=\"absolute\",middleware:a=[],platform:l}=n,s=a.filter(Boolean),c=await(null==l.isRTL?void 0:l.isRTL(e));let f=await l.getElementRects({reference:t,floating:e,strategy:r}),{x:m,y:u}=i(f,o,c),g=o,d={},p=0;for(let n=0;n<s.length;n++){const{name:a,fn:h}=s[n],{x:y,y:x,data:w,reset:v}=await h({x:m,y:u,initialPlacement:o,placement:g,strategy:r,middlewareData:d,rects:f,platform:l,elements:{reference:t,floating:e}});m=null!=y?y:m,u=null!=x?x:u,d={...d,[a]:{...d[a],...w}},v&&p<=50&&(p++,\"object\"==typeof v&&(v.placement&&(g=v.placement),v.rects&&(f=!0===v.rects?await l.getElementRects({reference:t,floating:e,strategy:r}):v.rects),({x:m,y:u}=i(f,g,c))),n=-1)}return{x:m,y:u,placement:g,strategy:r,middlewareData:d}};function a(t,e){return\"function\"==typeof t?t(e):t}function l(t){return\"number\"!=typeof t?function(t){return{top:0,right:0,bottom:0,left:0,...t}}(t):{top:t,right:t,bottom:t,left:t}}function s(t){return{...t,top:t.y,left:t.x,right:t.x+t.width,bottom:t.y+t.height}}async function c(t,e){var n;void 0===e&&(e={});const{x:o,y:i,platform:r,rects:c,elements:f,strategy:m}=t,{boundary:u=\"clippingAncestors\",rootBoundary:g=\"viewport\",elementContext:d=\"floating\",altBoundary:p=!1,padding:h=0}=a(e,t),y=l(h),x=f[p?\"floating\"===d?\"reference\":\"floating\":d],w=s(await r.getClippingRect({element:null==(n=await(null==r.isElement?void 0:r.isElement(x)))||n?x:x.contextElement||await(null==r.getDocumentElement?void 0:r.getDocumentElement(f.floating)),boundary:u,rootBoundary:g,strategy:m})),v=\"floating\"===d?{...c.floating,x:o,y:i}:c.reference,b=await(null==r.getOffsetParent?void 0:r.getOffsetParent(f.floating)),A=await(null==r.isElement?void 0:r.isElement(b))&&await(null==r.getScale?void 0:r.getScale(b))||{x:1,y:1},R=s(r.convertOffsetParentRelativeRectToViewportRelativeRect?await r.convertOffsetParentRelativeRectToViewportRelativeRect({rect:v,offsetParent:b,strategy:m}):v);return{top:(w.top-R.top+y.top)/A.y,bottom:(R.bottom-w.bottom+y.bottom)/A.y,left:(w.left-R.left+y.left)/A.x,right:(R.right-w.right+y.right)/A.x}}const f=Math.min,m=Math.max;function u(t,e,n){return m(t,f(e,n))}const g=n=>({name:\"arrow\",options:n,async fn(i){const{x:r,y:s,placement:c,rects:m,platform:g,elements:d}=i,{element:p,padding:h=0}=a(n,i)||{};if(null==p)return{};const y=l(h),x={x:r,y:s},w=o(c),v=e(w),b=await g.getDimensions(p),A=\"y\"===w,R=A?\"top\":\"left\",P=A?\"bottom\":\"right\",E=A?\"clientHeight\":\"clientWidth\",T=m.reference[v]+m.reference[w]-x[w]-m.floating[v],D=x[w]-m.reference[w],L=await(null==g.getOffsetParent?void 0:g.getOffsetParent(p));let k=L?L[E]:0;k&&await(null==g.isElement?void 0:g.isElement(L))||(k=d.floating[E]||m.floating[v]);const O=T/2-D/2,B=k/2-b[v]/2-1,C=f(y[R],B),H=f(y[P],B),S=C,F=k-b[v]-H,M=k/2-b[v]/2+O,V=u(S,M,F),W=null!=t(c)&&M!=V&&m.reference[v]/2-(M<S?C:H)-b[v]/2<0?M<S?S-M:F-M:0;return{[w]:x[w]-W,data:{[w]:V,centerOffset:M-V+W}}}}),d=[\"top\",\"right\",\"bottom\",\"left\"],p=d.reduce(((t,e)=>t.concat(e,e+\"-start\",e+\"-end\")),[]),h={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"};function y(t){return t.replace(/left|right|bottom|top/g,(t=>h[t]))}function x(n,i,r){void 0===r&&(r=!1);const a=t(n),l=o(n),s=e(l);let c=\"x\"===l?a===(r?\"end\":\"start\")?\"right\":\"left\":\"start\"===a?\"bottom\":\"top\";return i.reference[s]>i.floating[s]&&(c=y(c)),{main:c,cross:y(c)}}const w={start:\"end\",end:\"start\"};function v(t){return t.replace(/start|end/g,(t=>w[t]))}const b=function(e){return void 0===e&&(e={}),{name:\"autoPlacement\",options:e,async fn(o){var i,r,l;const{rects:s,middlewareData:f,placement:m,platform:u,elements:g}=o,{crossAxis:d=!1,alignment:h,allowedPlacements:y=p,autoAlignment:w=!0,...b}=a(e,o),A=void 0!==h||y===p?function(e,o,i){return(e?[...i.filter((n=>t(n)===e)),...i.filter((n=>t(n)!==e))]:i.filter((t=>n(t)===t))).filter((n=>!e||t(n)===e||!!o&&v(n)!==n))}(h||null,w,y):y,R=await c(o,b),P=(null==(i=f.autoPlacement)?void 0:i.index)||0,E=A[P];if(null==E)return{};const{main:T,cross:D}=x(E,s,await(null==u.isRTL?void 0:u.isRTL(g.floating)));if(m!==E)return{reset:{placement:A[0]}};const L=[R[n(E)],R[T],R[D]],k=[...(null==(r=f.autoPlacement)?void 0:r.overflows)||[],{placement:E,overflows:L}],O=A[P+1];if(O)return{data:{index:P+1,overflows:k},reset:{placement:O}};const B=k.map((e=>{const n=t(e.placement);return[e.placement,n&&d?e.overflows.slice(0,2).reduce(((t,e)=>t+e),0):e.overflows[0],e.overflows]})).sort(((t,e)=>t[1]-e[1])),C=(null==(l=B.filter((e=>e[2].slice(0,t(e[0])?2:3).every((t=>t<=0))))[0])?void 0:l[0])||B[0][0];return C!==m?{data:{index:P+1,overflows:k},reset:{placement:C}}:{}}}};const A=function(e){return void 0===e&&(e={}),{name:\"flip\",options:e,async fn(o){var i;const{placement:r,middlewareData:l,rects:s,initialPlacement:f,platform:m,elements:u}=o,{mainAxis:g=!0,crossAxis:d=!0,fallbackPlacements:p,fallbackStrategy:h=\"bestFit\",fallbackAxisSideDirection:w=\"none\",flipAlignment:b=!0,...A}=a(e,o),R=n(r),P=n(f)===f,E=await(null==m.isRTL?void 0:m.isRTL(u.floating)),T=p||(P||!b?[y(f)]:function(t){const e=y(t);return[v(t),e,v(e)]}(f));p||\"none\"===w||T.push(...function(e,o,i,r){const a=t(e);let l=function(t,e,n){const o=[\"left\",\"right\"],i=[\"right\",\"left\"],r=[\"top\",\"bottom\"],a=[\"bottom\",\"top\"];switch(t){case\"top\":case\"bottom\":return n?e?i:o:e?o:i;case\"left\":case\"right\":return e?r:a;default:return[]}}(n(e),\"start\"===i,r);return a&&(l=l.map((t=>t+\"-\"+a)),o&&(l=l.concat(l.map(v)))),l}(f,b,w,E));const D=[f,...T],L=await c(o,A),k=[];let O=(null==(i=l.flip)?void 0:i.overflows)||[];if(g&&k.push(L[R]),d){const{main:t,cross:e}=x(r,s,E);k.push(L[t],L[e])}if(O=[...O,{placement:r,overflows:k}],!k.every((t=>t<=0))){var B,C;const t=((null==(B=l.flip)?void 0:B.index)||0)+1,e=D[t];if(e)return{data:{index:t,overflows:O},reset:{placement:e}};let n=null==(C=O.filter((t=>t.overflows[0]<=0)).sort(((t,e)=>t.overflows[1]-e.overflows[1]))[0])?void 0:C.placement;if(!n)switch(h){case\"bestFit\":{var H;const t=null==(H=O.map((t=>[t.placement,t.overflows.filter((t=>t>0)).reduce(((t,e)=>t+e),0)])).sort(((t,e)=>t[1]-e[1]))[0])?void 0:H[0];t&&(n=t);break}case\"initialPlacement\":n=f}if(r!==n)return{reset:{placement:n}}}return{}}}};function R(t,e){return{top:t.top-e.height,right:t.right-e.width,bottom:t.bottom-e.height,left:t.left-e.width}}function P(t){return d.some((e=>t[e]>=0))}const E=function(t){return void 0===t&&(t={}),{name:\"hide\",options:t,async fn(e){const{rects:n}=e,{strategy:o=\"referenceHidden\",...i}=a(t,e);switch(o){case\"referenceHidden\":{const t=R(await c(e,{...i,elementContext:\"reference\"}),n.reference);return{data:{referenceHiddenOffsets:t,referenceHidden:P(t)}}}case\"escaped\":{const t=R(await c(e,{...i,altBoundary:!0}),n.floating);return{data:{escapedOffsets:t,escaped:P(t)}}}default:return{}}}}};function T(t){const e=f(...t.map((t=>t.left))),n=f(...t.map((t=>t.top)));return{x:e,y:n,width:m(...t.map((t=>t.right)))-e,height:m(...t.map((t=>t.bottom)))-n}}const D=function(t){return void 0===t&&(t={}),{name:\"inline\",options:t,async fn(e){const{placement:i,elements:r,rects:c,platform:u,strategy:g}=e,{padding:d=2,x:p,y:h}=a(t,e),y=Array.from(await(null==u.getClientRects?void 0:u.getClientRects(r.reference))||[]),x=function(t){const e=t.slice().sort(((t,e)=>t.y-e.y)),n=[];let o=null;for(let t=0;t<e.length;t++){const i=e[t];!o||i.y-o.y>o.height/2?n.push([i]):n[n.length-1].push(i),o=i}return n.map((t=>s(T(t))))}(y),w=s(T(y)),v=l(d);const b=await u.getElementRects({reference:{getBoundingClientRect:function(){if(2===x.length&&x[0].left>x[1].right&&null!=p&&null!=h)return x.find((t=>p>t.left-v.left&&p<t.right+v.right&&h>t.top-v.top&&h<t.bottom+v.bottom))||w;if(x.length>=2){if(\"x\"===o(i)){const t=x[0],e=x[x.length-1],o=\"top\"===n(i),r=t.top,a=e.bottom,l=o?t.left:e.left,s=o?t.right:e.right;return{top:r,bottom:a,left:l,right:s,width:s-l,height:a-r,x:l,y:r}}const t=\"left\"===n(i),e=m(...x.map((t=>t.right))),r=f(...x.map((t=>t.left))),a=x.filter((n=>t?n.left===r:n.right===e)),l=a[0].top,s=a[a.length-1].bottom;return{top:l,bottom:s,left:r,right:e,width:e-r,height:s-l,x:r,y:l}}return w}},floating:r.floating,strategy:g});return c.reference.x!==b.reference.x||c.reference.y!==b.reference.y||c.reference.width!==b.reference.width||c.reference.height!==b.reference.height?{reset:{rects:b}}:{}}}};const L=function(e){return void 0===e&&(e=0),{name:\"offset\",options:e,async fn(i){const{x:r,y:l}=i,s=await async function(e,i){const{placement:r,platform:l,elements:s}=e,c=await(null==l.isRTL?void 0:l.isRTL(s.floating)),f=n(r),m=t(r),u=\"x\"===o(r),g=[\"left\",\"top\"].includes(f)?-1:1,d=c&&u?-1:1,p=a(i,e);let{mainAxis:h,crossAxis:y,alignmentAxis:x}=\"number\"==typeof p?{mainAxis:p,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...p};return m&&\"number\"==typeof x&&(y=\"end\"===m?-1*x:x),u?{x:y*d,y:h*g}:{x:h*g,y:y*d}}(i,e);return{x:r+s.x,y:l+s.y,data:s}}}};function k(t){return\"x\"===t?\"y\":\"x\"}const O=function(t){return void 0===t&&(t={}),{name:\"shift\",options:t,async fn(e){const{x:i,y:r,placement:l}=e,{mainAxis:s=!0,crossAxis:f=!1,limiter:m={fn:t=>{let{x:e,y:n}=t;return{x:e,y:n}}},...g}=a(t,e),d={x:i,y:r},p=await c(e,g),h=o(n(l)),y=k(h);let x=d[h],w=d[y];if(s){const t=\"y\"===h?\"bottom\":\"right\";x=u(x+p[\"y\"===h?\"top\":\"left\"],x,x-p[t])}if(f){const t=\"y\"===y?\"bottom\":\"right\";w=u(w+p[\"y\"===y?\"top\":\"left\"],w,w-p[t])}const v=m.fn({...e,[h]:x,[y]:w});return{...v,data:{x:v.x-i,y:v.y-r}}}}},B=function(t){return void 0===t&&(t={}),{options:t,fn(e){const{x:i,y:r,placement:l,rects:s,middlewareData:c}=e,{offset:f=0,mainAxis:m=!0,crossAxis:u=!0}=a(t,e),g={x:i,y:r},d=o(l),p=k(d);let h=g[d],y=g[p];const x=a(f,e),w=\"number\"==typeof x?{mainAxis:x,crossAxis:0}:{mainAxis:0,crossAxis:0,...x};if(m){const t=\"y\"===d?\"height\":\"width\",e=s.reference[d]-s.floating[t]+w.mainAxis,n=s.reference[d]+s.reference[t]-w.mainAxis;h<e?h=e:h>n&&(h=n)}if(u){var v,b;const t=\"y\"===d?\"width\":\"height\",e=[\"top\",\"left\"].includes(n(l)),o=s.reference[p]-s.floating[t]+(e&&(null==(v=c.offset)?void 0:v[p])||0)+(e?0:w.crossAxis),i=s.reference[p]+s.reference[t]+(e?0:(null==(b=c.offset)?void 0:b[p])||0)-(e?w.crossAxis:0);y<o?y=o:y>i&&(y=i)}return{[d]:h,[p]:y}}}},C=function(e){return void 0===e&&(e={}),{name:\"size\",options:e,async fn(i){const{placement:r,rects:l,platform:s,elements:u}=i,{apply:g=(()=>{}),...d}=a(e,i),p=await c(i,d),h=n(r),y=t(r),x=\"x\"===o(r),{width:w,height:v}=l.floating;let b,A;\"top\"===h||\"bottom\"===h?(b=h,A=y===(await(null==s.isRTL?void 0:s.isRTL(u.floating))?\"start\":\"end\")?\"left\":\"right\"):(A=h,b=\"end\"===y?\"top\":\"bottom\");const R=v-p[b],P=w-p[A],E=!i.middlewareData.shift;let T=R,D=P;if(x){const t=w-p.left-p.right;D=y||E?f(P,t):t}else{const t=v-p.top-p.bottom;T=y||E?f(R,t):t}if(E&&!y){const t=m(p.left,0),e=m(p.right,0),n=m(p.top,0),o=m(p.bottom,0);x?D=w-2*(0!==t||0!==e?t+e:m(p.left,p.right)):T=v-2*(0!==n||0!==o?n+o:m(p.top,p.bottom))}await g({...i,availableWidth:D,availableHeight:T});const L=await s.getDimensions(u.floating);return w!==L.width||v!==L.height?{reset:{rects:!0}}:{}}}};export{g as arrow,b as autoPlacement,r as computePosition,c as detectOverflow,A as flip,E as hide,D as inline,B as limitShift,L as offset,s as rectToClientRect,O as shift,C as size};\n","import{rectToClientRect as t,computePosition as e}from\"@floating-ui/core\";export{arrow,autoPlacement,detectOverflow,flip,hide,inline,limitShift,offset,shift,size}from\"@floating-ui/core\";function n(t){var e;return(null==t||null==(e=t.ownerDocument)?void 0:e.defaultView)||window}function o(t){return n(t).getComputedStyle(t)}function i(t){return t instanceof n(t).Node}function r(t){return i(t)?(t.nodeName||\"\").toLowerCase():\"#document\"}function c(t){return t instanceof HTMLElement||t instanceof n(t).HTMLElement}function l(t){return\"undefined\"!=typeof ShadowRoot&&(t instanceof n(t).ShadowRoot||t instanceof ShadowRoot)}function s(t){const{overflow:e,overflowX:n,overflowY:i,display:r}=o(t);return/auto|scroll|overlay|hidden|clip/.test(e+i+n)&&![\"inline\",\"contents\"].includes(r)}function f(t){return[\"table\",\"td\",\"th\"].includes(r(t))}function u(t){const e=a(),n=o(t);return\"none\"!==n.transform||\"none\"!==n.perspective||!!n.containerType&&\"normal\"!==n.containerType||!e&&!!n.backdropFilter&&\"none\"!==n.backdropFilter||!e&&!!n.filter&&\"none\"!==n.filter||[\"transform\",\"perspective\",\"filter\"].some((t=>(n.willChange||\"\").includes(t)))||[\"paint\",\"layout\",\"strict\",\"content\"].some((t=>(n.contain||\"\").includes(t)))}function a(){return!(\"undefined\"==typeof CSS||!CSS.supports)&&CSS.supports(\"-webkit-backdrop-filter\",\"none\")}function d(t){return[\"html\",\"body\",\"#document\"].includes(r(t))}const h=Math.min,p=Math.max,m=Math.round,g=Math.floor,y=t=>({x:t,y:t});function w(t){const e=o(t);let n=parseFloat(e.width)||0,i=parseFloat(e.height)||0;const r=c(t),l=r?t.offsetWidth:n,s=r?t.offsetHeight:i,f=m(n)!==l||m(i)!==s;return f&&(n=l,i=s),{width:n,height:i,$:f}}function x(t){return t instanceof Element||t instanceof n(t).Element}function v(t){return x(t)?t:t.contextElement}function b(t){const e=v(t);if(!c(e))return y(1);const n=e.getBoundingClientRect(),{width:o,height:i,$:r}=w(e);let l=(r?m(n.width):n.width)/o,s=(r?m(n.height):n.height)/i;return l&&Number.isFinite(l)||(l=1),s&&Number.isFinite(s)||(s=1),{x:l,y:s}}const L=y(0);function T(t){const e=n(t);return a()&&e.visualViewport?{x:e.visualViewport.offsetLeft,y:e.visualViewport.offsetTop}:L}function R(e,o,i,r){void 0===o&&(o=!1),void 0===i&&(i=!1);const c=e.getBoundingClientRect(),l=v(e);let s=y(1);o&&(r?x(r)&&(s=b(r)):s=b(e));const f=function(t,e,o){return void 0===e&&(e=!1),!(!o||e&&o!==n(t))&&e}(l,i,r)?T(l):y(0);let u=(c.left+f.x)/s.x,a=(c.top+f.y)/s.y,d=c.width/s.x,h=c.height/s.y;if(l){const t=n(l),e=r&&x(r)?n(r):r;let o=t.frameElement;for(;o&&r&&e!==t;){const t=b(o),e=o.getBoundingClientRect(),i=getComputedStyle(o),r=e.left+(o.clientLeft+parseFloat(i.paddingLeft))*t.x,c=e.top+(o.clientTop+parseFloat(i.paddingTop))*t.y;u*=t.x,a*=t.y,d*=t.x,h*=t.y,u+=r,a+=c,o=n(o).frameElement}}return t({width:d,height:h,x:u,y:a})}function E(t){return x(t)?{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}:{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function S(t){var e;return null==(e=(i(t)?t.ownerDocument:t.document)||window.document)?void 0:e.documentElement}function C(t){return R(S(t)).left+E(t).scrollLeft}function F(t){if(\"html\"===r(t))return t;const e=t.assignedSlot||t.parentNode||l(t)&&t.host||S(t);return l(e)?e.host:e}function O(t){const e=F(t);return d(e)?t.ownerDocument?t.ownerDocument.body:t.body:c(e)&&s(e)?e:O(e)}function D(t,e){var o;void 0===e&&(e=[]);const i=O(t),r=i===(null==(o=t.ownerDocument)?void 0:o.body),c=n(i);return r?e.concat(c,c.visualViewport||[],s(i)?i:[]):e.concat(i,D(i))}function H(e,i,r){let l;if(\"viewport\"===i)l=function(t,e){const o=n(t),i=S(t),r=o.visualViewport;let c=i.clientWidth,l=i.clientHeight,s=0,f=0;if(r){c=r.width,l=r.height;const t=a();(!t||t&&\"fixed\"===e)&&(s=r.offsetLeft,f=r.offsetTop)}return{width:c,height:l,x:s,y:f}}(e,r);else if(\"document\"===i)l=function(t){const e=S(t),n=E(t),i=t.ownerDocument.body,r=p(e.scrollWidth,e.clientWidth,i.scrollWidth,i.clientWidth),c=p(e.scrollHeight,e.clientHeight,i.scrollHeight,i.clientHeight);let l=-n.scrollLeft+C(t);const s=-n.scrollTop;return\"rtl\"===o(i).direction&&(l+=p(e.clientWidth,i.clientWidth)-r),{width:r,height:c,x:l,y:s}}(S(e));else if(x(i))l=function(t,e){const n=R(t,!0,\"fixed\"===e),o=n.top+t.clientTop,i=n.left+t.clientLeft,r=c(t)?b(t):y(1);return{width:t.clientWidth*r.x,height:t.clientHeight*r.y,x:i*r.x,y:o*r.y}}(i,r);else{const t=T(e);l={...i,x:i.x-t.x,y:i.y-t.y}}return t(l)}function W(t,e){const n=F(t);return!(n===e||!x(n)||d(n))&&(\"fixed\"===o(n).position||W(n,e))}function M(t,e,n){const o=c(e),i=S(e),l=\"fixed\"===n,f=R(t,!0,l,e);let u={scrollLeft:0,scrollTop:0};const a=y(0);if(o||!o&&!l)if((\"body\"!==r(e)||s(i))&&(u=E(e)),c(e)){const t=R(e,!0,l,e);a.x=t.x+e.clientLeft,a.y=t.y+e.clientTop}else i&&(a.x=C(i));return{x:f.left+u.scrollLeft-a.x,y:f.top+u.scrollTop-a.y,width:f.width,height:f.height}}function z(t,e){return c(t)&&\"fixed\"!==o(t).position?e?e(t):t.offsetParent:null}function P(t,e){const i=n(t);if(!c(t))return i;let l=z(t,e);for(;l&&f(l)&&\"static\"===o(l).position;)l=z(l,e);return l&&(\"html\"===r(l)||\"body\"===r(l)&&\"static\"===o(l).position&&!u(l))?i:l||function(t){let e=F(t);for(;c(e)&&!d(e);){if(u(e))return e;e=F(e)}return null}(t)||i}const V={convertOffsetParentRelativeRectToViewportRelativeRect:function(t){let{rect:e,offsetParent:n,strategy:o}=t;const i=c(n),l=S(n);if(n===l)return e;let f={scrollLeft:0,scrollTop:0},u=y(1);const a=y(0);if((i||!i&&\"fixed\"!==o)&&((\"body\"!==r(n)||s(l))&&(f=E(n)),c(n))){const t=R(n);u=b(n),a.x=t.x+n.clientLeft,a.y=t.y+n.clientTop}return{width:e.width*u.x,height:e.height*u.y,x:e.x*u.x-f.scrollLeft*u.x+a.x,y:e.y*u.y-f.scrollTop*u.y+a.y}},getDocumentElement:S,getClippingRect:function(t){let{element:e,boundary:n,rootBoundary:i,strategy:c}=t;const l=[...\"clippingAncestors\"===n?function(t,e){const n=e.get(t);if(n)return n;let i=D(t).filter((t=>x(t)&&\"body\"!==r(t))),c=null;const l=\"fixed\"===o(t).position;let f=l?F(t):t;for(;x(f)&&!d(f);){const e=o(f),n=u(f);n||\"fixed\"!==e.position||(c=null),(l?!n&&!c:!n&&\"static\"===e.position&&c&&[\"absolute\",\"fixed\"].includes(c.position)||s(f)&&!n&&W(t,f))?i=i.filter((t=>t!==f)):c=e,f=F(f)}return e.set(t,i),i}(e,this._c):[].concat(n),i],f=l[0],a=l.reduce(((t,n)=>{const o=H(e,n,c);return t.top=p(o.top,t.top),t.right=h(o.right,t.right),t.bottom=h(o.bottom,t.bottom),t.left=p(o.left,t.left),t}),H(e,f,c));return{width:a.right-a.left,height:a.bottom-a.top,x:a.left,y:a.top}},getOffsetParent:P,getElementRects:async function(t){let{reference:e,floating:n,strategy:o}=t;const i=this.getOffsetParent||P,r=this.getDimensions;return{reference:M(e,await i(n),o),floating:{x:0,y:0,...await r(n)}}},getClientRects:function(t){return Array.from(t.getClientRects())},getDimensions:function(t){return w(t)},getScale:b,isElement:x,isRTL:function(t){return\"rtl\"===getComputedStyle(t).direction}};function A(t,e,n,o){void 0===o&&(o={});const{ancestorScroll:i=!0,ancestorResize:r=!0,elementResize:c=\"function\"==typeof ResizeObserver,layoutShift:l=\"function\"==typeof IntersectionObserver,animationFrame:s=!1}=o,f=v(t),u=i||r?[...f?D(f):[],...D(e)]:[];u.forEach((t=>{i&&t.addEventListener(\"scroll\",n,{passive:!0}),r&&t.addEventListener(\"resize\",n)}));const a=f&&l?function(t,e){let n,o=null;const i=S(t);function r(){clearTimeout(n),o&&o.disconnect(),o=null}return function c(l,s){void 0===l&&(l=!1),void 0===s&&(s=1),r();const{left:f,top:u,width:a,height:d}=t.getBoundingClientRect();if(l||e(),!a||!d)return;const m={rootMargin:-g(u)+\"px \"+-g(i.clientWidth-(f+a))+\"px \"+-g(i.clientHeight-(u+d))+\"px \"+-g(f)+\"px\",threshold:p(0,h(1,s))||1};let y=!0;function w(t){const e=t[0].intersectionRatio;if(e!==s){if(!y)return c();e?c(!1,e):n=setTimeout((()=>{c(!1,1e-7)}),100)}y=!1}try{o=new IntersectionObserver(w,{...m,root:i.ownerDocument})}catch(t){o=new IntersectionObserver(w,m)}o.observe(t)}(!0),r}(f,n):null;let d,m=-1,y=null;c&&(y=new ResizeObserver((t=>{let[o]=t;o&&o.target===f&&y&&(y.unobserve(e),cancelAnimationFrame(m),m=requestAnimationFrame((()=>{y&&y.observe(e)}))),n()})),f&&!s&&y.observe(f),y.observe(e));let w=s?R(t):null;return s&&function e(){const o=R(t);!w||o.x===w.x&&o.y===w.y&&o.width===w.width&&o.height===w.height||n();w=o,d=requestAnimationFrame(e)}(),n(),()=>{u.forEach((t=>{i&&t.removeEventListener(\"scroll\",n),r&&t.removeEventListener(\"resize\",n)})),a&&a(),y&&y.disconnect(),y=null,s&&cancelAnimationFrame(d)}}const B=(t,n,o)=>{const i=new Map,r={platform:V,...o},c={...r.platform,_c:i};return e(t,n,{...r,platform:c})};export{A as autoUpdate,B as computePosition,D as getOverflowAncestors,V as platform};\n","/*\n* React Tooltip\n* {@link https://github.com/ReactTooltip/react-tooltip}\n* @copyright ReactTooltip Team\n* @license MIT\n*/\nimport e,{createContext as t,useState as r,useCallback as o,useMemo as n,useContext as l,useRef as c,useEffect as i,useLayoutEffect as s}from\"react\";import a from\"classnames\";import{arrow as d,computePosition as u,offset as p,flip as v,shift as m}from\"@floating-ui/dom\";const y=\"react-tooltip-core-styles\",f=\"react-tooltip-base-styles\",h={core:!1,base:!1};function w({css:e,id:t=f,type:r=\"base\",ref:o}){var n,l;if(!e||\"undefined\"==typeof document||h[r])return;if(\"core\"===r&&\"undefined\"!=typeof process&&(null===(n=null===process||void 0===process?void 0:process.env)||void 0===n?void 0:n.REACT_TOOLTIP_DISABLE_CORE_STYLES))return;if(\"base\"!==r&&\"undefined\"!=typeof process&&(null===(l=null===process||void 0===process?void 0:process.env)||void 0===l?void 0:l.REACT_TOOLTIP_DISABLE_BASE_STYLES))return;\"core\"===r&&(t=y),o||(o={});const{insertAt:c}=o;if(document.getElementById(t))return void console.warn(`[react-tooltip] Element with id '${t}' already exists. Call \\`removeStyle()\\` first`);const i=document.head||document.getElementsByTagName(\"head\")[0],s=document.createElement(\"style\");s.id=t,s.type=\"text/css\",\"top\"===c&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e)),h[r]=!0}function b({type:e=\"base\",id:t=f}={}){if(!h[e])return;\"core\"===e&&(t=y);const r=document.getElementById(t);\"style\"===(null==r?void 0:r.tagName)?null==r||r.remove():console.warn(`[react-tooltip] Failed to remove 'style' element with id '${t}'. Call \\`injectStyle()\\` first`),h[e]=!1}const S=(e,t,r)=>{let o=null;return function(...n){const l=()=>{o=null,r||e.apply(this,n)};r&&!o&&(e.apply(this,n),o=setTimeout(l,t)),r||(o&&clearTimeout(o),o=setTimeout(l,t))}},E=\"DEFAULT_TOOLTIP_ID\",g={anchorRefs:new Set,activeAnchor:{current:null},attach:()=>{},detach:()=>{},setActiveAnchor:()=>{}},_=t({getTooltipData:()=>g}),A=({children:t})=>{const[l,c]=r({[E]:new Set}),[i,s]=r({[E]:{current:null}}),a=(e,...t)=>{c((r=>{var o;const n=null!==(o=r[e])&&void 0!==o?o:new Set;return t.forEach((e=>n.add(e))),{...r,[e]:new Set(n)}}))},d=(e,...t)=>{c((r=>{const o=r[e];return o?(t.forEach((e=>o.delete(e))),{...r}):r}))},u=o(((e=E)=>{var t,r;return{anchorRefs:null!==(t=l[e])&&void 0!==t?t:new Set,activeAnchor:null!==(r=i[e])&&void 0!==r?r:{current:null},attach:(...t)=>a(e,...t),detach:(...t)=>d(e,...t),setActiveAnchor:t=>((e,t)=>{s((r=>{var o;return(null===(o=r[e])||void 0===o?void 0:o.current)===t.current?r:{...r,[e]:t}}))})(e,t)}}),[l,i,a,d]),p=n((()=>({getTooltipData:u})),[u]);return e.createElement(_.Provider,{value:p},t)};function T(e=E){return l(_).getTooltipData(e)}const L=({tooltipId:t,children:r,className:o,place:n,content:l,html:s,variant:d,offset:u,wrapper:p,events:v,positionStrategy:m,delayShow:y,delayHide:f})=>{const{attach:h,detach:w}=T(t),b=c(null);return i((()=>(h(b),()=>{w(b)})),[]),e.createElement(\"span\",{ref:b,className:a(\"react-tooltip-wrapper\",o),\"data-tooltip-place\":n,\"data-tooltip-content\":l,\"data-tooltip-html\":s,\"data-tooltip-variant\":d,\"data-tooltip-offset\":u,\"data-tooltip-wrapper\":p,\"data-tooltip-events\":v,\"data-tooltip-position-strategy\":m,\"data-tooltip-delay-show\":y,\"data-tooltip-delay-hide\":f},r)},O=\"undefined\"!=typeof window?s:i,R=e=>{if(!(e instanceof HTMLElement||e instanceof SVGElement))return!1;const t=getComputedStyle(e);return[\"overflow\",\"overflow-x\",\"overflow-y\"].some((e=>{const r=t.getPropertyValue(e);return\"auto\"===r||\"scroll\"===r}))},N=e=>{if(!e)return null;let t=e.parentElement;for(;t;){if(R(t))return t;t=t.parentElement}return document.scrollingElement||document.documentElement},x=async({elementReference:e=null,tooltipReference:t=null,tooltipArrowReference:r=null,place:o=\"top\",offset:n=10,strategy:l=\"absolute\",middlewares:c=[p(Number(n)),v(),m({padding:5})],border:i})=>{if(!e)return{tooltipStyles:{},tooltipArrowStyles:{},place:o};if(null===t)return{tooltipStyles:{},tooltipArrowStyles:{},place:o};const s=c;return r?(s.push(d({element:r,padding:5})),u(e,t,{placement:o,strategy:l,middleware:s}).then((({x:e,y:t,placement:r,middlewareData:o})=>{var n,l;const c={left:`${e}px`,top:`${t}px`,border:i},{x:s,y:a}=null!==(n=o.arrow)&&void 0!==n?n:{x:0,y:0},d=null!==(l={top:\"bottom\",right:\"left\",bottom:\"top\",left:\"right\"}[r.split(\"-\")[0]])&&void 0!==l?l:\"bottom\",u=i&&{top:{borderBottom:i,borderRight:i},right:{borderBottom:i,borderLeft:i},bottom:{borderTop:i,borderLeft:i},left:{borderTop:i,borderRight:i}}[r.split(\"-\")[0]];let p=0;if(i){const e=`${i}`.match(/(\\d+)px/);p=(null==e?void 0:e[1])?Number(e[1]):1}return{tooltipStyles:c,tooltipArrowStyles:{left:null!=s?`${s}px`:\"\",top:null!=a?`${a}px`:\"\",right:\"\",bottom:\"\",...u,[d]:`-${4+p}px`},place:r}}))):u(e,t,{placement:\"bottom\",strategy:l,middleware:s}).then((({x:e,y:t,placement:r})=>({tooltipStyles:{left:`${e}px`,top:`${t}px`},tooltipArrowStyles:{},place:r})))};var k=\"core-styles-module_tooltip__3vRRp\",$=\"core-styles-module_fixed__pcSol\",C=\"core-styles-module_arrow__cvMwQ\",I=\"core-styles-module_noArrow__xock6\",B=\"core-styles-module_clickable__ZuTTB\",j=\"core-styles-module_show__Nt9eE\",D={tooltip:\"styles-module_tooltip__mnnfp\",arrow:\"styles-module_arrow__K0L3T\",dark:\"styles-module_dark__xNqje\",light:\"styles-module_light__Z6W-X\",success:\"styles-module_success__A2AKt\",warning:\"styles-module_warning__SCK0X\",error:\"styles-module_error__JvumD\",info:\"styles-module_info__BWdHW\"};const H=({id:t,className:o,classNameArrow:n,variant:l=\"dark\",anchorId:s,anchorSelect:d,place:u=\"top\",offset:p=10,events:v=[\"hover\"],openOnClick:m=!1,positionStrategy:y=\"absolute\",middlewares:f,wrapper:h,delayShow:w=0,delayHide:b=0,float:E=!1,hidden:g=!1,noArrow:_=!1,clickable:A=!1,closeOnEsc:L=!1,closeOnScroll:R=!1,closeOnResize:H=!1,style:q,position:z,afterShow:W,afterHide:M,content:P,contentWrapperRef:F,isOpen:K,setIsOpen:U,activeAnchor:X,setActiveAnchor:Y,border:V,opacity:Z})=>{const G=c(null),J=c(null),Q=c(null),ee=c(null),[te,re]=r(u),[oe,ne]=r({}),[le,ce]=r({}),[ie,se]=r(!1),[ae,de]=r(!1),ue=c(!1),pe=c(null),{anchorRefs:ve,setActiveAnchor:me}=T(t),ye=c(!1),[fe,he]=r([]),we=c(!1),be=m||v.includes(\"click\");O((()=>(we.current=!0,()=>{we.current=!1})),[]),i((()=>{if(!ie){const e=setTimeout((()=>{de(!1)}),150);return()=>{clearTimeout(e)}}return()=>null}),[ie]);const Se=e=>{we.current&&(e&&de(!0),setTimeout((()=>{we.current&&(null==U||U(e),void 0===K&&se(e))}),10))};i((()=>{if(void 0===K)return()=>null;K&&de(!0);const e=setTimeout((()=>{se(K)}),10);return()=>{clearTimeout(e)}}),[K]),i((()=>{ie!==ue.current&&(ue.current=ie,ie?null==W||W():null==M||M())}),[ie]);const Ee=(e=b)=>{ee.current&&clearTimeout(ee.current),ee.current=setTimeout((()=>{ye.current||Se(!1)}),e)},ge=e=>{var t;if(!e)return;const r=null!==(t=e.currentTarget)&&void 0!==t?t:e.target;if(!(null==r?void 0:r.isConnected))return Y(null),void me({current:null});w?(Q.current&&clearTimeout(Q.current),Q.current=setTimeout((()=>{Se(!0)}),w)):Se(!0),Y(r),me({current:r}),ee.current&&clearTimeout(ee.current)},_e=()=>{A?Ee(b||100):b?Ee():Se(!1),Q.current&&clearTimeout(Q.current)},Ae=({x:e,y:t})=>{x({place:u,offset:p,elementReference:{getBoundingClientRect:()=>({x:e,y:t,width:0,height:0,top:t,left:e,right:e,bottom:t})},tooltipReference:G.current,tooltipArrowReference:J.current,strategy:y,middlewares:f,border:V}).then((e=>{Object.keys(e.tooltipStyles).length&&ne(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&ce(e.tooltipArrowStyles),re(e.place)}))},Te=e=>{if(!e)return;const t=e,r={x:t.clientX,y:t.clientY};Ae(r),pe.current=r},Le=e=>{ge(e),b&&Ee()},Oe=e=>{var t;[document.querySelector(`[id='${s}']`),...fe].some((t=>null==t?void 0:t.contains(e.target)))||(null===(t=G.current)||void 0===t?void 0:t.contains(e.target))||(Se(!1),Q.current&&clearTimeout(Q.current))},Re=S(ge,50,!0),Ne=S(_e,50,!0);i((()=>{var e,t;const r=new Set(ve);fe.forEach((e=>{r.add({current:e})}));const o=document.querySelector(`[id='${s}']`);o&&r.add({current:o});const n=()=>{Se(!1)},l=N(X),c=N(G.current);R&&(window.addEventListener(\"scroll\",n),null==l||l.addEventListener(\"scroll\",n),null==c||c.addEventListener(\"scroll\",n)),H&&window.addEventListener(\"resize\",n);const i=e=>{\"Escape\"===e.key&&Se(!1)};L&&window.addEventListener(\"keydown\",i);const a=[];be?(window.addEventListener(\"click\",Oe),a.push({event:\"click\",listener:Le})):(a.push({event:\"mouseenter\",listener:Re},{event:\"mouseleave\",listener:Ne},{event:\"focus\",listener:Re},{event:\"blur\",listener:Ne}),E&&a.push({event:\"mousemove\",listener:Te}));const d=()=>{ye.current=!0},u=()=>{ye.current=!1,_e()};return A&&!be&&(null===(e=G.current)||void 0===e||e.addEventListener(\"mouseenter\",d),null===(t=G.current)||void 0===t||t.addEventListener(\"mouseleave\",u)),a.forEach((({event:e,listener:t})=>{r.forEach((r=>{var o;null===(o=r.current)||void 0===o||o.addEventListener(e,t)}))})),()=>{var e,t;R&&(window.removeEventListener(\"scroll\",n),null==l||l.removeEventListener(\"scroll\",n),null==c||c.removeEventListener(\"scroll\",n)),H&&window.removeEventListener(\"resize\",n),be&&window.removeEventListener(\"click\",Oe),L&&window.removeEventListener(\"keydown\",i),A&&!be&&(null===(e=G.current)||void 0===e||e.removeEventListener(\"mouseenter\",d),null===(t=G.current)||void 0===t||t.removeEventListener(\"mouseleave\",u)),a.forEach((({event:e,listener:t})=>{r.forEach((r=>{var o;null===(o=r.current)||void 0===o||o.removeEventListener(e,t)}))}))}}),[ae,ve,fe,L,v]),i((()=>{let e=null!=d?d:\"\";!e&&t&&(e=`[data-tooltip-id='${t}']`);const r=new MutationObserver((r=>{const o=[];r.forEach((r=>{if(\"attributes\"===r.type&&\"data-tooltip-id\"===r.attributeName){r.target.getAttribute(\"data-tooltip-id\")===t&&o.push(r.target)}if(\"childList\"===r.type&&(X&&[...r.removedNodes].some((e=>{var t;return!!(null===(t=null==e?void 0:e.contains)||void 0===t?void 0:t.call(e,X))&&(de(!1),Se(!1),Y(null),Q.current&&clearTimeout(Q.current),ee.current&&clearTimeout(ee.current),!0)})),e))try{const t=[...r.addedNodes].filter((e=>1===e.nodeType));o.push(...t.filter((t=>t.matches(e)))),o.push(...t.flatMap((t=>[...t.querySelectorAll(e)])))}catch(e){}})),o.length&&he((e=>[...e,...o]))}));return r.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:[\"data-tooltip-id\"]}),()=>{r.disconnect()}}),[t,d,X]);const xe=()=>{z?Ae(z):E?pe.current&&Ae(pe.current):x({place:u,offset:p,elementReference:X,tooltipReference:G.current,tooltipArrowReference:J.current,strategy:y,middlewares:f,border:V}).then((e=>{we.current&&(Object.keys(e.tooltipStyles).length&&ne(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&ce(e.tooltipArrowStyles),re(e.place))}))};i((()=>{xe()}),[ie,X,P,q,u,p,y,z]),i((()=>{if(!(null==F?void 0:F.current))return()=>null;const e=new ResizeObserver((()=>{xe()}));return e.observe(F.current),()=>{e.disconnect()}}),[P,null==F?void 0:F.current]),i((()=>{var e;const t=document.querySelector(`[id='${s}']`),r=[...fe,t];X&&r.includes(X)||Y(null!==(e=fe[0])&&void 0!==e?e:t)}),[s,fe,X]),i((()=>()=>{Q.current&&clearTimeout(Q.current),ee.current&&clearTimeout(ee.current)}),[]),i((()=>{let e=d;if(!e&&t&&(e=`[data-tooltip-id='${t}']`),e)try{const t=Array.from(document.querySelectorAll(e));he(t)}catch(e){he([])}}),[t,d]);const ke=!g&&P&&ie&&Object.keys(oe).length>0;return ae?e.createElement(h,{id:t,role:\"tooltip\",className:a(\"react-tooltip\",k,D.tooltip,D[l],o,`react-tooltip__place-${te}`,{[j]:ke,[$]:\"fixed\"===y,[B]:A}),style:{...q,...oe,opacity:void 0!==Z&&ke?Z:void 0},ref:G},P,e.createElement(h,{className:a(\"react-tooltip-arrow\",C,D.arrow,n,{[I]:_}),style:le,ref:J})):null},q=({content:t})=>e.createElement(\"span\",{dangerouslySetInnerHTML:{__html:t}}),z=({id:t,anchorId:o,anchorSelect:n,content:l,html:s,render:a,className:d,classNameArrow:u,variant:p=\"dark\",place:v=\"top\",offset:m=10,wrapper:y=\"div\",children:f=null,events:h=[\"hover\"],openOnClick:w=!1,positionStrategy:b=\"absolute\",middlewares:S,delayShow:E=0,delayHide:g=0,float:_=!1,hidden:A=!1,noArrow:L=!1,clickable:O=!1,closeOnEsc:R=!1,closeOnScroll:N=!1,closeOnResize:x=!1,style:k,position:$,isOpen:C,disableStyleInjection:I=!1,border:B,opacity:j,setIsOpen:D,afterShow:z,afterHide:W})=>{const[M,P]=r(l),[F,K]=r(s),[U,X]=r(v),[Y,V]=r(p),[Z,G]=r(m),[J,Q]=r(E),[ee,te]=r(g),[re,oe]=r(_),[ne,le]=r(A),[ce,ie]=r(y),[se,ae]=r(h),[de,ue]=r(b),[pe,ve]=r(null),me=c(I),{anchorRefs:ye,activeAnchor:fe}=T(t),he=e=>null==e?void 0:e.getAttributeNames().reduce(((t,r)=>{var o;if(r.startsWith(\"data-tooltip-\")){t[r.replace(/^data-tooltip-/,\"\")]=null!==(o=null==e?void 0:e.getAttribute(r))&&void 0!==o?o:null}return t}),{}),we=e=>{const t={place:e=>{var t;X(null!==(t=e)&&void 0!==t?t:v)},content:e=>{P(null!=e?e:l)},html:e=>{K(null!=e?e:s)},variant:e=>{var t;V(null!==(t=e)&&void 0!==t?t:p)},offset:e=>{G(null===e?m:Number(e))},wrapper:e=>{var t;ie(null!==(t=e)&&void 0!==t?t:y)},events:e=>{const t=null==e?void 0:e.split(\" \");ae(null!=t?t:h)},\"position-strategy\":e=>{var t;ue(null!==(t=e)&&void 0!==t?t:b)},\"delay-show\":e=>{Q(null===e?E:Number(e))},\"delay-hide\":e=>{te(null===e?g:Number(e))},float:e=>{oe(null===e?_:\"true\"===e)},hidden:e=>{le(null===e?A:\"true\"===e)}};Object.values(t).forEach((e=>e(null))),Object.entries(e).forEach((([e,r])=>{var o;null===(o=t[e])||void 0===o||o.call(t,r)}))};i((()=>{P(l)}),[l]),i((()=>{K(s)}),[s]),i((()=>{X(v)}),[v]),i((()=>{V(p)}),[p]),i((()=>{G(m)}),[m]),i((()=>{Q(E)}),[E]),i((()=>{te(g)}),[g]),i((()=>{oe(_)}),[_]),i((()=>{le(A)}),[A]),i((()=>{ue(b)}),[b]),i((()=>{me.current!==I&&console.warn(\"[react-tooltip] Do not change `disableStyleInjection` dynamically.\")}),[I]),i((()=>{\"undefined\"!=typeof window&&window.dispatchEvent(new CustomEvent(\"react-tooltip-inject-styles\",{detail:{disableCore:\"core\"===I,disableBase:I}}))}),[]),i((()=>{var e;const r=new Set(ye);let l=n;if(!l&&t&&(l=`[data-tooltip-id='${t}']`),l)try{document.querySelectorAll(l).forEach((e=>{r.add({current:e})}))}catch(e){console.warn(`[react-tooltip] \"${l}\" is not a valid CSS selector`)}const c=document.querySelector(`[id='${o}']`);if(c&&r.add({current:c}),!r.size)return()=>null;const i=null!==(e=null!=pe?pe:c)&&void 0!==e?e:fe.current,s=new MutationObserver((e=>{e.forEach((e=>{var t;if(!i||\"attributes\"!==e.type||!(null===(t=e.attributeName)||void 0===t?void 0:t.startsWith(\"data-tooltip-\")))return;const r=he(i);we(r)}))})),a={attributes:!0,childList:!1,subtree:!1};if(i){const e=he(i);we(e),s.observe(i,a)}return()=>{s.disconnect()}}),[ye,fe,pe,o,n]),i((()=>{(null==k?void 0:k.border)&&console.warn(\"[react-tooltip] Do not set `style.border`. Use `border` prop instead.\"),B&&!CSS.supports(\"border\",`${B}`)&&console.warn(`[react-tooltip] \"${B}\" is not a valid \\`border\\`.`),(null==k?void 0:k.opacity)&&console.warn(\"[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.\"),j&&!CSS.supports(\"opacity\",`${j}`)&&console.warn(`[react-tooltip] \"${j}\" is not a valid \\`opacity\\`.`)}),[]);let be=f;const Se=c(null);if(a){const t=a({content:null!=M?M:null,activeAnchor:pe});be=t?e.createElement(\"div\",{ref:Se,className:\"react-tooltip-content-wrapper\"},t):null}else M&&(be=M);F&&(be=e.createElement(q,{content:F}));const Ee={id:t,anchorId:o,anchorSelect:n,className:d,classNameArrow:u,content:be,contentWrapperRef:Se,place:U,variant:Y,offset:Z,wrapper:ce,events:se,openOnClick:w,positionStrategy:de,middlewares:S,delayShow:J,delayHide:ee,float:re,hidden:ne,noArrow:L,clickable:O,closeOnEsc:R,closeOnScroll:N,closeOnResize:x,style:k,position:$,isOpen:C,border:B,opacity:j,setIsOpen:D,afterShow:z,afterHide:W,activeAnchor:pe,setActiveAnchor:e=>ve(e)};return e.createElement(H,{...Ee})};\"undefined\"!=typeof window&&window.addEventListener(\"react-tooltip-inject-styles\",(e=>{e.detail.disableCore||w({css:`:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9}.core-styles-module_tooltip__3vRRp{visibility:hidden;position:absolute;top:0;left:0;pointer-events:none;opacity:0;transition:opacity 0.3s ease-out;will-change:opacity,visibility}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{visibility:visible;opacity:var(--rt-opacity)}`,type:\"core\"}),e.detail.disableBase||w({css:`\n.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px;transform:rotate(45deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}`,type:\"base\"})}));export{z as Tooltip,A as TooltipProvider,L as TooltipWrapper,b as removeStyle};\n","import { DEFAULT_CRITICAL_COLOR, DEFAULT_OK_COLOR, DEFAULT_WARNING_COLOR } from '../../components/defaults';\nimport React from 'react';\n\nimport { Color } from './color';\n\nexport interface GradientProps {\n  data: any;\n  gradientId: string;\n}\nexport const Gradients: React.FC<GradientProps> = (options) => {\n  const pureLight = new Color(255, 255, 255);\n\n  const createGradients = (data: any): any => {\n    const gradients = [];\n    const pureLight = new Color(255, 255, 255);\n    for (let i = 0; i < data.length; i++) {\n      const aColorStart = new Color(0, 0, 0);\n      // color can be in hex or in rgb\n      let useColor: string = data[i].color;\n      if (useColor.startsWith('rgba')) {\n        useColor = Color.RGBAToHex(useColor);\n      }\n      aColorStart.fromHex(useColor);\n      const aColorEnd = aColorStart.Mul(pureLight, 0.7);\n      gradients.push({ start: aColorStart.asHex(), end: aColorEnd.asHex() });\n    }\n    return gradients;\n  };\n  const colorGradients = createGradients(options.data);\n  const okColorStart = DEFAULT_OK_COLOR; // '#299c46', // \"rgba(50, 172, 45, 1)\", // green\n  const okColorEnd = okColorStart.Mul(pureLight, 0.7);\n  const warningColorStart = DEFAULT_WARNING_COLOR; // #FFC837 // '#e5ac0e', // \"rgba(237, 129, 40, 1)\", // yellow\n  const warningColorEnd = warningColorStart.Mul(pureLight, 0.7);\n  const criticalColorStart = DEFAULT_CRITICAL_COLOR; // #e52d27 // '#bf1b00', // \"rgba(245, 54, 54, 1)\", // red\n  const criticalColorEnd = criticalColorStart.Mul(pureLight, 0.7);\n\n  const gradientId = options.gradientId;\n  return (\n    <>\n      <defs>\n        {colorGradients.map((aGradient: any, index: number) => {\n          return (\n            <linearGradient\n              key={index}\n              id={gradientId + '_linear_gradient_state_data_' + index}\n              x1={'30%'}\n              y1={'30%'}\n              x2={'70%'}\n              y2={'70%'}\n            >\n              <stop offset={'0%'} stopColor={aGradient.start} />\n              <stop offset={'100%'} stopColor={aGradient.end} />\n            </linearGradient>\n          );\n        })}\n        <linearGradient id={gradientId + '_linear_gradient_state_ok'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={okColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={okColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_warning'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={warningColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={warningColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient-state_critical'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={criticalColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={criticalColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_unknown'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={'#73808A'} />\n          <stop offset={'100%'} stopColor={'#73808A'} />\n        </linearGradient>\n      </defs>\n    </>\n  );\n};\n","import * as d3 from 'd3';\nimport { PolygonShapes, PolystatDiameters } from '../types';\n/**\n * LayoutManager creates layouts for supported polygon shapes\n */\nexport class LayoutManager {\n  width: number;\n  height: number;\n  numColumns: number;\n  numRows: number;\n  radius: number;\n  autoSize: boolean;\n  maxRowsUsed: number;\n  maxColumnsUsed: number;\n  displayLimit: number;\n  shape: PolygonShapes;\n  readonly SQRT3 = 1.7320508075688772;\n\n  constructor(\n    width: number,\n    height: number,\n    numColumns: number,\n    numRows: number,\n    displayLimit: number,\n    autoSize: boolean,\n    shape: PolygonShapes\n  ) {\n    this.width = width;\n    this.height = height;\n    // check for less than 1 or NaN, force to 8\n    if (numColumns < 1 || isNaN(numColumns)) {\n      this.numColumns = 8;\n    } else {\n      this.numColumns = numColumns;\n    }\n    // check for less than 1 or NaN, force to 8\n    if (numRows < 1 || isNaN(numRows)) {\n      this.numRows = 8;\n    } else {\n      this.numRows = numRows;\n    }\n\n    this.maxColumnsUsed = 0;\n    this.maxRowsUsed = 0;\n\n    // negative or NaN limit gets set to 100, 0 is allowed for unlimited\n    if (displayLimit < 0 || isNaN(displayLimit)) {\n      this.displayLimit = 100;\n    } else {\n      this.displayLimit = displayLimit;\n    }\n    this.shape = shape;\n    this.radius = 0;\n    this.autoSize = autoSize;\n  }\n\n  /**\n   * Sets the radius to be used in all layout calculations\n   *\n   * @param radius user defined value\n   */\n  setRadius(radius: number) {\n    this.radius = radius;\n  }\n  setHeight(height: number) {\n    this.height = height;\n  }\n  setWidth(width: number) {\n    this.width = width;\n  }\n  /**\n   * returns a layout for hexagons with pointed tops\n   */\n  generateHexagonPointedTopLayout(): any {\n    const layout = {};\n    this.radius = this.getHexFlatTopRadius();\n    return layout;\n  }\n\n  /**\n   * returns a layout for square-shapes\n   */\n  generateUniformLayout(): any {\n    const layout = {};\n    this.radius = this.getUniformRadius();\n    return layout;\n  }\n\n  /**\n   * The maximum radius the hexagons can have to still fit the screen\n   * With (long) radius being R:\n   *  - Total width (rows > 1) = 1 small radius (sqrt(3) * R / 2) + columns * small diameter (sqrt(3) * R)\n   *  - Total height = 1 pointy top (1/2 * R) + rows * size of the rest (3/2 * R)\n   */\n  getHexFlatTopRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    if (hexRadius !== undefined) {\n      hexRadius = hexRadius - polygonBorderSize;\n      return this.truncateFloat(hexRadius);\n    }\n    // default to a reasonable value (should not happen though)\n    return 40;\n  }\n\n  /**\n   * Helper method to return rendered width and height of hexagon shape\n   */\n  getHexFlatTopDiameters(): PolystatDiameters {\n    const hexRadius = this.getHexFlatTopRadius();\n    const diameterX = this.truncateFloat(hexRadius * this.SQRT3);\n    const diameterY = this.truncateFloat(hexRadius * 2);\n    return { diameterX, diameterY };\n  }\n\n  /**\n   * Helper method to return rendered width and height of a circle/square shapes\n   */\n  getUniformDiameters(): PolystatDiameters {\n    const radius = this.getUniformRadius();\n    const diameterX = radius * 2;\n    const diameterY = radius * 2;\n    return { diameterX, diameterY };\n  }\n  /**\n   * Given the number of columns and rows, calculate the maximum size of a uniform shaped polygon that can be used\n   *   uniformed shapes are: square/circle\n   * width divided by the number of columns determines the max horizontal of the square\n   * height divided by the number of rows determines the max vertical size of the square\n   * the smaller of the two is used since that is the \"best fit\" for a square\n   */\n  getUniformRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    // width divided by the number of columns determines the max horizontal of the square\n    // height divided by the number of rows determines the max vertical size of the square\n    // the smaller of the two is used since that is the \"best fit\"\n    const horizontalMax = (this.width / this.maxColumnsUsed) * 0.5;\n    const verticalMax = (this.height / this.maxRowsUsed) * 0.5;\n    let uniformRadius = horizontalMax;\n    if (uniformRadius > verticalMax) {\n      // vertically limited\n      uniformRadius = verticalMax;\n    }\n    // internal border\n    uniformRadius = uniformRadius - polygonBorderSize;\n    return this.truncateFloat(uniformRadius);\n  }\n\n  generatePossibleColumnAndRowsSizes(columnAutoSize: boolean, rowAutoSize: boolean, dataSize: number) {\n    if (rowAutoSize && columnAutoSize) {\n      // sqrt of # data items\n      const squared = Math.sqrt(dataSize);\n      // favor columns when width is greater than height\n      // favor rows when width is less than height\n      if (this.width > this.height) {\n        this.numColumns = Math.ceil((this.width / this.height) * squared * 0.75);\n        // always at least 1 column and max. data.length columns\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        } else if (this.numColumns > dataSize) {\n          this.numColumns = dataSize;\n        }\n\n        // Align rows count to computed columns count\n        this.numRows = Math.ceil(dataSize / this.numColumns);\n        // always at least 1 row\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        }\n      } else {\n        this.numRows = Math.ceil((this.height / this.width) * squared * 0.75);\n        // always at least 1 row and max. data.length rows\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        } else if (this.numRows > dataSize) {\n          this.numRows = dataSize;\n        }\n        // Align columns count to computed rows count\n        this.numColumns = Math.ceil(dataSize / this.numRows);\n        // always at least 1 column\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        }\n      }\n    } else if (rowAutoSize) {\n      // Align rows count to fixed columns count\n      this.numRows = Math.ceil(dataSize / this.numColumns);\n      // always at least 1 row\n      if (this.numRows < 1) {\n        this.numRows = 1;\n      }\n    } else if (columnAutoSize) {\n      // Align columns count to fixed rows count\n      this.numColumns = Math.ceil(dataSize / this.numRows);\n      // always at least 1 column\n      if (this.numColumns < 1) {\n        this.numColumns = 1;\n      }\n    }\n  }\n\n  /**\n   * This determines how many rows and columns are going to be rendered, which can then\n   * be used to calculate the radius size (which is needed before generating points)\n   * @param data metrics\n   * @param displayLimit max number of polygons to show\n   */\n  generateActualColumnAndRowUsage(data: any, displayLimit: number) {\n    let polygonsUsed = 0;\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            polygonsUsed++;\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n  }\n\n  shapeToCoordinates(shape: PolygonShapes, radius: number, column: number, row: number) {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        let x = radius * column * this.SQRT3;\n        //Offset each uneven row by half of a \"hex-width\" to the right\n        if (row % 2 === 1) {\n          x += (radius * this.SQRT3) / 2;\n        }\n        const y = radius * row * 1.5;\n        return [x, y];\n        break;\n      case PolygonShapes.CIRCLE:\n        return [radius * column * 2, radius * row * 2];\n        break;\n      case PolygonShapes.SQUARE:\n        return [radius * column * 2, radius * row * 2];\n        break;\n      default:\n        return [radius * column * 1.75, radius * row * 1.5];\n        break;\n    }\n  }\n\n  // Builds the placeholder polygons needed to represent each metric\n  generatePoints(data: any, displayLimit: number, shape: PolygonShapes): any {\n    const points = [] as any;\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            points.push(this.shapeToCoordinates(shape, this.radius, j, i));\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateUniformPoints(data: any, displayLimit: number): any {\n    const points = [] as any;\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    let xPos = 1;\n    let yPos = 1;\n\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            points.push({\n              x: xPos,\n              y: yPos,\n              width: this.radius * 2,\n              height: this.radius * 2,\n            });\n            xPos += this.radius * 2;\n          }\n        }\n        xPos = 1;\n        yPos += this.radius * 2;\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  getRadius(): number {\n    return this.radius;\n  }\n\n  generateRadius(shape: PolygonShapes): number {\n    if (!this.autoSize) {\n      return this.radius;\n    }\n    let radius = 0;\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        radius = this.getHexFlatTopRadius();\n        break;\n      case PolygonShapes.CIRCLE:\n        radius = this.getUniformRadius();\n        break;\n      case PolygonShapes.SQUARE:\n        radius = this.getUniformRadius();\n        break;\n      default:\n        radius = this.getHexFlatTopRadius();\n        break;\n    }\n    this.radius = radius;\n    return radius;\n  }\n\n  truncateFloat(value: number): number {\n    if (value === Infinity || isNaN(value)) {\n      return 0;\n    }\n    const matches = value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/);\n    if (matches !== null && matches.length > 0) {\n      return Number(matches[0]);\n    }\n    return 0;\n  }\n\n  getOffsets(shape: PolygonShapes, dataSize: number): any {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getOffsetsHexagonPointedTop(dataSize);\n      case PolygonShapes.SQUARE:\n        return this.getOffsetsSquare(dataSize);\n      case PolygonShapes.CIRCLE:\n        return this.getOffsetsUniform(dataSize);\n      default:\n        return this.getOffsetsUniform(dataSize);\n    }\n  }\n\n  getOffsetsHexagonPointedTop(dataSize: number): any {\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    hexRadius = this.truncateFloat(hexRadius as number);\n    const shapeWidth = this.truncateFloat(hexRadius * this.SQRT3);\n    const shapeHeight = this.truncateFloat(hexRadius * 2);\n\n    const offsetToViewY = shapeHeight * 0.5;\n    // even rows are half-sized\n    const { oddCount, evenCount } = this.getOddEvenCountForRange(1, this.maxRowsUsed);\n    // odd-numbered hexagons are full height, evens are half height\n    const actualHeightUsed = oddCount * shapeHeight + evenCount * shapeHeight * 0.5;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n\n    const offsetToViewX = shapeWidth * 0.5;\n    // columns have a half-width offset if there are more than 1 rows\n    let widthOffset = 0;\n    if (this.numRows > 1) {\n      // if the dataSize is equal to or larger than the 2*Columns, there is an additional offset needed\n      if (dataSize >= this.maxColumnsUsed * 2) {\n        widthOffset = 0.5;\n      }\n    }\n    const actualWidthUsed = (this.numColumns + widthOffset) * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsUniform(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsSquare(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = 0; // shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = 0; //shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOddEvenCountForRange(L: number, R: number): any {\n    let oddCount = (R - L) / 2;\n    // if either R or L is odd\n    if (R % 2 !== 0 || L % 2 !== 0) {\n      oddCount++;\n    }\n    const evenCount = R - L + 1 - oddCount;\n    return { oddCount, evenCount };\n  }\n\n  /**\n   * Returns diameterX and diameterY for given shape\n   */\n  getDiameters(): PolystatDiameters {\n    switch (this.shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getHexFlatTopDiameters();\n      case PolygonShapes.SQUARE:\n        return this.getUniformDiameters();\n      case PolygonShapes.CIRCLE:\n        return this.getUniformDiameters();\n      default:\n        return this.getUniformDiameters();\n    }\n  }\n}\n","import { sortBy as lodashSortBy, toLower as lodashToLower, isNumber as lodashIsNumber } from 'lodash';\n\nfunction GetDecimalsForValue(value: any, panelDecimals: any): { decimals: number; scaledDecimals: any } {\n  if (lodashIsNumber(panelDecimals)) {\n    return { decimals: panelDecimals, scaledDecimals: null };\n  }\n\n  const delta = value / 2;\n  let dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n  const magn = Math.pow(10, -dec);\n  const norm = delta / magn; // norm is between 1.0 and 10.0\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25) {\n      size = 2.5;\n      ++dec;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n\n  size *= magn;\n\n  // reduce starting decimals if not needed\n  if (Math.floor(value) === value) {\n    dec = 0;\n  }\n\n  const result = {\n    decimals: 0,\n    scaledDecimals: 0,\n  };\n  result.decimals = Math.max(0, dec);\n  result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n  return result;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {width} the width in pixels the string must fit in\n * @param {minFontPx} the smallest acceptable font size in pixels\n * @param {maxFontPx} the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidth(text: string, font: any, width: number, minFontPx: number, maxFontPx: number) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  if (w <= width) {\n    return maxFontPx;\n  }\n  // pad width by 10px\n  width = width - 20;\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    if (w < width) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {width} the width in pixels the string must fit in\n * @param {height} the height in pixels\n * @param {minFontPx} the smallest acceptable font size in pixels\n * @param {maxFontPx} the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidthAndHeight(\n  text: string,\n  font: any,\n  width: number,\n  height: number,\n  minFontPx: number,\n  maxFontPx: number\n) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  // need to pad the width: use 80% of the space (leave 10% padding on each side)\n  width = width * 0.95;\n  if (w <= width && maxFontPx <= height) {\n    return maxFontPx;\n  }\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    // has to fit within the width of the text area, and not exceed the height\n    if (w < width && fontSize <= height) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nfunction getTextWidth(text: string, font: string) {\n  // re-use canvas object for better performance\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    const metrics = context.measureText(text);\n    return metrics.width;\n  }\n  return 40; // unknown due to context failure\n}\n\nfunction RGBToHex(text: string) {\n  // check if in rgb notation\n  if (!text.startsWith('rgb')) {\n    return text;\n  }\n  let hex = '#FFFFFF';\n  try {\n    const a = text.split('(')[1].split(')')[0];\n    const b = a.split(',');\n    const c = b.map((x) => {\n      // For each array element\n      x = parseInt(x, 10).toString(16); // Convert to a base16 string\n      return x.length === 1 ? '0' + x : x; // Add zero if we get only one character\n    });\n    hex = '#' + c.join('');\n  } catch (e) {\n    return hex;\n  }\n  return hex;\n}\n\nfunction getTextOrValue(o: any) {\n  if (isNaN(o)) {\n    return o;\n  } else {\n    return Number(o);\n  }\n}\n\nfunction SortVariableValuesByField(options: any, sortField: string, sortOrder: number) {\n  if (sortOrder === 0) {\n    return options;\n  }\n  const sortType = Math.ceil(sortOrder / 2);\n  const reverseSort = sortOrder % 2 === 0;\n\n  switch (sortType) {\n    case 1: // Alphabetical Case Sensitive\n      options = lodashSortBy(options, sortField);\n      break;\n    case 2: // Numerical with sub-match\n      options = lodashSortBy(options, (item) => {\n        // if the content of the field to sort by is textual, check if there is a numerical area to sort by\n        if (isNaN(item[sortField])) {\n          const matchField = item[sortField];\n          const matches = matchField.match(/.*?(\\d+).*/);\n          if (!matches || matches.length < 2) {\n            return -1;\n          } else {\n            return parseInt(matches[1], 10);\n          }\n        } else {\n          return getTextOrValue(item[sortField]);\n        }\n      });\n      break;\n    case 3: // Alphabetical Case Insensitive\n      options = lodashSortBy(options, (item) => {\n        const itemContent = item[sortField];\n        if (isNaN(itemContent)) {\n          return lodashToLower(item[sortField]);\n        } else {\n          return itemContent;\n        }\n      });\n      break;\n  }\n\n  if (reverseSort) {\n    options = options.reverse();\n  }\n\n  return options;\n}\n\nexport {\n  GetDecimalsForValue,\n  getTextSizeForWidth,\n  getTextSizeForWidthAndHeight,\n  getTextWidth,\n  RGBToHex,\n  SortVariableValuesByField,\n  getTextOrValue,\n};\n","import { GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\n\nexport const getErrorMessageStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.error.shade};\n`;\n\nexport const getNoTriggerTextStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.success.shade};\n`;\n\nexport const getWrapperStyles = (theme: GrafanaTheme2) => css`\n  fill: transparent;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const getSVGStyles = (theme: GrafanaTheme2) => css`\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  fill: transparent;\n`;\n\nexport const getSVGPathStyles = (theme: GrafanaTheme2) => css`\n  outline: none !important;\n`;\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2, dateTimeFormatWithAbbrevation } from '@grafana/data';\nimport { PolystatModel, SortOptions } from '../types';\n\nexport interface TooltipProps {\n  data: PolystatModel | undefined;\n  valueEnabled: boolean;\n  tooltipColumnHeadersEnabled: boolean;\n  renderTime: Date;\n  showTime: boolean;\n  primarySortByField: string;\n  primarySortDirection: number;\n  secondarySortByField: string;\n  secondarySortDirection: number;\n  displayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipFontFamily: string;\n}\n\nexport const Tooltip = ({\n  data,\n  renderTime,\n  showTime,\n  valueEnabled,\n  tooltipColumnHeadersEnabled,\n  primarySortByField,\n  primarySortDirection,\n  secondarySortByField,\n  secondarySortDirection,\n  displayMode,\n  tooltipDisplayTextTriggeredEmpty,\n  tooltipFontFamily,\n}: TooltipProps) => {\n  const styles = useStyles2(getTooltipStyles);\n\n  /* the name of the composite is shown at the top */\n  const getCompositeHeader = (data: PolystatModel | null) => {\n    if (data && data.members && data.members.length === 0) {\n      return '';\n    }\n    return (\n      <tr>\n        <th className={styles.tooltipCompositeHeading} colSpan={2}>\n          {data!.displayName}\n        </th>\n      </tr>\n    );\n  };\n\n  const multiSort = (\n    data: PolystatModel,\n    primarySortDirection: number,\n    primarySortByField: string,\n    secondarySortDirection: number,\n    secondarySortByField: string\n  ) => {\n    let sortSettings = getSortDirection(SortOptions[primarySortDirection].value);\n    const pUseLowercase = sortSettings.lowerCase;\n    const pDirection = sortSettings.direction as any;\n    sortSettings = getSortDirection(SortOptions[secondarySortDirection].value);\n    const sDirection = sortSettings.direction as any;\n    const sUseLowercase = sortSettings.lowerCase;\n\n    let pSortFunction = primarySortByField as any;\n    if (pUseLowercase) {\n      pSortFunction = (item: any) => {\n        let val = item[primarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    let sSortFunction = secondarySortByField as any;\n    if (sUseLowercase) {\n      sSortFunction = (item: any) => {\n        let val = item[secondarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    const sortedMembers = lodashOrderBy(data.members, [pSortFunction, sSortFunction], [pDirection, sDirection]);\n    return sortedMembers;\n  };\n\n  const getTriggeredCount = (data: PolystatModel) => {\n    let triggered = 0;\n    if (data.thresholdLevel !== 0) {\n      triggered++;\n    }\n    for (let j = 0; j < data.members.length; j++) {\n      if (data.members[j].thresholdLevel !== 0) {\n        triggered++;\n      }\n    }\n    return triggered;\n  };\n  const filterTriggered = (items: PolystatModel) => {\n    const triggerCount = getTriggeredCount(items);\n    if (triggerCount > 0) {\n      for (let i = 0; i < items.members.length; i++) {\n        if (items.members[i].thresholdLevel === 0) {\n          items.members.splice(i, 1);\n        }\n      }\n      return items;\n    } else {\n      return null;\n    }\n  };\n  const getCompositeMetrics = (data: PolystatModel | null) => {\n    let dataToSort = data;\n    if (dataToSort && data && displayMode === 'triggered') {\n      dataToSort = filterTriggered(data);\n    }\n    if (dataToSort === null) {\n      return <>{tooltipDisplayTextTriggeredEmpty}</>;\n    }\n    const sortedMembers = multiSort(\n      dataToSort,\n      primarySortDirection,\n      primarySortByField,\n      secondarySortDirection,\n      secondarySortByField\n    );\n    return sortedMembers.map((item: PolystatModel, index: number) => {\n      return (\n        <tr key={index} style={{ color: item.color }}>\n          <td className={styles.tooltipName}>{item.displayName}</td>\n          {valueEnabled && <td className={styles.tooltipValue}>{item.valueFormatted}</td>}\n        </tr>\n      );\n    });\n  };\n\n  const generateContent = () => {\n    return (\n      <table style={{ fontFamily: tooltipFontFamily }} className={styles.tooltipTable}>\n        <thead>\n          {data && data.isComposite && getCompositeHeader(data)}\n          <tr>\n            {tooltipColumnHeadersEnabled && <th className={styles.tooltipNameHeading}>Name</th>}\n            {tooltipColumnHeadersEnabled && valueEnabled && <th className={styles.tooltipValueHeading}>Value</th>}\n          </tr>\n        </thead>\n        <tfoot>\n          {showTime && (\n            <tr>\n              <td className={styles.tooltipTime} colSpan={2}>\n                {dateTimeFormatWithAbbrevation(renderTime)}\n              </td>\n            </tr>\n          )}\n        </tfoot>\n        <tbody>\n          {data && data.isComposite ? (\n            getCompositeMetrics(data)\n          ) : (\n            <tr style={{ color: data!.color }}>\n              <td className={styles.tooltipName}>{data!.displayName}</td>\n              {valueEnabled && <td className={styles.tooltipValue}>{data!.valueFormatted}</td>}\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  };\n\n  // Generate content\n  return generateContent();\n};\n\nconst getTooltipStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css`\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z2};\n      padding: ${theme.spacing(1)};\n    `,\n    tooltipTable: css`\n      width: 100%;\n      color: ${theme.colors.text.primary};\n      height: auto;\n      padding: 10px;\n    `,\n    tooltipTime: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipNameHeading: css`\n      text-align: left;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipValueHeading: css`\n      text-align: right;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipCompositeHeading: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipName: css`\n      text-align: left;\n    `,\n    tooltipValue: css`\n      text-align: right;\n      padding-left: 15px;\n    `,\n  };\n};\n\nconst getSortDirection = (val: number) => {\n  switch (val) {\n    case 0:\n      return { direction: null, lowerCase: false };\n    case 1:\n      return { direction: 'asc', lowerCase: false };\n    case 2:\n      return { direction: 'desc', lowerCase: false };\n    case 3:\n      return { direction: 'asc', lowerCase: false };\n    case 4:\n      return { direction: 'desc', lowerCase: false };\n    case 5:\n      return { direction: 'asc', lowerCase: true };\n    case 6:\n      return { direction: 'desc', lowerCase: true };\n    default:\n      return { direction: 'asc', lowerCase: false };\n  }\n};\n","import React, { useEffect, createRef, useCallback } from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useStyles2, Portal, useTheme2 } from '@grafana/ui';\nimport { symbol as d3symbol, symbolCircle, symbolSquare } from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\n\nimport { Gradients } from './gradients/Gradients';\nimport { LayoutManager } from './layout/layoutManager';\nimport { PolystatOptions, PolygonShapes, PolystatModel, DisplayModes } from './types';\nimport { getTextSizeForWidthAndHeight } from '../utils';\n\nimport { getErrorMessageStyles, getNoTriggerTextStyles, getSVGPathStyles, getSVGStyles, getWrapperStyles } from './styles';\nimport { Tooltip } from './tooltips/Tooltip';\n\nexport const Polystat: React.FC<PolystatOptions> = (options) => {\n  const divStyles = useStyles2(getWrapperStyles);\n  const svgStyles = useStyles2(getSVGStyles);\n  const svgPathStyles = useStyles2(getSVGPathStyles);\n  const noTriggerTextStyles = useStyles2(getNoTriggerTextStyles);\n  const errorMessageStyles = useStyles2(getErrorMessageStyles);\n  const tooltipTheme = useTheme2().isDark ? 'dark' : 'light';\n  // used to change/animate text in polygon\n  const [animationRefs, setAnimationRefs] = React.useState([] as any);\n  // tracks which metric to display during animation of a composite\n  const [animationMetricIndexes, setAnimationMetricIndexes] = React.useState([] as any);\n  const [animatedItems, setAnimatedItems] = React.useState([] as any);\n\n  useEffect(() => {\n    // clear animationRefs and set new ones\n    if (options.processedData!.length > 0) {\n      const newAnimationRefs = [];\n      const newAnimationMetricIndexes = [];\n      for (let i = 0; i < options.processedData!.length; i++) {\n        newAnimationRefs.push(createRef());\n        newAnimationMetricIndexes.push(0);\n      }\n      if (newAnimationRefs.length > 0) {\n        setAnimationRefs(newAnimationRefs);\n        setAnimationMetricIndexes(newAnimationMetricIndexes);\n      }\n    }\n  }, [options.processedData]);\n\n  /*\n    This is the animation method that will cycle through the metrics for a composite\n   */\n  const animateComposite = useCallback(() => {\n    //console.log(new Date().toLocaleString() + ` animate loop...`);\n    for (let i = 0; i < animatedItems.length; i++) {\n      let index = animatedItems[i];\n      let metricIndex = animationMetricIndexes[index];\n      if (animationRefs.length > 0 && animationRefs[index].current) {\n        //console.log(`animating ref ${index}`);\n        if (options.processedData) {\n          const item = options.processedData[index];\n          const val = formatCompositeValue(metricIndex, item, options.globalDisplayTextTriggeredEmpty);\n          if (animationRefs[index].current.innerHTML !== null) {\n            animationRefs[index].current.innerHTML = val;\n          }\n        }\n      }\n      metricIndex++;\n      if (options.processedData && options.processedData[index] && options.processedData[index].members.length) {\n        metricIndex %= options.processedData[index].members.length;\n      }\n      animationMetricIndexes[index] = metricIndex;\n      setAnimationMetricIndexes(animationMetricIndexes);\n    }\n  }, [\n    animationMetricIndexes,\n    animationRefs,\n    animatedItems,\n    options.processedData,\n    options.globalDisplayTextTriggeredEmpty,\n  ]);\n\n  /*\n    Determine which items should be animated\n  */\n  useEffect(() => {\n    let shouldAnimate = false;\n    const animate = [] as any;\n    options.processedData!.map((item, index) => {\n      if (item.isComposite && item.showValue) {\n        shouldAnimate = true;\n        animate.push(index);\n      }\n    });\n    setAnimatedItems(animate);\n    let tick: NodeJS.Timer;\n    if (shouldAnimate) {\n      let speed = parseInt(options.compositeConfig.animationSpeed, 10);\n      if (speed < 200 || isNaN(speed)) {\n        console.log(`WARNING: speed in configuration is too fast, setting to 200ms`);\n        speed = 200;\n      }\n      tick = setInterval(animateComposite, speed);\n    }\n    return () => {\n      clearInterval(tick);\n    };\n    // TODO: this is a hack to prevent re-rendering\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options.compositeConfig.animationSpeed, options.processedData, animationRefs]);\n\n  if (options.processedData && options.processedData.length === 0) {\n    return <div className={noTriggerTextStyles}>{options.globalDisplayTextTriggeredEmpty}</div>;\n  }\n  if (!options.autoSizeColumns && !options.autoSizeRows) {\n    const limit = options.layoutNumColumns * options.layoutNumRows;\n    if (limit < options.processedData!.length) {\n      return (\n        <div className={errorMessageStyles}>\n          Not enoughs rows and columns for data. There are {options.processedData!.length} items to display, and only{' '}\n          {limit} places allocated.{' '}\n        </div>\n      );\n    }\n  }\n\n  const lm = new LayoutManager(\n    options.panelWidth,\n    options.panelHeight,\n    options.layoutNumColumns,\n    options.layoutNumRows,\n    options.layoutDisplayLimit,\n    options.autoSizePolygons,\n    options.globalShape\n  );\n  const margin = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  // determine how many rows and columns are going to be generated\n  lm.generatePossibleColumnAndRowsSizes(options.autoSizeColumns, options.autoSizeRows, options.processedData!.length);\n  // to determine the radius, the actual number of rows and columns that will be used needs to be calculated\n  lm.generateActualColumnAndRowUsage(options.processedData, options.layoutDisplayLimit);\n  // next the radius can be determined from actual rows and columns being used\n  let radius = 0;\n  if (!options.autoSizePolygons && options.globalPolygonSize) {\n    if (options.globalPolygonSize < 0 || isNaN(options.globalPolygonSize)) {\n      // force min size if below zero or NaN\n      options.globalPolygonSize = 50;\n      console.log(`WARNING: polygon size is manually set to an invalid value, forcing to 50px`);\n    } else {\n      lm.setRadius(options.globalPolygonSize);\n    }\n    radius = options.globalPolygonSize;\n  } else {\n    radius = lm.generateRadius(options.globalShape);\n  }\n  // using the known number of columns and rows that can be used in addition to the radius,\n  // generate the points to be filled\n  const calculatedPoints = lm.generatePoints(options.processedData, options.layoutDisplayLimit, options.globalShape);\n\n  const aHexbin = hexbin()\n    .radius(radius)\n    .extent([\n      [0, 0],\n      [options.panelWidth, options.panelHeight],\n    ]);\n  const { diameterX, diameterY } = lm.getDiameters();\n  const { xoffset, yoffset } = lm.getOffsets(options.globalShape, options.processedData!.length);\n\n  // compute text area size (used to calculate the fontsize)\n  const textAreaWidth = diameterX;\n  const textAreaHeight = diameterY / 2; // Top and bottom of hexagon are not used\n  // symbols use the area for their size\n  let innerArea = diameterX * diameterY;\n  // use the smaller of diameterX or Y\n  if (diameterX < diameterY) {\n    innerArea = diameterX * diameterX;\n  }\n  if (diameterY < diameterX) {\n    innerArea = diameterY * diameterY;\n  }\n  // square and circle do not use this\n  const symbol = d3symbol().size(innerArea);\n\n  let customShape: any;\n  switch (options.globalShape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      customShape = aHexbin.hexagon(radius);\n      break;\n    case PolygonShapes.CIRCLE:\n      customShape = symbol.type(symbolCircle);\n      break;\n    case PolygonShapes.SQUARE:\n      customShape = symbol.type(symbolSquare);\n      break;\n    default:\n      customShape = aHexbin.hexagon(radius);\n      break;\n  }\n\n  const resolveClickThroughTarget = (d: any): string => {\n    let clickThroughTarget = '_self';\n    if (d.newTabEnabled === true) {\n      clickThroughTarget = '_blank';\n    }\n    return clickThroughTarget;\n  };\n\n  const getCoords = (i: number) => {\n    const xValue = calculatedPoints[i][0];\n    const yValue = calculatedPoints[i][1];\n    return { x: xValue, y: yValue };\n  };\n\n  // calculate the fontsize based on the shape and the text\n  let activeLabelFontSize = options.globalFontSize;\n  // font sizes are independent for label and values\n  let activeValueFontSize = options.globalFontSize;\n  let showEllipses = false;\n  let numOfChars = options.ellipseCharacters;\n\n  if (options.globalAutoScaleFonts) {\n    const result = autoFontScaler(\n      options.globalTextFontFamily,\n      textAreaWidth,\n      textAreaHeight,\n      options.globalShowValueEnabled,\n      options.processedData!\n    );\n    activeLabelFontSize = result.activeLabelFontSize;\n    activeValueFontSize = result.activeValueFontSize;\n    showEllipses = result.showEllipses;\n    numOfChars = result.numOfChars;\n  }\n  const alignments = getAlignments(\n    options.globalShape,\n    diameterX,\n    diameterY,\n    textAreaHeight,\n    activeValueFontSize,\n    activeLabelFontSize\n  );\n\n  // this MUST be unique for gradients to work properly\n  const gradientId = `polystat_${options.panelId}_` + Math.floor(Math.random() * 10000).toString();\n\n  const drawShape = (index: number, shape: PolygonShapes) => {\n    let fillColor = options.processedData![index].color;\n    if (options.globalGradientsEnabled) {\n      // TODO: safari needs the location.href\n      fillColor = `url(#${gradientId}_linear_gradient_state_data_${index})`;\n    }\n    const useRadius = lm.generateRadius(options.globalShape);\n    const coords = getCoords(index);\n\n    switch (shape as any) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return (\n          <path\n            data-tooltip-id='polystat-tooltip'\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key=\"polystat-tooltip\"\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n      case PolygonShapes.CIRCLE:\n        return (\n          <circle\n            data-tooltip-id=\"polystat-tooltip\"\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key=\"polystat-tooltip\"\n            className={svgPathStyles}\n            cx={coords.x}\n            cy={coords.y}\n            r={useRadius}\n            fill={fillColor}\n          />\n        );\n      case PolygonShapes.SQUARE:\n        return (\n          <rect\n            data-tooltip-id=\"polystat-tooltip\"\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key=\"polystat-tooltip\"\n            className={svgPathStyles}\n            x={coords.x}\n            y={coords.y}\n            height={useRadius * 2}\n            width={useRadius * 2}\n            fill={fillColor}\n          />\n        );\n      default:\n        return (\n          <path\n            data-tooltip-id=\"polystat-tooltip\"\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key=\"polystat-tooltip\"\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n    }\n  };\n\n  const getTextToDisplay = (\n    autoSizeFonts: boolean,\n    ellipseEnabled: boolean,\n    ellipseCharacters: number,\n    showEllipses: boolean,\n    numOfChars: number,\n    text: string,\n    alias: string\n  ) => {\n    if (alias !== '') {\n      text = alias;\n    }\n    if (showEllipses) {\n      return text.substring(0, numOfChars) + '...';\n    }\n    if (!autoSizeFonts && ellipseEnabled && text.length > ellipseCharacters) {\n      return text.substring(0, ellipseCharacters) + '...';\n    }\n    return text;\n  };\n\n  return (\n    <div className={divStyles}>\n      <svg\n        className={svgStyles}\n        width={options.panelWidth}\n        height={options.panelHeight}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`${xoffset},${yoffset},${options.panelWidth},${options.panelHeight}`}\n      >\n\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <Gradients gradientId={gradientId} data={options.processedData} />\n\n          {options.processedData!.map((item, index) => {\n            const coords = getCoords(index);\n            // TODO: should resolve this during processing\n            const ctt = resolveClickThroughTarget(item);\n            const useUrl = item.sanitizeURLEnabled ? item.sanitizedURL : item.clickThrough;\n            return (\n              <>\n                {useUrl.length > 0 ? (\n                  <a target={ctt} href={useUrl}>\n                    {drawShape(index, options.globalShape)}\n                  </a>\n                ) : (\n                  drawShape(index, options.globalShape)\n                )}\n                <text\n                  className=\"toplabel\"\n                  x={coords.x + alignments.labelTextAlignmentX}\n                  y={coords.y + alignments.labelWithValueTextAlignment}\n                  textAnchor=\"middle\"\n                  fontFamily={options.globalTextFontFamily}\n                  fontSize={activeLabelFontSize + 'px'}\n                  style={{\n                    fill: options.globalTextFontAutoColorEnabled\n                      ? options.globalTextFontAutoColor\n                      : options.globalTextFontColor,\n                    pointerEvents: 'none',\n                  }}\n                >\n                  {item.showName &&\n                    getTextToDisplay(\n                      options.globalAutoScaleFonts,\n                      options.ellipseEnabled,\n                      options.ellipseCharacters,\n                      showEllipses,\n                      numOfChars,\n                      item.name,\n                      item.displayName\n                    )}\n                </text>\n\n                <text\n                  ref={animationRefs[index]}\n                  className={`valueLabel${index}`}\n                  x={coords.x + alignments.labelValueAlignmentX}\n                  y={coords.y + alignments.valueWithLabelTextAlignment}\n                  textAnchor=\"middle\"\n                  fontFamily={options.globalTextFontFamily}\n                  fontSize={activeValueFontSize + 'px'}\n                  style={{\n                    fill: options.globalTextFontAutoColorEnabled\n                      ? options.globalTextFontAutoColor\n                      : options.globalTextFontColor,\n                    pointerEvents: 'none',\n                  }}\n                >\n                  {item.showValue &&\n                    (item.isComposite\n                      ? formatCompositeValue(0, item, options.globalDisplayTextTriggeredEmpty)\n                      : item.valueFormatted)}\n                </text>\n\n              </>\n            );\n          })}\n        </g>\n      </svg>\n      {options.globalTooltipsEnabled && (\n        <Portal>\n          <ReactTooltip\n            style={{\n              boxShadow: 'rgba(1, 4, 9, 0.75) 0px 4px 8px 0px',\n            }}\n            id=\"polystat-tooltip\"\n            place={'bottom'} // TODO: make this configurable\n            float={true}\n            variant={tooltipTheme} // TODO: this could be made configurable (auto, or specified)\n            opacity={1} // TODO: make this configurable\n            clickable={false} // TODO: make this configurable, extend with per-line clickthrough\n            render={({ content, activeAnchor }) => {\n              // generate tooltip for item\n              if (content) {\n                const contentIndex = parseInt(content, 10);\n                return (\n                  <Tooltip\n                    data={options.processedData![contentIndex]}\n                    renderTime={options.renderTime!}\n                    showTime={options.globalTooltipsShowTimestampEnabled}\n                    valueEnabled={options.globalShowValueEnabled}\n                    tooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n                    primarySortByField={options.tooltipPrimarySortByField}\n                    primarySortDirection={options.tooltipPrimarySortDirection}\n                    secondarySortByField={options.tooltipSecondarySortByField}\n                    secondarySortDirection={options.tooltipSecondarySortDirection}\n                    displayMode={options.tooltipDisplayMode}\n                    tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n                    tooltipFontFamily={options.globalTooltipsFontFamily}\n                  />\n                )\n              }\n              return (<></>)\n            }} />\n        </Portal>\n\n      )}\n    </div>\n  );\n};\n\n/*\n              The element #{content} is currently not active.\n              <br />\n              Relevant attribute: {activeAnchor?.getAttribute('data-some-relevant-attr') || 'not set'}\n            </span>\n*/\n\nconst buildTriggerCache = (item: any) => {\n  let triggerCache = [];\n  for (let i = 0; i < item.members.length; i++) {\n    const aMember = item.members[i];\n    if (aMember.thresholdLevel > 0) {\n      // add to list\n      const cachedMemberState = {\n        index: i,\n        name: aMember.name,\n        value: aMember.value,\n        thresholdLevel: aMember.thresholdLevel,\n      };\n      triggerCache.push(cachedMemberState);\n    }\n  }\n  // sort it\n  triggerCache = lodashOrderBy(triggerCache, ['thresholdLevel', 'value', 'name'], ['desc', 'desc', 'asc']);\n  return triggerCache;\n};\n\nconst formatCompositeValue = (frames: number, item: PolystatModel, globalDisplayTextTriggeredEmpty: string) => {\n  // TODO: if just one value, could speed this up\n  let content = item.valueFormatted;\n  const len = item.members.length;\n  if (len > 0) {\n    let triggeredIndex = -1;\n    if (item.displayMode === DisplayModes[0].value) {\n      triggeredIndex = frames % len;\n    } else {\n      if (typeof item.triggerCache === 'undefined') {\n        item.triggerCache = buildTriggerCache(item);\n      }\n      if (item.triggerCache.length > 0) {\n        const z = frames % item.triggerCache.length;\n        triggeredIndex = item.triggerCache[z].index;\n      } else {\n        // nothing triggered        //triggeredIndex = frames % len;\n        return globalDisplayTextTriggeredEmpty;\n      }\n    }\n    const aMember = Object.assign({}, item.members[triggeredIndex]);\n    content = aMember.name + ': ' + aMember.valueFormatted;\n  }\n  return textUtil.sanitize(content);\n};\n\nconst getAlignments = (\n  shape: PolygonShapes,\n  diameterX: number,\n  diameterY: number,\n  textAreaHeight: number,\n  activeValueFontSize: number,\n  activeLabelFontSize: number\n) => {\n  let valueWithLabelTextAlignment = textAreaHeight / 2 / 2 + activeValueFontSize / 2;\n  let valueOnlyTextAlignment = activeValueFontSize / 2;\n  let labelWithValueTextAlignment = -(textAreaHeight / 2 / 2) + activeLabelFontSize / 2;\n  let labelOnlyTextAlignment = activeLabelFontSize / 2;\n  let labelTextAlignmentX = 0;\n  let labelValueAlignmentX = 0;\n\n  switch (shape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      break;\n    case PolygonShapes.CIRCLE:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      break;\n    case PolygonShapes.SQUARE:\n      // square is \"centered\" at top left, not the center\n\n      // compute alignment for each text element, base coordinate is at the top left corner (text is anchored at its bottom):\n      // - Value text (bottom text) will be aligned (positively i.e. lower) in the middle of the bottom half of the text area\n      // - Label text (top text) will be aligned in the middle of the top half of the text area\n      valueWithLabelTextAlignment = diameterY / 1.5 + activeValueFontSize / 2;\n      valueOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      labelWithValueTextAlignment = diameterY / 4 + activeLabelFontSize / 2;\n      // alignment is equal to the half of height plus a fraction of the fontSize\n      labelOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      //\n      labelTextAlignmentX = diameterX / 2;\n      labelValueAlignmentX = diameterX / 2;\n      break;\n  }\n  return {\n    valueWithLabelTextAlignment,\n    valueOnlyTextAlignment,\n    labelWithValueTextAlignment,\n    labelOnlyTextAlignment,\n    labelTextAlignmentX,\n    labelValueAlignmentX,\n  };\n};\n\nconst autoFontScaler = (\n  fontFamily: string,\n  textAreaWidth: number,\n  textAreaHeight: number,\n  valueEnabled: boolean,\n  data: PolystatModel[]\n) => {\n  // TODO: 6 is VERY small, perhaps 10 as a min?\n  // A hint from the config could be used (max characters)\n  const minFont = 6;\n  const maxFont = 240;\n  // this ensures we have space between label and value\n  const maxLinesToDisplay = 2;\n  let showEllipses = false;\n  //number of characters to show on polygon\n  let numOfChars = 0;\n  // find the most text that will be displayed over all items\n  let maxLabel = '';\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].name.length > maxLabel.length) {\n      maxLabel = data[i].name;\n    }\n  }\n  // same for the value, also check for sub metrics size in case of composite\n  let maxValue = '';\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].valueFormatted.length > maxValue.length) {\n      maxValue = data[i].valueFormatted;\n    }\n    const subMetricCount = data[i].members.length;\n    if (subMetricCount > 0) {\n      let counter = 0;\n      while (counter < subMetricCount) {\n        const checkContent = data[i].members[counter].displayName + ': ' + data[i].members[counter].valueFormatted;\n        if (checkContent && checkContent.length > maxValue.length) {\n          maxValue = checkContent;\n        }\n        counter++;\n      }\n    }\n  }\n  // estimate how big of a font can be used\n  // Two lines of text must fit with vertical spacing included\n  // if it is too small, hide everything\n  let activeLabelFontSize = computeTextFontSize(\n    maxLabel,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  let activeValueFontSize = computeTextFontSize(\n    maxValue,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n\n  if (activeLabelFontSize < minFont) {\n    showEllipses = true;\n    numOfChars = 18;\n    maxLabel = maxLabel.substring(0, numOfChars + 2);\n    activeLabelFontSize = computeTextFontSize(\n      maxLabel,\n      fontFamily,\n      minFont,\n      maxFont,\n      maxLinesToDisplay,\n      textAreaWidth,\n      textAreaHeight\n    );\n    if (activeLabelFontSize < minFont) {\n      numOfChars = 10;\n      maxLabel = maxLabel.substring(0, numOfChars + 2);\n      activeLabelFontSize = computeTextFontSize(\n        maxLabel,\n        fontFamily,\n        minFont,\n        maxFont,\n        maxLinesToDisplay,\n        textAreaWidth,\n        textAreaHeight\n      );\n      if (activeLabelFontSize < minFont) {\n        numOfChars = 6;\n        maxLabel = maxLabel.substring(0, numOfChars + 2);\n        activeLabelFontSize = computeTextFontSize(\n          maxLabel,\n          fontFamily,\n          minFont,\n          maxFont,\n          maxLinesToDisplay,\n          textAreaWidth,\n          textAreaHeight\n        );\n      }\n    }\n  }\n  // NOTE: allow different sizes, the value could be displayed larger than the label\n  // value should never be larger than the label\n  //if (activeValueFontSize > activeLabelFontSize) {\n  //  activeValueFontSize = activeLabelFontSize;\n  //}\n  if (!valueEnabled) {\n    activeValueFontSize = 0;\n  }\n  return { activeLabelFontSize, activeValueFontSize, showEllipses, numOfChars };\n};\n\nconst computeTextFontSize = (\n  text: string,\n  font: string,\n  minFont: number,\n  maxFont: number,\n  linesToDisplay: number,\n  textAreaWidth: number,\n  textAreaHeight: number\n): number => {\n  return getTextSizeForWidthAndHeight(\n    text,\n    `?px ${font}`,\n    textAreaWidth,\n    textAreaHeight / linesToDisplay, // multiple lines of text\n    minFont,\n    maxFont\n  );\n};\n","import { DataFrame, Field, FieldType, FieldConfig, ArrayVector, Labels } from '@grafana/data';\n\n// Inserts a \"Time\" field into each dataframe if it is missing\n// the value of the timestamp is \"now\"\n// any field without a numeric type is considered a label\nexport function InsertTime(data: DataFrame[]): DataFrame[] {\n  // TODO: time to insert can be taken from the first row if there are timeseries already\n  // for now, just insert now\n  const timeToInsert = Date.now();\n  const newData: DataFrame[] = [];\n  for (const frame of data) {\n    //const flattened = this.flattenLabels(frame, 0);\n    const newFrame: DataFrame = {\n      ...frame,\n      meta: {...frame.meta},\n      fields: [], // clear the fields\n    };\n    \n    //const labels = this.getLabelsOfFrame(frame);\n    const hasTimestamp = frameHasTimestamp(frame);\n    // rebuild a new frame with labels on the numerical fields\n    const numFields = frame.fields.length;\n    for (const aField of frame.fields) {\n      if (aField.type === FieldType.number) {\n        if (!hasTimestamp) {\n          // need to get the number of rows of data for this frame\n          const aFieldValues = aField.values.toArray();\n          const rowsOfField = aFieldValues.length;\n          for (let rowNum = 0; rowNum < rowsOfField; rowNum++) {\n            // only create a new field when the rowValue is not null\n            if (aFieldValues[rowNum] !== null) {\n              newFrame.fields.push({\n                ...aField,\n                labels: flattenLabels(frame, rowNum),\n                values: new ArrayVector([getValueOfField(aField, rowNum)]),\n              });\n            }\n          }\n        } else {\n          // copy the object\n          const copiedField = Object.assign({}, aField);\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    if (!hasTimestamp) {\n      const z = new ArrayVector();\n      z.add(timeToInsert);\n      const fc: FieldConfig = {};\n      const timeField: Field = {\n        name: 'Time',\n        type: FieldType.time,\n        values: z,\n        config: fc,\n      };\n      // insert it\n      newFrame.fields.push(timeField);\n    } else {\n      // time field already exists\n      // copy all non-number fields from original frame\n      for (const aField of frame.fields) {\n        if (aField.type !== FieldType.number) {\n          newFrame.fields.push(aField);\n        }\n      }\n    }\n    newData.push(newFrame);\n  }\n\n  return newData;\n}\n\nfunction frameHasTimestamp(frame: DataFrame): boolean {\n  for (let j = 0; j < frame.fields.length; j++) {\n    const aField = frame.fields[j];\n    if (aField.type === FieldType.time) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction flattenLabels(frame: DataFrame, rowNum: number) {\n  let labelIndexes = [];\n  const numFields = frame.fields.length;\n\n  // first get the fields of type string\n  for (let j = 0; j < numFields; j++) {\n    if (frame.fields[j].type === FieldType.string) {\n      labelIndexes.push(j);\n    }\n  }\n  let labelWithValues = getLabelValues(frame, labelIndexes, rowNum);\n  return labelWithValues;\n}\n\nfunction getValueOfField(field: Field, index: number) {\n  const bufferValue = field.values.toArray()[index];\n  return bufferValue;\n}\n\nfunction getLabelValues(frame: DataFrame, indexes: any[], rowNum: number) {\n  let labelAndValue = {};\n  for (let index = 0; index < indexes.length; index++) {\n    let indexValue = indexes[index];\n    let aField = frame.fields[indexValue];\n    if (aField.type !== FieldType.number) {\n      let value = getValueOfField(aField, rowNum);\n      // TODO: fix this...\n      // @ts-ignore\n      labelAndValue[aField.name] = value;\n    }\n  }\n  return labelAndValue;\n}\n","import { DEFAULT_NO_DATA_COLOR_HEX } from '../components/defaults';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { PolystatModel } from '../components/types';\n/*\n\nThis supports ranged states\n\nThresholds are expected to be sorted by ascending value, where\n  T0 = lowest decimal value, any state\n  TN = highest decimal value, any state\n\nInitial state is set to \"ok\"\n\nA comparison is made using \"greater than or equal to\" against the value\n  If value >= thresholdValue state = X\n\nComparisons are made in reverse order, using the range between the Nth (inclusive) threshold and N+1 (exclusive)\n  InclusiveValue = T(n).value\n  ExclusiveValue = T(n+1).value\n\nWhen there is no n+1 threshold, the highest value threshold T(n), a simple inclusive >= comparison is made\n\n  Example 1: (typical linear)\n    T0 - 5, ok\n    T1 - 10, warning\n    T2 - 20, critical\n\n  Value >= 20 (Value >= T2)\n  10 <= Value < 20  (T1 <= Value < T2)\n  5 <= Value < 10   (T0 <= Value < T1)\n\n  Example 2: (reverse linear)\n    T0 - 50, critical\n    T1 - 90, warning\n    T2 - 100, ok\n\n  Value >= 100\n  90 <= value < 100\n  50 <= value < 90\n\n  Example 3: (bounded)\n    T0 - 50, critical\n    T1 - 60, warning\n    T2 - 70, ok\n    T3 - 80, warning\n    T4 - 90, critical\n\n    Value >= 90\n    80 <= Value < 90\n    70 <= Value < 80\n    60 <= Value < 70\n    50 <= Value < 60\n\nThe \"worst\" state is returned after checking every threshold range\n\n*/\nfunction getWorstSeries(series1: PolystatModel, series2: PolystatModel): any {\n  let worstSeries = series1;\n  const series1ThresholdLevel = series1.thresholdLevel;\n  const series2ThresholdLevel = series2.thresholdLevel;\n\n  if (series1ThresholdLevel === undefined || series2ThresholdLevel === undefined) {\n    return worstSeries;\n  }\n\n  // State 3 is Unknown and is not be worse than CRITICAL (state 2)\n  if (series2ThresholdLevel > series1ThresholdLevel) {\n    // series2 has higher threshold violation\n    worstSeries = series2;\n  }\n  if (series1ThresholdLevel === 3) {\n    // series1 is in state unknown, check if series2 is in state 1 or 2\n    switch (series2ThresholdLevel) {\n      case 1:\n        worstSeries = series2;\n        break;\n      case 2:\n        worstSeries = series2;\n        break;\n    }\n  }\n  return worstSeries;\n}\n\nfunction getThresholdLevelForValue(\n  thresholds: PolystatThreshold[] | undefined,\n  value: number | null,\n  defaultColor: string\n): { thresholdLevel: number; color: string } {\n  let currentColor = defaultColor;\n  if (value === null) {\n    return { thresholdLevel: 3, color: DEFAULT_NO_DATA_COLOR_HEX }; // No Data\n  }\n  // assume UNKNOWN state\n  let currentState = -1;\n  // skip evaluation when there are no thresholds\n  if (typeof thresholds === 'undefined') {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  // test \"Nth\" threshold\n  const thresholdCount = thresholds.length;\n  if (thresholdCount === 0) {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  const aThreshold = thresholds[thresholdCount - 1];\n  if (value >= aThreshold.value) {\n    currentState = aThreshold.state;\n    currentColor = aThreshold.color;\n  }\n  // if there's one threshold, just return the result\n  if (thresholds.length === 1) {\n    return { thresholdLevel: currentState, color: currentColor };\n  }\n  // now test in reverse\n  for (let i = thresholdCount - 1; i > 0; i--) {\n    const upperThreshold = thresholds[i];\n    const lowerThreshold = thresholds[i - 1];\n    if (lowerThreshold.value <= value && value < upperThreshold.value) {\n      if (currentState < lowerThreshold.state) {\n        currentState = lowerThreshold.state;\n        currentColor = lowerThreshold.color;\n      }\n    }\n  }\n  // last check, if currentState is not set, and there is a lower threshold, use that value (inclusive range up to T1)\n  if (currentState === -1) {\n    currentState = thresholds[0].state;\n    currentColor = thresholds[0].color;\n  }\n  return { thresholdLevel: currentState, color: currentColor };\n}\n\nexport { getWorstSeries, getThresholdLevelForValue };\n","/**\n * Convert model data to url params\n */\nimport { stringToJsRegex } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nclass ClickThroughTransformer {\n  static cellName = /\\${__cell_name}/;\n  static cellValue = /\\${__cell}/;\n  static cellRawValue = /\\${__cell:raw}/;\n\n  static nthCellName = /\\${__cell_name_(\\d+)}/;\n  static nthCellValue = /\\${__cell_(\\d+)}/;\n  static nthCellRawValue = /\\${__cell_(\\d+):raw}/;\n\n  static compositeName = /\\${__composite_name}/;\n\n  static transformSingleMetric(index: number, url: string, data: PolystatModel[]): string {\n    if (isNaN(index)) {\n      return url;\n    }\n    const item = data[index];\n    // check if url contains any dereferencing\n    while (url.match(this.cellName)) {\n      // replace with series name\n      url = url.replace(this.cellName, item.name);\n    }\n    while (url.match(this.cellValue)) {\n      // replace with formatted value, and encoded\n      url = url.replace(this.cellValue, encodeURIComponent(item.valueFormatted));\n    }\n    while (url.match(this.cellRawValue)) {\n      // replace with value\n      url = url.replace(this.cellRawValue, item.value.toString());\n    }\n    return url;\n  }\n\n  static transformNthMetric(url: string, data: PolystatModel[]) {\n    while (url.match(this.nthCellName)) {\n      const matched = url.match(this.nthCellName);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthName = data[captureIndex].name;\n        // replace with series name\n        url = url.replace(this.nthCellName, nthName);\n      }\n    }\n    while (url.match(this.nthCellValue)) {\n      const matched = url.match(this.nthCellValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].valueFormatted;\n        // replace with formatted value encoded\n        url = url.replace(this.nthCellValue, encodeURIComponent(nthValue));\n      }\n    }\n    while (url.match(this.nthCellRawValue)) {\n      const matched = url.match(this.nthCellRawValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].value;\n        // replace with raw value\n        url = url.replace(this.nthCellRawValue, nthValue.toString());\n      }\n    }\n    return url;\n  }\n\n  static transformComposite(name: string, url: string) {\n    // check if url contains any dereferencing\n    while (url.match(this.compositeName)) {\n      // replace with series name\n      url = url.replace(this.compositeName, name);\n    }\n    return url;\n  }\n\n  static transformByRegex(pattern: string, item: PolystatModel, url: string) {\n    // detect regex capture groups from override.metricName and replace any occurrences in the click-through\n    const regex = stringToJsRegex(pattern);\n    const matches = item.name.match(regex);\n    if (matches && matches.length > 0) {\n      matches.forEach((aMatch, index) => {\n        const value = matches[index];\n        // console.log(`a match ${aMatch} index ${index} value ${value}`);\n        const matchType1 = `\\$\\{${index}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${index}`;\n        url = url.replace(matchType2, value);\n      });\n    }\n    if (matches && matches.groups) {\n      for (const key in matches.groups) {\n        const value = matches.groups[key];\n        // console.log(`key = ${key} value = ${value}`);\n        // support $CAPTURE and ${CAPTURE}\n        const matchType1 = `\\$\\{${key}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${key}`;\n        url = url.replace(matchType2, value);\n      }\n    }\n    return url;\n  }\n}\n\nexport { ClickThroughTransformer };\n","export const CUSTOM_SPLIT_DELIMITER = '#️⃣🔠🆗🆗🔠#️⃣';\n","import { includes as lodashIncludes } from 'lodash';\nimport { PolystatModel } from '../components/types';\nimport { getWorstSeries } from './threshold_processor';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { stringToJsRegex, escapeStringForRegex, ScopedVars, InterpolateFunction, textUtil } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { CompositeItemType, CompositeMetric } from '../components/composites/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\n\nexport const resolveCompositeTemplates = (\n  metricComposites: CompositeItemType[],\n  replaceVariables: InterpolateFunction\n): CompositeItemType[] => {\n  const ret: CompositeItemType[] = [];\n  metricComposites.forEach((item: CompositeItemType) => {\n    const resolved = replaceVariables(item.name, undefined, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n    // if the composite name has template syntax, mark it as isTemplated true\n    const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n    const matchResult = item.name.match(variableRegex);\n    if (matchResult && matchResult.length > 0) {\n      item.isTemplated = true;\n    }\n    resolved.forEach((newName: string) => {\n      ret.push({\n        ...item,\n        name: newName,\n        isTemplated: item.isTemplated,\n      });\n    });\n  });\n\n  return ret;\n};\n\nexport const customFormatter = (value: any) => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nexport const resolveMemberTemplates = (\n  compositeName: string,\n  members: CompositeMetric[],\n  replaceVariables: InterpolateFunction\n): any[] => {\n  const ret: any[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  members.forEach((member) => {\n    // Resolve templates in series names\n    if (member.seriesMatch) {\n      const matchResult = member.seriesMatch.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((aMatch) => {\n          // expand the templatedName (append compositeName to the variables first)\n          const templateVars: ScopedVars = {\n            compositeName: { text: 'compositeName', value: compositeName },\n          };\n          // template variables can be multi-select, or \"all\", iterate over each match\n          const resolvedSeriesNames = replaceVariables(aMatch, templateVars, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n          // iterate over the array of names\n          if (resolvedSeriesNames && resolvedSeriesNames.length) {\n            resolvedSeriesNames.forEach((aName) => {\n              if (aName.includes(compositeName)) {\n                const newName = member.seriesMatch.replace(aMatch, aName);\n                const escapedName = escapeStringForRegex(aName);\n                const newNameEscaped = member.seriesMatch.replace(aMatch, escapedName);\n                ret.push({\n                  ...member,\n                  seriesName: newName,\n                  seriesNameEscaped: newNameEscaped,\n                });\n              }\n            });\n          }\n        });\n      } else {\n        ret.push(member);\n      }\n    }\n  });\n\n  return ret;\n};\n\nconst resolveMemberAliasTemplates = (name: string, matches: any): string => {\n  const templateVars: ScopedVars = {};\n  matches.forEach((name: string, i: number) => {\n    templateVars[i] = { text: i, value: name };\n  });\n  if (matches.groups) {\n    Object.keys(matches.groups).forEach((key) => {\n      templateVars[key.replace(/\\s+/g, '_')] = { text: key, value: matches.groups[key] };\n    });\n  }\n  return getTemplateSrv().replace(name, templateVars);\n};\n\n/**\n * Copies values, leaves members empty\n */\nconst shallowClone = (item: PolystatModel): PolystatModel => {\n  const clone: PolystatModel = {\n    value: item.value,\n    valueFormatted: item.valueFormatted,\n    valueRounded: item.valueRounded,\n    stats: item.stats,\n    name: item.name,\n    displayName: item.displayName,\n    timestamp: item.timestamp,\n    prefix: item.prefix,\n    suffix: item.suffix,\n    color: item.color,\n    clickThrough: item.clickThrough,\n    operatorName: item.operatorName,\n    newTabEnabled: item.newTabEnabled,\n    sanitizedURL: item.sanitizedURL,\n    sanitizeURLEnabled: item.sanitizeURLEnabled,\n    showName: item.showName,\n    showValue: item.showValue,\n    isComposite: item.isComposite,\n    members: [],\n  };\n  return clone;\n};\n\nexport const ApplyComposites = (\n  composites: CompositeItemType[],\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction\n): PolystatModel[] => {\n  if (!composites) {\n    return data;\n  }\n  const filteredMetrics: number[] = [];\n  const keepMetrics: number[] = [];\n  const clonedComposites: PolystatModel[] = [];\n  // the composite Name can be a template variable\n  // the composite should only match specific metrics or expanded templated metrics that use the composite name\n  const resolvedComposites = resolveCompositeTemplates(composites, replaceVariables);\n  for (let i = 0; i < resolvedComposites.length; i++) {\n    const matchedMetrics: number[] = [];\n    const aComposite = resolvedComposites[i];\n    if (!aComposite.showComposite) {\n      continue;\n    }\n    let currentWorstSeries = null;\n    // this should filter the members that are matches for the composite name\n    const templatedMembers = resolveMemberTemplates(aComposite.name, aComposite.metrics, replaceVariables);\n    for (let j = 0; j < templatedMembers.length; j++) {\n      const aMetric = templatedMembers[j];\n      // look for the matches to the pattern in the data\n      for (let index = 0; index < data.length; index++) {\n        // match regex\n        // seriesName may not be defined yet, skip\n        if (typeof aMetric.seriesMatch === 'undefined') {\n          continue;\n        }\n        // name may not be escaped, check both\n        let metricName = aMetric.seriesMatch;\n        if (aMetric.seriesNameEscaped !== undefined) {\n          metricName = aMetric.seriesNameEscaped;\n        }\n        const regex = stringToJsRegex(metricName);\n        const matches = regex.exec(data[index].name);\n        if (matches && matches.length > 0) {\n          const seriesItem = data[index];\n          // Template out the name of the metric using the alias\n          if (aMetric.alias && aMetric.alias.length > 0) {\n            seriesItem.displayName = resolveMemberAliasTemplates(aMetric.alias, matches);\n          }\n\n          // keep index of the matched metric\n          matchedMetrics.push(index);\n          // only hide if requested\n          if (!aComposite.showMembers) {\n            filteredMetrics.push(index);\n          } else {\n            keepMetrics.push(index);\n          }\n          if (aComposite.clickThrough && aComposite.clickThrough.length > 0) {\n            // process template variables\n            let url = replaceVariables(aComposite.clickThrough);\n            // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n            url = ClickThroughTransformer.transformComposite(aComposite.name, url);\n            url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n            url = ClickThroughTransformer.transformNthMetric(url, data);\n            seriesItem.clickThrough = url;\n            seriesItem.sanitizedURL = textUtil.sanitizeUrl(url);\n          }\n        }\n      }\n    }\n    if (matchedMetrics.length === 0) {\n      continue;\n    }\n    // now determine the most triggered threshold\n\n    for (let k = 0; k < matchedMetrics.length; k++) {\n      const itemIndex = matchedMetrics[k];\n      const seriesItem = data[itemIndex];\n      // check thresholds\n      if (currentWorstSeries === null) {\n        currentWorstSeries = seriesItem;\n      } else {\n        currentWorstSeries = getWorstSeries(currentWorstSeries, seriesItem);\n      }\n    }\n    // Prefix the valueFormatted with the actual metric name\n    if (currentWorstSeries !== null) {\n      const clone = shallowClone(currentWorstSeries);\n      clone.name = aComposite.name;\n      clone.displayName = aComposite.name;\n      // tooltip/legend uses this to expand what values are inside the composite\n      for (let index = 0; index < matchedMetrics.length; index++) {\n        const itemIndex = matchedMetrics[index];\n        clone.members.push({\n          ...data[itemIndex],\n          name: data[itemIndex].displayName || data[itemIndex].name,\n        });\n      }\n      clone.thresholdLevel = currentWorstSeries.thresholdLevel;\n      // currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n      // now push the composite into data\n      // add the composite setting for showing the name/value to the new cloned model\n      clone.showName = aComposite.showName;\n      clone.showValue = aComposite.showValue;\n      clone.displayMode = aComposite.displayMode;\n      clone.newTabEnabled = aComposite.clickThroughOpenNewTab;\n      clone.sanitizeURLEnabled = aComposite.clickThroughSanitize;\n      // mark this series as a composite\n      clone.isComposite = true;\n      clonedComposites.push(clone);\n    }\n  }\n  // now merge the clonedComposites into data\n  Array.prototype.push.apply(data, clonedComposites);\n  // remove the keepMetrics from the filteredMetrics list\n  // these have been marked by at least one composite to be displayed\n  for (let i = 0; i < keepMetrics.length; i++) {\n    const keptMetric = keepMetrics[i];\n    const location = filteredMetrics.indexOf(keptMetric);\n    if (location >= 0) {\n      filteredMetrics.splice(location, 1);\n    }\n  }\n  // sort by value descending\n  filteredMetrics.sort((a, b) => {\n    return b - a;\n  });\n  // now remove the filtered metrics from final list\n  // remove filtered metrics, use splice in reverse order\n  for (let i = data.length; i >= 0; i--) {\n    if (lodashIncludes(filteredMetrics, i)) {\n      data.splice(i, 1);\n    }\n  }\n  return data;\n};\n","import { FieldCalcs } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nexport function GetValueByOperator(\n  metricName: string,\n  data: PolystatModel | null,\n  operatorName: string,\n  calcs: FieldCalcs\n) {\n  switch (operatorName) {\n    case 'name':\n      return metricName;\n    case 'last_time':\n      if (data) {\n        return data.timestamp;\n      } else {\n        return Date.now();\n      }\n    default:\n      let aValue = calcs[operatorName];\n      return aValue;\n  }\n}\n","export enum MappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\ninterface BaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  type: MappingType;\n}\n\nexport type ValueMapping = ValueMap | RangeMap;\n\nexport interface ValueMap extends BaseMap {\n  value: string;\n}\n\nexport interface RangeMap extends BaseMap {\n  from: string;\n  to: string;\n}\ntype TimeSeriesValue = string | number | null;\n\nconst addValueToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  valueToTextMapping: ValueMap,\n  value: TimeSeriesValue\n) => {\n  if (valueToTextMapping.value === undefined) {\n    return allValueMappings;\n  }\n\n  if (value === null && isNullValueMap(valueToTextMapping)) {\n    return allValueMappings.concat(valueToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const valueToTextMappingAsNumber = parseFloat(valueToTextMapping.value as string);\n\n  if (isNaN(valueAsNumber) || isNaN(valueToTextMappingAsNumber)) {\n    if (value === valueToTextMapping.value) {\n      return allValueMappings.concat(valueToTextMapping);\n    }\n  }\n\n  if (valueAsNumber !== valueToTextMappingAsNumber) {\n    return allValueMappings;\n  }\n\n  return allValueMappings.concat(valueToTextMapping);\n};\n\nconst addRangeToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  rangeToTextMapping: RangeMap,\n  value: TimeSeriesValue\n) => {\n  if (rangeToTextMapping.from === undefined || rangeToTextMapping.to === undefined || value === undefined) {\n    return allValueMappings;\n  }\n\n  if (\n    value === null &&\n    rangeToTextMapping.from &&\n    rangeToTextMapping.to &&\n    rangeToTextMapping.from.toLowerCase() === 'null' &&\n    rangeToTextMapping.to.toLowerCase() === 'null'\n  ) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const fromAsNumber = parseFloat(rangeToTextMapping.from as string);\n  const toAsNumber = parseFloat(rangeToTextMapping.to as string);\n\n  if (isNaN(valueAsNumber) || isNaN(fromAsNumber) || isNaN(toAsNumber)) {\n    return allValueMappings;\n  }\n\n  if (valueAsNumber >= fromAsNumber && valueAsNumber <= toAsNumber) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  return allValueMappings;\n};\n\nconst getAllFormattedValueMappings = (valueMappings: ValueMapping[], value: TimeSeriesValue) => {\n  const allFormattedValueMappings = valueMappings.reduce((allValueMappings, valueMapping) => {\n    if (valueMapping.type === MappingType.ValueToText) {\n      allValueMappings = addValueToTextMappingText(allValueMappings, valueMapping as ValueMap, value);\n    } else if (valueMapping.type === MappingType.RangeToText) {\n      allValueMappings = addRangeToTextMappingText(allValueMappings, valueMapping as RangeMap, value);\n    }\n\n    return allValueMappings;\n  }, [] as ValueMapping[]);\n\n  allFormattedValueMappings.sort((t1, t2) => {\n    return t1.id - t2.id;\n  });\n\n  return allFormattedValueMappings;\n};\n\nexport const getMappedValue = (valueMappings: ValueMapping[], value: TimeSeriesValue): ValueMapping => {\n  return getAllFormattedValueMappings(valueMappings, value)[0];\n};\n\nconst isNullValueMap = (mapping: ValueMap): boolean => {\n  if (!mapping || !mapping.value) {\n    return false;\n  }\n  return mapping.value.toLowerCase() === 'null';\n};\n","export interface Threshold {\n  value: number;\n  color: string;\n  /**\n   *  Warning, Error, LowLow, Low, OK, High, HighHigh etc\n   */\n  state?: string;\n}\n\n/**\n *  Display mode\n */\nexport enum ThresholdsMode {\n  Absolute = 'absolute',\n  /**\n   *  between 0 and 1 (based on min/max)\n   */\n  Percentage = 'percentage',\n}\n\n/**\n *  Config that is passed to the ThresholdsEditor\n */\nexport interface ThresholdsConfig {\n  mode: ThresholdsMode;\n\n  /**\n   *  Must be sorted by 'value', first value is always -Infinity\n   */\n  steps: Threshold[];\n}\n","/**\n * @public\n */\nexport enum FieldColorModeId {\n  Thresholds = 'thresholds',\n  PaletteClassic = 'palette-classic',\n  PaletteSaturated = 'palette-saturated',\n  ContinuousGrYlRd = 'continuous-GrYlRd',\n  Fixed = 'fixed',\n}\n\n/**\n * @public\n */\nexport interface FieldColor {\n  /** The main color scheme mode */\n  mode: FieldColorModeId | string;\n  /** Stores the fixed color value if mode is fixed */\n  fixedColor?: string;\n  /** Some visualizations need to know how to assign a series color from by value color schemes */\n  seriesBy?: FieldColorSeriesByMode;\n}\n\n/**\n * @beta\n */\nexport type FieldColorSeriesByMode = 'min' | 'max' | 'last';\n\nexport const FALLBACK_COLOR = 'gray';\n","/**\n * @alpha\n */\nexport enum MappingType {\n  ValueToText = 'value', // was 1\n  RangeToText = 'range', // was 2\n  RegexToText = 'regex',\n  SpecialValue = 'special',\n}\n\n/**\n * @alpha\n */\nexport interface ValueMappingResult {\n  text?: string;\n  color?: string;\n  icon?: string;\n  index?: number;\n}\n\n/**\n * @alpha\n */\ninterface BaseValueMap<T> {\n  type: MappingType;\n  options: T;\n}\n\n/**\n * @alpha\n */\nexport interface ValueMap extends BaseValueMap<Record<string, ValueMappingResult>> {\n  type: MappingType.ValueToText;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMapOptions {\n  from: number | null; // changed from string\n  to: number | null;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMap extends BaseValueMap<RangeMapOptions> {\n  type: MappingType.RangeToText;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMapOptions {\n  pattern: string;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMap extends BaseValueMap<RegexMapOptions> {\n  type: MappingType.RegexToText;\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueOptions {\n  match: SpecialValueMatch;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport enum SpecialValueMatch {\n  True = 'true',\n  False = 'false',\n  Null = 'null',\n  NaN = 'nan',\n  NullAndNaN = 'null+nan',\n  Empty = 'empty',\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueMap extends BaseValueMap<SpecialValueOptions> {\n  type: MappingType.SpecialValue;\n}\n\n/**\n * @alpha\n */\nexport type ValueMapping = ValueMap | RangeMap | RegexMap | SpecialValueMap;\n","import { getActiveThreshold } from './thresholds';\nimport { stringToJsRegex } from '@grafana/data';\nimport {\n  MappingType,\n  SpecialValueMatch,\n  ValueMap,\n  ValueMapping,\n  ValueMappingResult,\n  SpecialValueOptions,\n} from './types/valueMappings';\nimport { ThresholdsConfig } from './types/thresholds';\n\nexport function getValueMappingResult(valueMappings: ValueMapping[], value: any): ValueMappingResult | null {\n  for (const vm of valueMappings) {\n    switch (vm.type) {\n      case MappingType.ValueToText:\n        if (value == null) {\n          continue;\n        }\n\n        const result = vm.options[value];\n        if (result) {\n          return result;\n        }\n\n        break;\n\n      case MappingType.RangeToText:\n        if (value == null) {\n          continue;\n        }\n\n        const valueAsNumber = parseFloat(value as string);\n        if (isNaN(valueAsNumber)) {\n          continue;\n        }\n\n        const isNumFrom = !isNaN(vm.options.from!);\n        if (isNumFrom && valueAsNumber < vm.options.from!) {\n          continue;\n        }\n\n        const isNumTo = !isNaN(vm.options.to!);\n        if (isNumTo && valueAsNumber > vm.options.to!) {\n          continue;\n        }\n\n        return vm.options.result;\n\n      case MappingType.RegexToText:\n        if (value == null) {\n          continue;\n        }\n\n        if (typeof value !== 'string') {\n          continue;\n        }\n\n        const regex = stringToJsRegex(vm.options.pattern);\n        if (value.match(regex)) {\n          const res = { ...vm.options.result };\n\n          if (res.text != null) {\n            res.text = value.replace(regex, vm.options.result.text || '');\n          }\n\n          return res;\n        }\n\n      case MappingType.SpecialValue:\n        switch ((vm.options as SpecialValueOptions).match) {\n          case SpecialValueMatch.Null: {\n            if (value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NaN: {\n            if (isNaN(value as any)) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NullAndNaN: {\n            if (isNaN(value as any) || value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.True: {\n            if (value === true || value === 'true') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.False: {\n            if (value === false || value === 'false') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.Empty: {\n            if (value === '') {\n              return vm.options.result;\n            }\n            break;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Ref https://stackoverflow.com/a/58550111\nexport function isNumeric(num: any) {\n  return (typeof num === 'number' || (typeof num === 'string' && num.trim() !== '')) && !isNaN(num as number);\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport enum LegacyMappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport interface LegacyBaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  type: LegacyMappingType;\n}\n\n/**\n * @deprecated use ValueMapping instead\n * @internal\n */\nexport type LegacyValueMapping = LegacyValueMap | LegacyRangeMap;\n\n/**\n * @deprecated use ValueMap instead\n * @internal\n */\nexport interface LegacyValueMap extends LegacyBaseMap {\n  value: string;\n}\n\n/**\n * @deprecated use RangeMap instead\n * @internal\n */\nexport interface LegacyRangeMap extends LegacyBaseMap {\n  from: string;\n  to: string;\n}\n\n/**\n * @deprecated use getValueMappingResult instead\n * @internal\n */\nexport function getMappedValue(valueMappings: LegacyValueMapping[], value: any): LegacyValueMapping {\n  const emptyResult = { type: LegacyMappingType.ValueToText, value: '', text: '', from: '', to: '', id: 0 };\n  if (!valueMappings?.length) {\n    return emptyResult;\n  }\n\n  const upgraded: ValueMapping[] = [];\n  for (const vm of valueMappings) {\n    if (isValueMapping(vm)) {\n      upgraded.push(vm);\n      continue;\n    }\n    upgraded.push(upgradeOldAngularValueMapping(vm));\n  }\n\n  if (!upgraded?.length) {\n    return emptyResult;\n  }\n\n  const result = getValueMappingResult(upgraded, value);\n  if (!result) {\n    return emptyResult;\n  }\n\n  return {\n    type: LegacyMappingType.ValueToText,\n    value: result.text,\n    text: result.text ?? '',\n    from: '',\n    to: '',\n    id: result.index ?? 0,\n  };\n}\n\n/**\n * @alpha\n * Converts the old Angular value mappings to new react style\n */\nexport function convertOldAngularValueMappings(panel: any, migratedThresholds?: ThresholdsConfig): ValueMapping[] {\n  const mappings: ValueMapping[] = [];\n\n  // Guess the right type based on options\n  let mappingType = panel.mappingType;\n  if (!panel.mappingType) {\n    if (panel.valueMaps && panel.valueMaps.length) {\n      mappingType = 1;\n    } else if (panel.rangeMaps && panel.rangeMaps.length) {\n      mappingType = 2;\n    }\n  }\n  if (mappingType === 1) {\n    for (let i = 0; i < panel.valueMaps.length; i++) {\n      const map = panel.valueMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.ValueToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  } else if (mappingType === 2) {\n    for (let i = 0; i < panel.rangeMaps.length; i++) {\n      const map = panel.rangeMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.RangeToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  }\n\n  return mappings;\n}\n\nfunction upgradeOldAngularValueMapping(old: any, thresholds?: ThresholdsConfig): ValueMapping {\n  const valueMaps: ValueMap = { type: MappingType.ValueToText, options: {} };\n  const newMappings: ValueMapping[] = [];\n\n  // Use the color we would have picked from thresholds\n  let color: string | undefined = undefined;\n  const numeric = parseFloat(old.text);\n  if (thresholds && !isNaN(numeric)) {\n    const level = getActiveThreshold(numeric, thresholds.steps);\n    if (level && level.color) {\n      color = level.color;\n    }\n  }\n\n  switch (old.type) {\n    case LegacyMappingType.ValueToText:\n    case MappingType.ValueToText:\n      if (old.value != null) {\n        if (old.value === 'null') {\n          newMappings.push({\n            type: MappingType.SpecialValue,\n            options: {\n              match: SpecialValueMatch.Null,\n              result: { text: old.text, color },\n            },\n          });\n        } else {\n          valueMaps.options[String(old.value)] = {\n            text: old.text,\n            color,\n          };\n        }\n      }\n      break;\n    case LegacyMappingType.RangeToText:\n    case MappingType.RangeToText:\n      if (old.from === 'null' || old.to === 'null') {\n        newMappings.push({\n          type: MappingType.SpecialValue,\n          options: {\n            match: SpecialValueMatch.Null,\n            result: { text: old.text, color },\n          },\n        });\n      } else {\n        newMappings.push({\n          type: MappingType.RangeToText,\n          options: {\n            from: +old.from,\n            to: +old.to,\n            result: { text: old.text, color },\n          },\n        });\n      }\n      break;\n  }\n\n  if (Object.keys(valueMaps.options).length > 0) {\n    newMappings.unshift(valueMaps);\n  }\n\n  return newMappings[0];\n}\n\nfunction isValueMapping(map: any): map is ValueMapping {\n  if (!map) {\n    return false;\n  }\n\n  return map.hasOwnProperty('options') && typeof map.options === 'object';\n}\n","import { getMappedValue } from './v7/valueMappings';\nimport { getValueMappingResult } from './v8/valueMappings';\n\n//\n// To maintain compatibility back to Grafana >=v7.3, this wrapper is needed\n// to process the value mappings based on the object passed in.\n//\n// the method `getMappedValue()` function was removed in v9\n// the replacement `getValueMappingResult()` only appears in v8.1.0+\n//\n// At runtime, this cannot be determined so the legacy function and the new function are both provided\n// here, to allow this to work work across all versions (7.3 > 9.x)\n//\nexport const GetMappedValue = (valueMappings: any[], value: any): any => {\n  let mappedValue = getMappedValue(valueMappings, value);\n  if (typeof mappedValue === 'undefined') {\n    return getValueMappingResult(valueMappings, value);\n  }\n  return mappedValue;\n};\n","import { getTemplateSrv } from '@grafana/runtime';\nimport {\n  getValueFormat,\n  stringToJsRegex,\n  ScopedVars,\n  InterpolateFunction,\n  textUtil,\n  getColorForTheme,\n  FieldConfigSource,\n} from '@grafana/data';\nimport { useTheme, useTheme2 } from '@grafana/ui';\nimport { getThresholdLevelForValue } from './threshold_processor';\nimport { GetValueByOperator } from './stats';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { PolystatModel } from '../components/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from 'components/thresholds/types';\nimport { GetMappedValue } from './valueMappingsWrapper';\n\nconst roundValue = (num: number, decimals: number) => {\n  if (num === null) {\n    return null;\n  }\n  const n = Math.pow(10, decimals);\n  const formatted = (n * num).toFixed(decimals);\n  return Math.round(parseFloat(formatted)) / n;\n};\n\nconst customFormatter = (value: any): string => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nconst resolveOverrideTemplates = (overrides: OverrideItemType[]): OverrideItemType[] => {\n  const ret: OverrideItemType[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  overrides.forEach((override) => {\n    // Resolve templates in series names\n    if (override.metricName) {\n      const matchResult = override.metricName.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((template: any) => {\n          const templateVars: ScopedVars = {};\n          const resolvedSeriesNames = getTemplateSrv()\n            .replace(template, templateVars, customFormatter)\n            .split(CUSTOM_SPLIT_DELIMITER);\n          resolvedSeriesNames.forEach((seriesName) => {\n            const newName = override.metricName.replace(template, seriesName);\n            ret.push({\n              ...override,\n              metricName: newName,\n            });\n          });\n        });\n      } else {\n        // does not match template, but can match a simple regex\n        ret.push(override);\n      }\n    }\n  });\n\n  return ret;\n};\n\nexport const MatchOverride = (pattern: string, overrides: OverrideItemType[]): OverrideItemType | null => {\n  const resolvedOverrides = resolveOverrideTemplates(overrides);\n  for (let index = 0; index < resolvedOverrides.length; index++) {\n    const anOverride = resolvedOverrides[index];\n    const regex = stringToJsRegex(anOverride.metricName);\n    const matches = pattern.match(regex);\n    if (matches && matches.length > 0 && anOverride.enabled) {\n      return resolvedOverrides[index];\n    }\n  }\n  return null;\n};\n\nexport const ApplyOverrides = (\n  overrides: OverrideItemType[],\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  replaceVariables: InterpolateFunction | null\n) => {\n  // v9 compatible\n  const theme2 = useTheme2();\n  const oldTheme = useTheme();\n  // determine real color\n  let realGlobalFillColor = '';\n  if (typeof theme2.visualization !== 'undefined') {\n    realGlobalFillColor = theme2.visualization.getColorByName(globalFillColor);\n  } else {\n    realGlobalFillColor = getColorForTheme(globalFillColor, oldTheme);\n  }\n\n  if (!overrides) {\n    return data;\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    const anOverride = MatchOverride(data[index].name, overrides);\n    if (anOverride) {\n      const aSeries = data[index];\n      // set the operators\n      aSeries.operatorName = anOverride.operatorName;\n      const dataValue = GetValueByOperator(aSeries.name, aSeries, aSeries.operatorName, aSeries.stats);\n      // Use defaults or the specific threshold\n      const thresholds =\n        anOverride.thresholds && anOverride.thresholds.length ? anOverride.thresholds : globalThresholds;\n      const result = getThresholdLevelForValue(thresholds, dataValue, globalFillColor);\n      let useColor = result.color;\n      if (typeof theme2.visualization !== 'undefined') {\n        useColor = theme2.visualization.getColorByName(result.color);\n      } else {\n        useColor = getColorForTheme(result.color, oldTheme);\n      }\n      // set value to what was returned\n      data[index].value = dataValue;\n      data[index].color = useColor;\n      data[index].thresholdLevel = result.thresholdLevel;\n      // format it\n      // TODO: fix me!\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        // set color also\n        if (mappedValue.color) {\n          let realColor = theme2.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n      } else {\n        const formatFunc = getValueFormat(anOverride.unitFormat);\n        if (formatFunc) {\n          // put the value in quotes to escape \"most\" special characters\n          const decimals: number = +anOverride.decimals;\n          const formatted = formatFunc(data[index].value, decimals, anOverride.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          // spaces are included with the formatFunc\n          if (formatted.suffix) {\n            data[index].valueFormatted += formatted.suffix;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = formatted.prefix + data[index].valueFormatted;\n          }\n          data[index].valueRounded = roundValue(data[index].value, decimals) || data[index].value;\n        }\n      }\n      // add prefix/suffix to formatted value\n      if (anOverride.prefix !== '') {\n        data[index].valueFormatted = anOverride.prefix + ' ' + data[index].valueFormatted;\n      }\n      if (anOverride.suffix !== '') {\n        data[index].valueFormatted = data[index].valueFormatted + ' ' + anOverride.suffix;\n      }\n      if (anOverride.alias !== '') {\n        data[index].displayName = anOverride.alias;\n      }\n      data[index].prefix = anOverride.prefix;\n      data[index].suffix = anOverride.suffix;\n      // set the url, replace template vars\n      if (anOverride.clickThrough && anOverride.clickThrough.length > 0) {\n        const regex = stringToJsRegex(anOverride.metricName);\n        const matches = regex.exec(data[index].name);\n        const templateVars: ScopedVars = {};\n        if (matches && matches.length > 0) {\n          matches.forEach((name: string, i: number) => {\n            templateVars[i] = { text: i, value: name };\n          });\n        }\n        let url = getTemplateSrv().replace(anOverride.clickThrough, templateVars);\n        // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n        url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n        url = ClickThroughTransformer.transformNthMetric(url, data);\n        url = ClickThroughTransformer.transformByRegex(anOverride.metricName, data[index], url);\n        data[index].clickThrough = url;\n        data[index].newTabEnabled = anOverride.clickThroughOpenNewTab;\n        data[index].sanitizeURLEnabled = anOverride.clickThroughSanitize;\n        // provide both versions, what is displayed is determined later\n        data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n      }\n    } else if (globalThresholds && globalThresholds.length) {\n      const result = getThresholdLevelForValue(globalThresholds, data[index].value, globalFillColor);\n      // set value to what was returned\n      data[index].color = result.color;\n      data[index].thresholdLevel = result.thresholdLevel;\n    }\n  }\n  return data;\n};\n","import { InsertTime } from './deframer';\nimport { useTheme2 } from '@grafana/ui';\nimport {\n  Field,\n  FieldType,\n  reduceField,\n  textUtil,\n  DataFrame,\n  PanelData,\n  getFieldDisplayName,\n  formattedValueToString,\n  getValueFormat,\n  stringToJsRegex,\n  InterpolateFunction,\n  FieldConfigSource,\n  ScopedVars,\n} from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { includes as lodashIncludes } from 'lodash';\nimport { DisplayModes, OperatorOptions, PolystatModel } from '../components/types';\nimport { GLOBAL_FILL_COLOR_RGBA } from '../components/defaults';\nimport { GetDecimalsForValue, SortVariableValuesByField } from '../utils';\nimport { ApplyComposites } from './composite_processor';\nimport { CompositeItemType } from 'components/composites/types';\nimport { ApplyOverrides } from './override_processor';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { GetValueByOperator } from './stats';\n\n/**\n * Converts dataframes to internal model\n *\n * @param   {PanelData}    data                [data description]\n * @param   {string[]}     globalRegexPattern  [globalRegexPattern description]\n *\n * @return  {DataFrame[]}                      [return description]\n */\nexport function ProcessDataFrames(\n  compositesEnabled: boolean,\n  composites: CompositeItemType[],\n  overrides: OverrideItemType[],\n  data: PanelData,\n  replaceVariables: InterpolateFunction,\n  fieldConfig: FieldConfigSource<any>,\n  globalClickthrough: string,\n  globalClickthroughTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalOperator: string,\n  globalDecimals: number,\n  globalDisplayMode: string,\n  globalRegexPattern: string,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  globalUnitFormat: string,\n  sortByDirection: number,\n  sortByField: string\n): PolystatModel[] {\n  // check if data contains a field called Time of type time\n  let processedData = InsertTime(data.series);\n  let internalData = [] as PolystatModel[];\n  // just one for now...\n  processedData.map((item) => {\n    const models = DataFrameToPolystat(item, globalOperator);\n    for (const aModel of models) {\n      internalData.push(aModel);\n    }\n  });\n  internalData = ApplyGlobalRegexPattern(internalData, globalRegexPattern);\n  // formatting can change colors due to value maps\n  internalData = ApplyGlobalFormatting(internalData, fieldConfig, globalUnitFormat, globalDecimals, globalFillColor);\n  // applies overrides and global thresholds (and mappings)\n  internalData = ApplyOverrides(\n    overrides,\n    internalData,\n    fieldConfig,\n    globalFillColor,\n    globalThresholds,\n    replaceVariables\n  );\n  // composites\n  if (compositesEnabled) {\n    internalData = ApplyComposites(composites, internalData, replaceVariables);\n  }\n  // clickthroughs\n  internalData = ApplyGlobalClickThrough(\n    internalData,\n    globalClickthrough,\n    globalClickthroughTabEnabled,\n    globalClickthroughSanitizedEnabled\n  );\n  // filter by global display mode\n  internalData = FilterByGlobalDisplayMode(internalData, globalDisplayMode);\n  // final step sorting\n  internalData = SortVariableValuesByField(internalData, sortByField, sortByDirection);\n  return internalData;\n}\n\n/**\n * renames according to a global regex pattern\n *\n * @param   {DataFrame[]}  series        [series description]\n * @param   {string[]}     regexPattern  [regexPattern description]\n *\n * @return  {DataFrame[]}                [return description]\n */\nexport const ApplyGlobalRegexPattern = (data: PolystatModel[], regexPattern: string) => {\n  for (let i = 0; i < data.length; i++) {\n    if (regexPattern !== '') {\n      const regexVal = stringToJsRegex(regexPattern);\n      if (data[i].name && regexVal.test(data[i].name.toString())) {\n        const temp = regexVal.exec(data[i].name.toString());\n        if (!temp) {\n          continue;\n        }\n        let extractedTxt = '';\n        if (temp.length > 1) {\n          temp.slice(1).forEach((value, i) => {\n            if (value) {\n              extractedTxt += extractedTxt.length > 0 ? ' ' + value.toString() : value.toString();\n            }\n          });\n          data[i].displayName = extractedTxt;\n        }\n      }\n    }\n  }\n  return data;\n};\n\nexport const ApplyGlobalClickThrough = (\n  data: PolystatModel[],\n  globalClickthrough: string,\n  globalClickthroughNewTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean\n) => {\n  for (let index = 0; index < data.length; index++) {\n    if (data[index].clickThrough.length === 0) {\n      data[index].clickThrough = processDefaultClickThrough(index, globalClickthrough, data);\n      data[index].newTabEnabled = globalClickthroughNewTabEnabled;\n      data[index].sanitizeURLEnabled = globalClickthroughSanitizedEnabled;\n      // always provide both versions and overrides and composites can specify which one to use\n      data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n    }\n  }\n  return data;\n};\n\nconst processDefaultClickThrough = (index: number, globalClickthrough: string, data: PolystatModel[]): string => {\n  let url = globalClickthrough;\n  // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n  url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n  url = ClickThroughTransformer.transformNthMetric(url, data);\n  // process template variables inside clickthrough\n  const templateVars: ScopedVars = {};\n  url = getTemplateSrv().replace(url, templateVars);\n  return url;\n};\n\nexport const ApplyGlobalFormatting = (\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalUnitFormat: string,\n  globalDecimals: number,\n  globalFillColor: string\n) => {\n  const theme = useTheme2();\n  let realGlobalFillColor = theme.visualization.getColorByName(globalFillColor);\n  const formatFunc = getValueFormat(globalUnitFormat);\n  for (let index = 0; index < data.length; index++) {\n    // Check for mapped value, if nothing set, format value\n    if (data[index].value !== null) {\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        // set color also\n        if (mappedValue.color) {\n          let realColor = theme.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n      } else {\n        if (formatFunc) {\n          const result = GetDecimalsForValue(data[index].value, globalDecimals);\n          const formatted = formatFunc(data[index].value, result.decimals, result.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          if (formatted.suffix) {\n            data[index].valueFormatted += ` ${formatted.suffix}`;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = `{$formatted.prefix} ${data[index].valueFormatted}`;\n          }\n          const valueRounded = roundValue(data[index].value, result.decimals);\n          if (valueRounded !== null) {\n            data[index].valueRounded = valueRounded;\n          }\n        }\n        data[index].color = realGlobalFillColor;\n      }\n    }\n  }\n  return data;\n};\n\nconst FilterByGlobalDisplayMode = (data: any, globalDisplayMode: string) => {\n  const filteredMetrics: number[] = [];\n  const compositeMetrics: PolystatModel[] = [];\n  if (globalDisplayMode !== 'all') {\n    const dataLen = data.length;\n    for (let i = 0; i < dataLen; i++) {\n      const item = data[i];\n      // keep if composite\n      if (item.isComposite) {\n        compositeMetrics.push(item);\n      }\n      if (item.thresholdLevel < 1) {\n        // push the index number\n        filteredMetrics.push(i);\n      }\n    }\n    // remove filtered metrics, use splice in reverse order\n    for (let i = data.length; i >= 0; i--) {\n      if (lodashIncludes(filteredMetrics, i)) {\n        data.splice(i, 1);\n      }\n    }\n    if (data.length === 0) {\n      if (compositeMetrics.length > 0) {\n        // set data to be all of the composites\n        data = compositeMetrics;\n      }\n    }\n  }\n  return data;\n};\n\nconst roundValue = (num: number, decimals: number) => {\n  if (num === null) {\n    return null;\n  }\n  const n = Math.pow(10, decimals);\n  const formatted = (n * num).toFixed(decimals);\n  return Math.round(parseFloat(formatted)) / n;\n};\n\nexport function DataFrameToPolystat(frame: DataFrame, globalOperator: string): PolystatModel[] {\n  /*\n  const shortenValue = (value: string, length: number) => {\n    if (value.length > length) {\n      return value.substring(0, length).concat('...');\n    } else {\n      return value;\n    }\n  };\n  */\n  const valueFields: Field[] = [];\n\n  for (const aField of frame.fields) {\n    if (aField.type === FieldType.number) {\n      valueFields.push(aField);\n    }\n  }\n  const models: PolystatModel[] = [];\n\n  for (const valueField of valueFields) {\n    const standardCalcs = reduceField({ field: valueField!, reducers: ['bogus'] });\n    //const x = getDisplayProcessor({ field: valueField, theme: useTheme2() });\n    const valueFieldName = getFieldDisplayName(valueField!, frame);\n    const operatorValue = GetValueByOperator(valueFieldName, null, globalOperator, standardCalcs);\n\n    let maxDecimals = 4;\n    if (valueField!.config.decimals !== undefined && valueField!.config.decimals !== null) {\n      maxDecimals = valueField!.config.decimals;\n    }\n    const result = getValueFormat(valueField!.config.unit)(operatorValue, maxDecimals, undefined, undefined);\n    const valueFormatted = formattedValueToString(result);\n\n    const model: PolystatModel = {\n      displayMode: DisplayModes[0].value,\n      thresholdLevel: 0,\n      value: operatorValue,\n      valueFormatted: valueFormatted,\n      valueRounded: roundValue(operatorValue, maxDecimals) || operatorValue,\n      stats: standardCalcs,\n      name: valueFieldName, // aSeries.name,\n      displayName: valueFieldName, // aSeries.name,\n      timestamp: 0,\n      prefix: '',\n      suffix: '',\n      color: GLOBAL_FILL_COLOR_RGBA,\n      clickThrough: '',\n      operatorName: OperatorOptions[0].value,\n      newTabEnabled: true,\n      sanitizedURL: '',\n      sanitizeURLEnabled: true,\n      showName: true,\n      showValue: true,\n      isComposite: false,\n      members: [],\n    };\n    models.push(model);\n  }\n  return models;\n}\n","import React from 'react';\nimport { PanelProps, GrafanaTheme2 } from '@grafana/data';\nimport { PolystatOptions } from './types';\nimport { Polystat } from './Polystat';\nimport { css, cx } from '@emotion/css';\nimport { useStyles2, useTheme2 } from '@grafana/ui';\nimport { ProcessDataFrames } from '../data/processor';\nimport { getErrorMessageStyles } from './styles';\n\ninterface Props extends PanelProps<PolystatOptions> {}\n\nconst getComponentStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    container: css`\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      height: 100%;\n      width: 100%;\n      & svg > g > polygon {\n        fill: transparent;\n      }\n    `,\n  };\n};\n\nexport const PolystatPanel: React.FC<Props> = ({ options, data, id, width, height, replaceVariables, fieldConfig }) => {\n  const styles = useStyles2(getComponentStyles);\n  const errorMessageStyles = useStyles2(getErrorMessageStyles);\n\n  // each series is a converted to a model we can use\n  const processedData = ProcessDataFrames(\n    options.compositeConfig.enabled,\n    options.compositeConfig.composites,\n    options.overrideConfig.overrides,\n    data,\n    replaceVariables,\n    fieldConfig,\n    options.globalClickthrough,\n    options.globalClickthroughNewTabEnabled,\n    options.globalClickthroughSanitizedEnabled,\n    options.globalOperator,\n    options.globalDecimals,\n    options.globalDisplayMode,\n    options.globalRegexPattern,\n    options.globalFillColor,\n    options.globalThresholdsConfig,\n    options.globalUnitFormat,\n    options.sortByDirection,\n    options.sortByField\n  );\n  const currentTheme = useTheme2();\n\n  if ((options.layoutDisplayLimit > 0) && (processedData!.length > options.layoutDisplayLimit)) {\n    return (\n      <div className={errorMessageStyles}>\n        Not enough polygons for data. There are {processedData!.length} items to display,\n      but configuration is limited to {options.layoutDisplayLimit}. See the Display Limit setting in category Layout.\n      </div>\n    );\n  }\n\n  let autoFontColor = '#000000'; // default to black\n  if (options.globalTextFontAutoColorEnabled) {\n    // use primary text color for theme\n    autoFontColor = currentTheme.colors.text.primary;\n  }\n  const renderTime = new Date();\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <div className={cx(styles.container)}>\n        <Polystat\n          compositeConfig={options.compositeConfig}\n          overrideConfig={options.overrideConfig}\n          autoSizePolygons={options.autoSizePolygons}\n          globalAutoScaleFonts={options.globalAutoScaleFonts}\n          globalClickthrough={options.globalClickthrough}\n          globalClickthroughNewTabEnabled={options.globalClickthroughNewTabEnabled}\n          globalClickthroughSanitizedEnabled={options.globalClickthroughSanitizedEnabled}\n          globalOperator={options.globalOperator}\n          globalDecimals={options.globalDecimals}\n          globalDisplayMode={options.globalDisplayMode}\n          globalDisplayTextTriggeredEmpty={options.globalDisplayTextTriggeredEmpty}\n          globalFontSize={options.globalFontSize}\n          globalPolygonSize={options.globalPolygonSize}\n          ellipseCharacters={options.ellipseCharacters}\n          ellipseEnabled={options.ellipseEnabled}\n          globalFillColor={options.globalFillColor}\n          globalRegexPattern={options.globalRegexPattern}\n          globalGradientsEnabled={options.globalGradientsEnabled}\n          globalTextFontAutoColor={autoFontColor}\n          globalTextFontAutoColorEnabled={options.globalTextFontAutoColorEnabled}\n          globalTextFontColor={options.globalTextFontColor}\n          globalTextFontFamily={options.globalTextFontFamily}\n          globalThresholdsConfig={options.globalThresholdsConfig}\n          globalTooltipsEnabled={options.globalTooltipsEnabled}\n          globalTooltipsShowTimestampEnabled={options.globalTooltipsShowTimestampEnabled}\n          globalTooltipsFontFamily={options.globalTooltipsFontFamily}\n          globalUnitFormat={options.globalUnitFormat}\n          autoSizeColumns={options.autoSizeColumns}\n          autoSizeRows={options.autoSizeRows}\n          layoutDisplayLimit={options.layoutDisplayLimit}\n          layoutNumColumns={options.layoutNumColumns}\n          layoutNumRows={options.layoutNumRows}\n          processedData={processedData}\n          panelId={id}\n          panelWidth={width}\n          panelHeight={height}\n          radius={options.radius}\n          renderTime={renderTime}\n          globalShape={options.globalShape}\n          sortByDirection={options.sortByDirection}\n          sortByField={options.sortByField}\n          globalPolygonBorderColor={options.globalPolygonBorderColor}\n          globalPolygonBorderSize={options.globalPolygonBorderSize}\n          globalShowValueEnabled={options.globalShowValueEnabled}\n          globalShowTooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n          tooltipPrimarySortDirection={options.tooltipPrimarySortDirection}\n          tooltipPrimarySortByField={options.tooltipPrimarySortByField}\n          tooltipSecondarySortDirection={options.tooltipSecondarySortDirection}\n          tooltipSecondarySortByField={options.tooltipSecondarySortByField}\n          tooltipDisplayMode={options.tooltipDisplayMode}\n          tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n        />\n      </div>\n    </div>\n  );\n};\n","import { SelectableValue } from '@grafana/data';\n\nexport interface CompositeMember {}\n\nexport const DisplayModes: SelectableValue[] = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport interface CompositeMetric {\n  seriesMatch: string;\n  compositeMatch?: CompositeItemType[];\n  alias?: string;\n  ID?: string;\n  order: number;\n}\n\nexport interface CompositeItemType {\n  name: string;\n  label: string;\n  order: number;\n  isTemplated: boolean;\n  displayMode: string;\n  enabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showComposite: boolean;\n  showMembers: boolean;\n  metrics: CompositeMetric[];\n  clickThrough: string | '';\n  clickThroughSanitize: boolean;\n  clickThroughOpenNewTab: boolean;\n}\n\nexport interface CompositeItemTracker {\n  composite: CompositeItemType;\n  order: number;\n  ID: string;\n}\n\nexport interface CompositeItemProps {\n  composite: CompositeItemType;\n  ID: string;\n  enabled: boolean;\n  setter: any;\n  remover: any;\n  moveUp: any;\n  moveDown: any;\n  createDuplicate: any;\n  context: any;\n}\n\nexport interface CompositeMetricItemProps {\n  metric: CompositeMetric;\n  index: number;\n  disabled: boolean;\n  removeMetric: any;\n  updateMetric: any;\n  updateMetricAlias: any;\n  context: any;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { Input, Field, IconButton, HorizontalGroup, Cascader, CascaderOption, FieldSet } from '@grafana/ui';\nimport { CompositeMetricItemProps } from './types';\nimport { getMetricHints } from '../metric_hints';\n\nexport const CompositeMetricItem: React.FC<CompositeMetricItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n\n  async function copySelectedMetricToClipboard(index: number) {\n    if (props.metric.seriesMatch) {\n      const aValue = props.metric.seriesMatch;\n      if ('clipboard' in navigator) {\n        if (aValue) {\n          return await navigator.clipboard.writeText(aValue);\n        }\n      } else {\n        if (aValue) {\n          return document.execCommand('copy', true, aValue);\n        }\n      }\n    }\n  }\n\n  const updateMetric = (v: string) => {\n    props.updateMetric(props.index, v);\n  };\n  const updateMetricAlias = (alias: string) => {\n    props.updateMetricAlias(props.index, alias);\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <FieldSet>\n      <HorizontalGroup>\n        <IconButton\n          key=\"deleteMetric\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete this metric\"\n          onClick={() => props.removeMetric(props.index)}\n        />\n        <IconButton\n          key=\"copyMetric\"\n          variant=\"secondary\"\n          name=\"copy\"\n          tooltip=\"Copy Metric/Regex\"\n          onClick={() => copySelectedMetricToClipboard(props.index)}\n        />\n        <Field label=\"Metric/RegEx\" style={{ minWidth: '175px' }} disabled={props.disabled}>\n          <Cascader\n            key={`cmi-index-${props.index}`}\n            initialValue={props.metric.seriesMatch}\n            allowCustomValue\n            placeholder=\"\"\n            options={metricHints}\n            onSelect={(val: string) => updateMetric(val)}\n          />\n        </Field>\n        <Field label=\"Alias\" disabled={props.disabled}>\n          <Input value={props.metric.alias} placeholder=\"\" onChange={(e) => updateMetricAlias(e.currentTarget.value)} />\n        </Field>\n      </HorizontalGroup>\n    </FieldSet>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { IconName, Button, Input, Select, Field, FieldSet, Switch, Card, IconButton } from '@grafana/ui';\nimport { DisplayModes, CompositeItemProps, CompositeMetric, CompositeItemType } from './types';\nimport { CompositeMetricItem } from './CompositeMetricItem';\nimport { v4 as uuidv4 } from 'uuid';\nimport { SelectableValue } from '@grafana/data';\n\nexport const CompositeItem: React.FC<CompositeItemProps> = (props: CompositeItemProps) => {\n  const [composite, _setComposite] = useState(props.composite);\n  const getDisplayMode = (displayMode: string) => {\n    const keys = DisplayModes.keys();\n    for (const aKey of keys) {\n      if (DisplayModes[aKey].value === displayMode) {\n        return DisplayModes[aKey];\n      }\n    }\n    // no match, return all by default\n    return DisplayModes[0];\n  };\n  const [displayMode, setDisplayMode] = useState<SelectableValue<any>>(getDisplayMode(props.composite.displayMode));\n  const setComposite = (value: CompositeItemType) => {\n    _setComposite(value);\n    props.setter(composite.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n  const removeItem = () => {\n    //alert('high');\n    props.remover(composite.order);\n    // call parent remove function\n  };\n\n  const toggleShowName = () => {\n    const currentState = composite.showName;\n    //setShowName(!currentState);\n    setComposite({ ...composite, showName: !currentState });\n  };\n\n  const removeMetric = (index: number) => {\n    let allMetrics = [...props.composite.metrics];\n    allMetrics.splice(index, 1);\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n  const moveUp = () => {\n    props.moveUp(composite.order);\n  };\n  const moveDown = () => {\n    props.moveDown(composite.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(composite.order);\n  };\n\n  const updateMetric = (index: number, value: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].seriesMatch = value;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const updateMetricAlias = (index: number, alias: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].alias = alias;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const addMetric = () => {\n    const newMetric: CompositeMetric = {\n      seriesMatch: '',\n      ID: uuidv4(),\n      order: 0,\n    };\n    if (!composite.metrics) {\n      const currentMetrics: CompositeMetric[] = [];\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    } else {\n      const currentMetrics: CompositeMetric[] = composite.metrics;\n      newMetric.order = currentMetrics.length;\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    }\n  };\n\n  return (\n    <Card heading=\"\" key={`composite-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field label=\"Composite Name\" description=\"Name or Regular Expression\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.name}\n              placeholder=\"\"\n              onChange={(e) => setComposite({ ...composite, name: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Show Name\" description=\"Toggle Display of composite name\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showName}\n              disabled={!composite.showComposite}\n              onChange={toggleShowName}\n            ></Switch>\n          </Field>\n          <Field label=\"Show Value\" description=\"Toggle Display of composite value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showValue}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showValue: !composite.showValue })}\n            />\n          </Field>\n          <Field\n            label=\"Show Members\"\n            description=\"Toggle Display of composite members\"\n            disabled={!composite.showComposite}\n          >\n            <Switch\n              transparent={true}\n              value={composite.showMembers}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showMembers: !composite.showMembers })}\n            />\n          </Field>\n          <Field\n            label=\"Display Mode\"\n            description=\"All will display all members, Triggered will only display those meeting threshold settings\"\n            disabled={!composite.showComposite}\n          >\n            <Select\n              menuShouldPortal={true}\n              value={displayMode}\n              onChange={(v) => {\n                setDisplayMode(v);\n                setComposite({ ...composite, displayMode: v.value });\n              }}\n              options={DisplayModes}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setComposite({ ...composite, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              disabled={!composite.showComposite}\n              value={composite.clickThroughSanitize}\n              onChange={() => setComposite({ ...composite, clickThroughSanitize: !composite.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open in New Tab\" description=\"Open link in new tab\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughOpenNewTab}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, clickThroughOpenNewTab: !composite.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field disabled={!composite.showComposite}>\n            <Button\n              key=\"addMetric\"\n              variant=\"primary\"\n              icon=\"plus\"\n              disabled={!composite.showComposite}\n              onClick={addMetric}\n            >\n              Add Metric\n            </Button>\n          </Field>\n          {composite.metrics &&\n            composite.metrics.map((item: CompositeMetric, index: number) => {\n              // generate ID if it doesn't exist\n              if (!item.ID) {\n                item.ID = uuidv4();\n              }\n              return (\n                <CompositeMetricItem\n                  key={`composite-metric-id-${item.ID}`}\n                  metric={item}\n                  index={index}\n                  disabled={!composite.showComposite}\n                  updateMetric={updateMetric}\n                  updateMetricAlias={updateMetricAlias}\n                  removeMetric={removeMetric}\n                  context={props.context}\n                />\n              );\n            })}\n        </FieldSet>\n      </Card.Meta>\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"showComposite\"\n          name={composite.showComposite ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Composite\"\n          onClick={() => setComposite({ ...composite, showComposite: !composite.showComposite })}\n        />\n        <IconButton key=\"copyComposite\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteComposite\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Composite\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { Button, Input, Switch, Collapse, Field, FieldSet } from '@grafana/ui';\n\nimport { CompositeItem } from './CompositeItem';\nimport { DisplayModes, CompositeItemType, CompositeMetric, CompositeItemTracker } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport interface CompositeEditorSettings {\n  composites: CompositeItemType[];\n  enabled: boolean;\n  animationSpeed: string;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, CompositeEditorSettings> {}\n\nexport const CompositeEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [settings] = useState(context.options.compositeConfig);\n  const [animationSpeed, _setAnimationSpeed] = useState(context.options.compositeConfig.animationSpeed);\n  const [compositesEnabled, _setCompositesEnabled] = useState(context.options.compositeConfig.enabled);\n  const [tracker, _setTracker] = useState((): CompositeItemTracker[] => {\n    if (!settings.composites) {\n      const empty: CompositeItemTracker[] = [];\n      return empty;\n    }\n    const items: CompositeItemTracker[] = [];\n    settings.composites.forEach((value: CompositeItemType, index: number) => {\n      items[index] = {\n        composite: value,\n        order: index,\n        ID: uuidv4(),\n      };\n    });\n    return items;\n  });\n\n  const setAnimationSpeed = (val: any) => {\n    //context.options.compositeConfig.animationSpeed = val;\n    _setAnimationSpeed(val);\n    settings.animationSpeed = val;\n    onChange(settings);\n  };\n  const setCompositesEnabled = (val: any) => {\n    //context.options.compositeConfig.enabled = val;\n    _setCompositesEnabled(val);\n    settings.enabled = val;\n    onChange(settings);\n  };\n  const setTracker = (v: CompositeItemTracker[]) => {\n    _setTracker(v);\n    // update the panel config (only the composites themselves, not the tracker)\n    const allComposites: CompositeItemType[] = [];\n    v.forEach((element) => {\n      allComposites.push(element.composite);\n    });\n    const compositeConfig = {\n      composites: allComposites,\n      animationSpeed: settings.animationSpeed,\n      enabled: settings.enabled,\n    };\n    onChange(compositeConfig as any);\n  };\n\n  // tracks composite card collapse state\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      const empty: boolean[] = [];\n      return empty;\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].composite;\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `${original.name} Copy`,\n      label: `${original.name} Copy`,\n      order: order,\n      isTemplated: original.isTemplated,\n      displayMode: original.displayMode,\n      enabled: original.enabled,\n      showName: original.showName,\n      showValue: original.showValue,\n      showComposite: original.showComposite,\n      showMembers: original.showMembers,\n      metrics: original.metrics,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: uuidv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  const updateComposite = (index: number, value: CompositeItemType) => {\n    tracker[index].composite = value;\n    setTracker([...tracker]);\n  };\n\n  const removeComposite = (compositeIndex: number) => {\n    // find the composite by the compositeIndex\n    const allComposites = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allComposites.length; i++) {\n      if (allComposites[i].order === compositeIndex) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allComposites.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allComposites.length; i++) {\n      allComposites[i].order = i;\n    }\n    setTracker([...allComposites]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const toggleState = [...isOpen];\n    toggleState[index] = !toggleState[index];\n    setIsOpen([...toggleState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `Composite-${order}`,\n      label: `Composite-${order}`,\n      showName: true,\n      showValue: true,\n      showMembers: false,\n      showComposite: true,\n      isTemplated: false,\n      enabled: true,\n      metrics: [] as CompositeMetric[],\n      displayMode: DisplayModes[0].value,\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      order: order,\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: uuidv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <FieldSet>\n        <Field label=\"Enable Composites\" description=\"Enable/Disable Composites Globally\">\n          <Switch\n            transparent={true}\n            value={compositesEnabled}\n            onChange={() => setCompositesEnabled(!compositesEnabled)}\n          />\n        </Field>\n        <Field label=\"Animation Speed (ms)\" description=\"Animation Speed in milliseconds\" disabled={!settings.enabled}>\n          <Input\n            value={animationSpeed}\n            placeholder=\"500\"\n            onChange={(e: any) => setAnimationSpeed(e.currentTarget.value)}\n          />\n        </Field>\n      </FieldSet>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" disabled={!settings.enabled} onClick={addItem}>\n        Add Composite\n      </Button>\n      {tracker &&\n        tracker.map((item: CompositeItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${item.ID}`}\n              label={item.composite.name}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <CompositeItem\n                key={`composite-item-index-${item.ID}`}\n                ID={item.ID}\n                composite={item.composite}\n                enabled={item.composite.enabled}\n                setter={updateComposite}\n                remover={removeComposite}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { Field } from '@grafana/ui';\n\nimport { PolystatThreshold } from './types';\nimport { ThresholdsEditor } from './ThresholdsEditor';\n\nexport interface GlobalThresholdEditorSettings {}\n\ninterface Props extends StandardEditorProps<string | string[] | null, GlobalThresholdEditorSettings> {}\n\nexport const GlobalThresholdEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [globalThresholds, setGlobalThresholds] = useState(context.options.globalThresholdsConfig);\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setGlobalThresholds(val);\n    onChange(val as any);\n  };\n\n  return (\n    <>\n      <Field>\n        <ThresholdsEditor thresholds={globalThresholds} setter={setThresholds} />\n      </Field>\n    </>\n  );\n};\n","import { PanelModel, convertOldAngularValueMappings, ValueMapping } from '@grafana/data';\nimport { config } from \"@grafana/runtime\";\nimport { satisfies, coerce } from \"semver\";\nimport { CompositeItemType, CompositeMetric } from 'components/composites/types';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatThreshold } from './components/thresholds/types';\n\nimport { DisplayModes, FontFamilies, PolygonShapes, PolystatOptions } from './components/types';\ninterface AngularPolystatOptions {\n  animationSpeed: number;\n  columnAutoSize: boolean;\n  columns: string;\n  defaultClickThrough: string;\n  defaultClickThroughNewTab: boolean;\n  defaultClickThroughSanitize: boolean;\n  displayLimit: number;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  fontAutoColor: boolean;\n  fontAutoScale: boolean;\n  fontSize: number;\n  fontType: string,\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalOperatorName: string;\n  globalThresholds: AngularThreshold[];\n  globalUnitFormat: string;\n  gradientEnabled: boolean;\n  hexagonSortByDirection: number;\n  hexagonSortByField: string;\n  maxMetrics: number;\n  polygonBorderColor: string;\n  polygonBorderSize: number;\n  polygonGlobalFillColor: string;\n  radius: string;\n  radiusAutoSize: boolean;\n  regexPattern: string;\n  rowAutoSize: boolean;\n  rows: string;\n  shape: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipEnabled: boolean;\n  tooltipFontSize: number;\n  tooltipFontType: string,\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortField: string;\n  tooltipTimestampEnabled: boolean;\n  valueEnabled: boolean;\n}\n\nexport interface AngularThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface AngularOverride {\n  clickThrough: string;\n  colors: string[];\n  decimals: number;\n  enabled: true;\n  label: string;\n  metricName: string;\n  newTabEnabled: boolean;\n  operatorName: string;\n  prefix: string;\n  sanitizeURLEnabled: boolean;\n  suffix: string;\n  unitFormat: string;\n  thresholds: AngularThreshold[];\n}\nexport interface AngularSavedOverrides {\n  savedOverrides: AngularOverride[];\n}\n\nexport interface CompositeMembers {\n  seriesName: string;\n}\nexport interface CompositeItem {\n  animateMode: string;\n  clickThrough: string;\n  compositeName: string;\n  displayName: string;\n  enabled: boolean;\n  hideMembers: boolean;\n  label: string;\n  members: CompositeMembers[];\n  newTabEnabled: boolean;\n  sanitizeURLEnabled: boolean;\n  sanitizedURL: string;\n  showName: boolean;\n  showValue: boolean;\n  thresholdLevel: number;\n}\n\nexport interface AngularSavedComposites {\n  savedComposites: CompositeItem[];\n}\n\n/**\n * This is called when the panel is imported or reloaded\n */\nexport const PolystatPanelMigrationHandler = (panel: PanelModel<PolystatOptions>): Partial<PolystatOptions> => {\n  //@ts-ignore\n  if (!panel.polystat) {\n    // not angular, just return the options if currently set\n    if (!panel.options) {\n      // This happens on the first load or when migrating from angular\n      return {} as any;\n    }\n    // have settings, return them unchanged\n    return panel.options;\n  }\n  //@ts-ignore\n  const newDefaults = migrateDefaults(panel.polystat);\n  let options = newDefaults;\n  //@ts-ignore\n  delete panel.polystat;\n  //@ts-ignore\n  const migratedOverrides = migrateOverrides(panel);\n  //@ts-ignore\n  const migratedComposites = migrateComposites(panel, newDefaults.compositeConfig.animationSpeed);\n  //console.log(JSON.stringify(newDefaults, null, 2));\n  options.compositeConfig = migratedComposites.compositeConfig;\n  options.overrideConfig = migratedOverrides.overrideConfig;\n  // convert range and value maps\n  const newMaps = migrateValueAndRangeMaps(panel);\n  panel.fieldConfig = {\n    defaults: {\n      mappings: newMaps,\n    },\n    overrides: [],\n  };\n  //@ts-ignore\n  delete panel.mappingType;\n  //@ts-ignore\n  delete panel.rangeMaps;\n  //@ts-ignore\n  delete panel.valueMaps;\n  // merge defaults\n  //@ts-ignore\n  delete panel.savedComposites;\n  //@ts-ignore\n  delete panel.savedOverrides;\n  //@ts-ignore\n  delete panel.colors;\n\n  // clean up undefined\n  // @ts-ignore\n  Object.keys(panel).forEach((key) => (panel[key] === undefined ? delete panel[key] : {}));\n  // @ts-ignore\n  Object.keys(options).forEach((key) => (options[key] === undefined ? delete options[key] : {}));\n\n  return options;\n};\n\n// split into three parts\n// config normally found in \"polystat\" section\n// then \"savedOverrides\" and \"savedComposites\"\n// a \"good\" react config just has an \"options\" section\nexport const migrateDefaults = (angular: AngularPolystatOptions) => {\n  let options: PolystatOptions = {\n    autoSizeColumns: true,\n    autoSizeRows: true,\n    autoSizePolygons: true,\n    ellipseCharacters: 18,\n    ellipseEnabled: false,\n    globalAutoScaleFonts: true,\n    globalClickthrough: '',\n    globalClickthroughNewTabEnabled: false,\n    globalClickthroughSanitizedEnabled: false,\n    globalDecimals: 2,\n    globalDisplayMode: 'all',\n    globalDisplayTextTriggeredEmpty: '',\n    globalFillColor: '',\n    globalFontSize: 8,\n    globalGradientsEnabled: false,\n    globalOperator: 'mean',\n    globalPolygonBorderSize: 1,\n    globalPolygonBorderColor: '',\n    globalPolygonSize: 50,\n    globalRegexPattern: '',\n    globalShape: PolygonShapes.HEXAGON_POINTED_TOP,\n    globalShowValueEnabled: true,\n    globalShowTooltipColumnHeadersEnabled: true,\n    globalTextFontColor: '#000000',\n    globalTextFontAutoColor: '#000000',\n    globalTextFontAutoColorEnabled: false,\n    globalTextFontFamily: FontFamilies.INTER,\n    globalThresholdsConfig: [],\n    globalTooltipsEnabled: true,\n    globalTooltipsShowTimestampEnabled: true,\n    globalTooltipsFontFamily: FontFamilies.INTER,\n    globalUnitFormat: '',\n    layoutDisplayLimit: 100,\n    layoutNumColumns: 8,\n    layoutNumRows: 8,\n    panelHeight: undefined,\n    panelWidth: undefined,\n    panelId: 0,\n    radius: 100,\n    renderTime: undefined,\n    sortByField: '',\n    sortByDirection: 0,\n    overrideConfig: {\n      overrides: [],\n    },\n    compositeConfig: {\n      animationSpeed: '',\n      composites: [],\n      enabled: false,\n    },\n    tooltipPrimarySortDirection: 0,\n    tooltipPrimarySortByField: '',\n    tooltipSecondarySortDirection: 0,\n    tooltipSecondarySortByField: '',\n    tooltipDisplayMode: 'all',\n    tooltipDisplayTextTriggeredEmpty: '',\n  };\n\n  if (angular.animationSpeed) {\n    if (options.compositeConfig) {\n      options.compositeConfig.animationSpeed = angular.animationSpeed.toString();\n    }\n  }\n  if (angular.columnAutoSize) {\n    options.autoSizeColumns = angular.columnAutoSize;\n  }\n  if (angular.columns) {\n    let numColumns = parseInt(angular.columns, 10);\n    if (isNaN(numColumns) || numColumns < 1) {\n      numColumns = 8;\n    }\n    options.layoutNumColumns = numColumns;\n  }\n  if (angular.defaultClickThrough) {\n    options.globalClickthrough = angular.defaultClickThrough;\n  }\n  if (angular.defaultClickThroughNewTab) {\n    options.globalClickthroughNewTabEnabled = angular.defaultClickThroughNewTab;\n  }\n  if (angular.defaultClickThroughSanitize) {\n    options.globalClickthroughSanitizedEnabled = angular.defaultClickThroughSanitize;\n  }\n  if (angular.displayLimit) {\n    options.layoutDisplayLimit = angular.displayLimit;\n  }\n  if (angular.ellipseCharacters) {\n    options.ellipseCharacters = angular.ellipseCharacters;\n  }\n  if (angular.ellipseEnabled) {\n    options.ellipseEnabled = angular.ellipseEnabled;\n  }\n  if (angular.fontAutoColor) {\n    options.globalTextFontAutoColorEnabled = angular.fontAutoColor;\n  }\n  if (angular.fontAutoScale) {\n    options.globalAutoScaleFonts = angular.fontAutoScale;\n  }\n  if (angular.fontSize) {\n    options.globalFontSize = angular.fontSize;\n  }\n  options.globalTextFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTextFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.globalDecimals) {\n    options.globalDecimals = angular.globalDecimals;\n  }\n  if (angular.globalDisplayMode) {\n    options.globalDisplayMode = angular.globalDisplayMode;\n  }\n  if (angular.globalDisplayTextTriggeredEmpty) {\n    options.globalDisplayTextTriggeredEmpty = angular.globalDisplayTextTriggeredEmpty;\n  }\n  if (angular.globalOperatorName) {\n    options.globalOperator = convertOperators(angular.globalOperatorName);\n  }\n  if (angular.globalThresholds) {\n    options.globalThresholdsConfig = [];\n    for (const threshold of angular.globalThresholds) {\n      const migratedThreshold: PolystatThreshold = {\n        value: threshold.value,\n        state: threshold.state,\n        color: threshold.color,\n      };\n      options.globalThresholdsConfig.push(migratedThreshold);\n    }\n  }\n\n  if (angular.globalUnitFormat) {\n    options.globalUnitFormat = angular.globalUnitFormat;\n  }\n  if (angular.gradientEnabled) {\n    options.globalGradientsEnabled = angular.gradientEnabled;\n  }\n  if (angular.hexagonSortByDirection) {\n    options.sortByDirection = angular.hexagonSortByDirection;\n  }\n  if (angular.hexagonSortByField) {\n    options.sortByField = angular.hexagonSortByField;\n  }\n  if (angular.polygonBorderColor) {\n    options.globalPolygonBorderColor = angular.polygonBorderColor;\n  }\n  if (angular.polygonBorderSize) {\n    options.globalPolygonBorderSize = angular.polygonBorderSize;\n  }\n  if (angular.polygonGlobalFillColor) {\n    options.globalFillColor = angular.polygonGlobalFillColor;\n  }\n  if (angular.radius) {\n    let radius = parseFloat(angular.radius);\n    if (isNaN(radius) || radius < 0) {\n      radius = 0;\n    }\n    options.radius = radius;\n  }\n  if (angular.radiusAutoSize) {\n    options.autoSizePolygons = angular.radiusAutoSize;\n  }\n  if (angular.regexPattern) {\n    options.globalRegexPattern = angular.regexPattern;\n  }\n  if (angular.rowAutoSize) {\n    options.autoSizeRows = angular.rowAutoSize;\n  }\n  if (angular.rows) {\n    let numRows = parseInt(angular.rows, 10);\n    if (isNaN(numRows) || numRows < 1) {\n      numRows = 8;\n    }\n    options.layoutNumRows = numRows;\n  }\n\n  if (angular.shape) {\n    switch (angular.shape) {\n      case 'circle':\n        options.globalShape = PolygonShapes.CIRCLE;\n        break;\n      case 'square':\n        options.globalShape = PolygonShapes.SQUARE;\n        break;\n      case 'hexagon_pointed_top':\n      default:\n        options.globalShape = PolygonShapes.HEXAGON_POINTED_TOP;\n    }\n  }\n  if (angular.tooltipDisplayMode) {\n    options.tooltipDisplayMode = angular.tooltipDisplayMode;\n  }\n  if (angular.tooltipDisplayTextTriggeredEmpty) {\n    options.tooltipDisplayTextTriggeredEmpty = angular.tooltipDisplayTextTriggeredEmpty;\n  }\n  if (angular.tooltipEnabled) {\n    options.globalTooltipsEnabled = angular.tooltipEnabled;\n  }\n  if (angular.tooltipPrimarySortDirection) {\n    options.tooltipPrimarySortDirection = angular.tooltipPrimarySortDirection;\n  }\n  if (angular.tooltipPrimarySortField) {\n    options.tooltipPrimarySortByField = angular.tooltipPrimarySortField;\n  }\n  if (angular.tooltipSecondarySortDirection) {\n    options.tooltipSecondarySortDirection = angular.tooltipSecondarySortDirection;\n  }\n  if (angular.tooltipSecondarySortField) {\n    options.tooltipSecondarySortByField = angular.tooltipSecondarySortField;\n  }\n  if (angular.tooltipTimestampEnabled) {\n    options.globalTooltipsShowTimestampEnabled = angular.tooltipTimestampEnabled;\n  }\n  options.globalTooltipsFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTooltipsFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.valueEnabled) {\n    options.globalShowValueEnabled = angular.valueEnabled;\n  }\n\n  return options;\n};\n\nexport const migrateOverrides = (angular: AngularSavedOverrides) => {\n  let options = {} as any;\n\n  options.overrideConfig = {\n    overrides: [],\n  };\n  // Overrides\n  if (angular.savedOverrides?.length) {\n    let order = 0;\n    for (const seriesOverride of angular.savedOverrides) {\n      let anOverride: OverrideItemType = {\n        label: '',\n        metricName: '',\n        alias: '',\n        thresholds: [],\n        colors: [],\n        unitFormat: '',\n        decimals: '',\n        scaledDecimals: 0,\n        enabled: true,\n        operatorName: 'avg',\n        prefix: '',\n        suffix: '',\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        order: order,\n      };\n      for (const p of Object.keys(seriesOverride)) {\n        // @ts-ignore\n        const v = seriesOverride[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'clickThrough':\n            anOverride.clickThrough = v;\n            break;\n          case 'colors':\n            anOverride.colors = v;\n            break;\n          case 'decimals':\n            anOverride.decimals = v;\n            break;\n          case 'enabled':\n            anOverride.enabled = v;\n            break;\n          case 'label':\n            anOverride.label = v;\n            break;\n          case 'metricName':\n            anOverride.metricName = v;\n            break;\n          case 'newTabEnabled':\n            anOverride.clickThroughOpenNewTab = v;\n            break;\n          case 'operatorName':\n            anOverride.operatorName = convertOperators(v);\n            break;\n          case 'prefix':\n            anOverride.prefix = v;\n            break;\n          case 'sanitizeURLEnabled':\n            anOverride.clickThroughSanitize = v;\n            break;\n          case 'suffix':\n            anOverride.suffix = v;\n            break;\n          case 'thresholds':\n            /*\n              \"color\": \"#e5ac0e\",\n              \"state\": 1,\n              \"value\": 78\n              */\n            anOverride.thresholds = [];\n            for (const threshold of v) {\n              const migratedThreshold: PolystatThreshold = {\n                value: threshold.value,\n                state: threshold.state,\n                color: threshold.color,\n              };\n              anOverride.thresholds.push(migratedThreshold);\n            }\n            break;\n          case 'unitFormat':\n            anOverride.unitFormat = v;\n            break;\n          default:\n            console.log('Ignore override migration:', p, v);\n        }\n      }\n      options.overrideConfig.overrides.push(anOverride);\n      order++;\n    }\n  }\n  return options;\n};\n\nexport const convertOperators = (operator: string) => {\n  switch (operator) {\n    case 'avg':\n      return 'mean';\n    case 'current':\n      return 'last'; // lastNotNull?\n    case 'time_step':\n      return 'step';\n    case 'total':\n      return 'sum';\n    default:\n      return operator;\n  }\n};\n\nexport const migrateValueAndRangeMaps = (panel: any) => {\n  // value maps first\n  panel.mappingType = 1;\n  let newValueMappings: ValueMapping[] = [];\n  if (panel.valueMaps !== undefined) {\n    newValueMappings = convertOldAngularValueMappings(panel);\n  }\n  // range maps second\n  panel.mappingType = 2;\n  let newRangeMappings: ValueMapping[] = [];\n  if (panel.rangeMaps !== undefined) {\n    newRangeMappings = convertOldAngularValueMappings(panel);\n  }\n  // append together\n  const newMappings = newValueMappings.concat(newRangeMappings);\n  // get uniques only\n  const uniques = [...new Map(newMappings.map((v) => [JSON.stringify(v), v])).values()];\n  return uniques;\n};\n\nexport const migrateComposites = (angular: AngularSavedComposites, animationSpeed: string) => {\n  let options = {} as any;\n  // Composites\n  options.compositeConfig = {\n    composites: [],\n    enabled: true,\n    animationSpeed: animationSpeed,\n  };\n\n  if (angular.savedComposites?.length) {\n    let index = 0;\n    for (const composite of angular.savedComposites) {\n      let aComposite: CompositeItemType = {\n        name: `COMPOSITE-${index}`,\n        label: `COMPOSITE-${index}`,\n        order: index,\n        isTemplated: false,\n        displayMode: DisplayModes[0].value,\n        enabled: true,\n        showName: true,\n        showValue: true,\n        showComposite: true,\n        showMembers: false,\n        metrics: [],\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n      };\n      index++;\n      for (const p of Object.keys(composite)) {\n        // @ts-ignore\n        const v = composite[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'animateMode':\n            if (v !== 'all') {\n              aComposite.displayMode = DisplayModes[1].value;\n            }\n            break;\n          case 'clickThrough':\n            aComposite.clickThrough = v;\n            break;\n          case 'compositeName':\n            aComposite.name = v;\n            break;\n          // Ignore\n          case 'displayName':\n            break;\n          case 'enabled':\n            // this is now .showComposite\n            aComposite.showComposite = v;\n            break;\n          case 'hideMembers':\n            aComposite.showMembers = !v;\n            break;\n          case 'label':\n            aComposite.label = v;\n            break;\n          case 'members':\n            /*\n              {\n                \"$$hashKey\": \"object:150\",\n                \"seriesName\": \"/P2/\"\n              }\n              */\n            let memberIndex = 0;\n            let members: CompositeMetric[] = [];\n            // not sure about this...\n            for (const aMember of Object.keys(v)) {\n              const x = v[aMember];\n              let member: CompositeMetric = {\n                seriesMatch: x.seriesName,\n                order: memberIndex,\n              };\n              members.push(member);\n              memberIndex++;\n            }\n            aComposite.metrics = members;\n            break;\n          case 'newTabEnabled':\n            aComposite.clickThroughOpenNewTab = v;\n            break;\n          case 'sanitizeURLEnabled':\n            aComposite.clickThroughSanitize = v;\n            break;\n          // Ignore\n          case 'sanitizedURL':\n            break;\n          case 'showName':\n            aComposite.showName = v;\n            break;\n          case 'showValue':\n            aComposite.showValue = v;\n            break;\n          default:\n            console.log('Ignore composite migration:', p, v);\n        }\n      }\n      options.compositeConfig.composites.push(aComposite);\n    }\n  }\n  return options;\n};\n\n/**\n * This is called when the panel changes from another panel\n *\n * not currently used\n */\nexport const PolystatPanelChangedHandler = (\n  panel: PanelModel<Partial<PolystatOptions>> | any,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // Changing from angular polystat panel\n  if (prevPluginId === 'polystat' && prevOptions.angular) {\n    console.log('detected old panel');\n    const oldOpts = prevOptions.angular;\n    console.log(JSON.stringify(oldOpts));\n  }\n\n  return {};\n};\n\n// Roboto font was removed Dec 1, 2022, and releases after that date should not attempt to use it\nexport const hasRobotoFont = () => {\n  const version = coerce(config.buildInfo.version);\n  if (version !== null) {\n    if (satisfies(version, \"<9.4.0\")) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { FieldConfigProperty, PanelPlugin } from '@grafana/data';\nimport {\n  DisplayModes,\n  FontFamilyOptions,\n  FontFamilyOptionsLegacy,\n  OperatorOptions,\n  PolygonNamedShapes,\n  PolystatOptions,\n  SortByFieldOptions,\n  SortOptions,\n} from './components/types';\nimport { CompositeItemType } from './components/composites/types';\nimport { OverrideEditor } from './components/overrides/OverrideEditor';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatPanel } from './components/PolystatPanel';\nimport {\n  GLOBAL_FILL_COLOR_RGBA,\n  GLOBAL_BORDER_COLOR_RGBA,\n  GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n  GLOBAL_TEXT_FONT_FAMILY,\n  GLOBAL_TOOLTIP_FONT_FAMILY,\n  GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n  GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n} from './components/defaults';\nimport { CompositeEditor } from './components/composites/CompositeEditor';\nimport { PolystatThreshold } from './components/thresholds/types';\nimport { GlobalThresholdEditor } from './components/thresholds/GlobalThresholdEditor';\nimport { PolystatDataSuggestionsSupplier } from './components/suggestions';\nimport { hasRobotoFont, PolystatPanelMigrationHandler } from './migrations';\n\nexport const plugin = new PanelPlugin<PolystatOptions>(PolystatPanel)\n  .setMigrationHandler(PolystatPanelMigrationHandler)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.DisplayName,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Links,\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Unit,\n    ],\n    standardOptions: {\n      [FieldConfigProperty.Mappings]: {},\n    },\n  })\n  .setPanelOptions((builder) => {\n    builder\n      .addBooleanSwitch({\n        name: 'Auto Size Columns',\n        path: 'autoSizeColumns',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set columns based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumColumns',\n        name: 'Columns',\n        description: 'Use specific number of columns',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => c.autoSizeColumns !== true,\n      })\n      .addBooleanSwitch({\n        name: 'Auto Size Rows',\n        path: 'autoSizeRows',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set rows based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumRows',\n        name: 'Rows',\n        description: 'Use specific number of rows',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => c.autoSizeRows !== true,\n      })\n      .addNumberInput({\n        path: 'layoutDisplayLimit',\n        name: 'Display Limit',\n        description: 'Maximum number of polygons to display (0 for unlimited)',\n        defaultValue: 100,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Layout'],\n      })\n\n      .addBooleanSwitch({\n        name: 'Auto Size Polygons',\n        path: 'autoSizePolygons',\n        defaultValue: true,\n        category: ['Sizing'],\n        description: 'Automatically sets size of polygon for best fit',\n      })\n      .addNumberInput({\n        name: 'Polygon Size in pixels',\n        path: 'globalPolygonSize',\n        description: 'Use specific size for polygons',\n        defaultValue: 25,\n        settings: {\n          placeHolder: 'Auto',\n          min: 1,\n        },\n        category: ['Sizing'],\n        showIf: (c) => c.autoSizePolygons !== true,\n      })\n      .addNumberInput({\n        name: 'Border Size',\n        path: 'globalPolygonBorderSize',\n        description: 'Border size for each polygon',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n        },\n        category: ['Sizing'],\n      })\n      // font selection\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => hasRobotoFont() === false,\n      })\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont() === true,\n      })\n      .addBooleanSwitch({\n        name: 'Auto Scale Fonts',\n        path: 'globalAutoScaleFonts',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Automatically sets label and value font size based on size of polygon',\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Text'],\n        description: 'Default font size to use when Auto is disabled',\n        showIf: (c) => c.globalAutoScaleFonts !== true,\n      })\n      // font color\n      // auto set font color\n      .addBooleanSwitch({\n        name: 'Automate Font Color',\n        path: 'globalTextFontAutoColorEnabled',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Sets font color to match theme',\n      })\n      .addColorPicker({\n        name: 'Font Color',\n        path: 'globalTextFontColor',\n        category: ['Text'],\n        defaultValue: '#000000',\n        description: 'Font color to use for all text on polygon',\n        showIf: (c) => c.globalTextFontAutoColorEnabled !== true,\n      })\n\n      // ellipse enabled\n      .addBooleanSwitch({\n        name: 'Use Ellipses',\n        path: 'ellipseEnabled',\n        defaultValue: false,\n        category: ['Text'],\n        description: 'Use Ellipses when character count is exceeded',\n        showIf: (c) => c.globalAutoScaleFonts !== true,\n      })\n      // ellipse num chars\n      .addNumberInput({\n        name: 'Ellipse Characters',\n        path: 'ellipseCharacters',\n        defaultValue: 18,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Text'],\n        description: 'Default number of characters to display before showing ellipses',\n        showIf: (c) => c.ellipseEnabled === true && c.globalAutoScaleFonts !== true,\n      })\n\n      // Sorting\n      .addSelect({\n        path: 'sortByDirection',\n        name: 'Sort By Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Sorting'],\n        defaultValue: 1,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'sortByField',\n        name: 'Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'name',\n        category: ['Sorting'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // tooltips\n      .addBooleanSwitch({\n        name: 'Enable Tooltips',\n        path: 'globalTooltipsEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Provides tooltips for each polygon',\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => hasRobotoFont() === false,\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont() === true,\n      })\n      .addBooleanSwitch({\n        name: 'Show timestamp',\n        path: 'globalTooltipsShowTimestampEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show timestamp at bottom of tooltip',\n      })\n      // show tooltip column headers\n      .addBooleanSwitch({\n        name: 'Show Column Headers',\n        path: 'globalShowTooltipColumnHeadersEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show Column headers on tooltip'\n      })\n      // display modes\n      .addSelect({\n        path: 'tooltipDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Tooltips'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'tooltipDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed by tooltip when there are no triggered thresholds and tooltip display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Tooltips'],\n      })\n      // primary sort direction\n      .addSelect({\n        path: 'tooltipPrimarySortDirection',\n        name: 'Primary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipPrimarySortByField',\n        name: 'Primary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'thresholdLevel',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // secondary sort direction\n      .addSelect({\n        path: 'tooltipSecondarySortDirection',\n        name: 'Secondary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipSecondarySortByField',\n        name: 'Secondary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'value',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // globals generic\n      //\n      // display mode\n      .addSelect({\n        path: 'globalDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Global'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'globalDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed in polygon when there are no triggered thresholds and global display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Global'],\n      })\n\n      // show value\n      .addBooleanSwitch({\n        name: 'Show Value',\n        path: 'globalShowValueEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Show value on the polygon',\n      })\n\n      // shape\n      .addSelect({\n        name: 'Shape',\n        path: 'globalShape',\n        description: 'Shape of polygon',\n        category: ['Global'],\n        defaultValue: PolygonNamedShapes[0].value,\n        settings: {\n          options: PolygonNamedShapes,\n        },\n      })\n\n      // gradient colors enabled\n      .addBooleanSwitch({\n        name: 'Use Color Gradients',\n        path: 'globalGradientsEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Applies gradient color effect to all polygons',\n      })\n      .addColorPicker({\n        name: 'Global Fill Color',\n        path: 'globalFillColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_FILL_COLOR_RGBA,\n        description: 'Color to use when no overrides or thresholds apply to polygon',\n      })\n\n      // border color\n      .addColorPicker({\n        name: 'Global Border Color',\n        path: 'globalPolygonBorderColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_BORDER_COLOR_RGBA,\n        description: 'Color of polygon border',\n      })\n      // unit\n      .addUnitPicker({\n        name: 'Unit',\n        path: 'globalUnitFormat',\n        defaultValue: 'short',\n        category: ['Global'],\n        description: 'Use this unit format when it is not specified in overrides or detected in data',\n      })\n      // stat (global operator)\n      .addSelect({\n        name: 'Stat',\n        path: 'globalOperator',\n        description: 'Statistic to display',\n        category: ['Global'],\n        defaultValue: OperatorOptions[0].value,\n        settings: {\n          options: OperatorOptions,\n        },\n      })\n      // decimals\n      .addNumberInput({\n        name: 'Decimals',\n        path: 'globalDecimals',\n        description: 'Display specified number of decimals',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Global'],\n      })\n      .addCustomEditor({\n        name: 'Global Thresholds',\n        id: 'globalThresholdsConfig',\n        path: 'globalThresholdsConfig',\n        description: 'Default thresholds to be applied to all metrics that do not have an override',\n        editor: GlobalThresholdEditor,\n        defaultValue: [] as PolystatThreshold[],\n        category: ['Global'],\n      })\n      // default clickthrough\n      .addTextInput({\n        name: 'Default Clickthrough',\n        path: 'globalClickthrough',\n        description: 'URL to use when none are defined by overrides or composites',\n        category: ['Global'],\n        defaultValue: '',\n      })\n      // sanitize clickthrough\n      .addBooleanSwitch({\n        name: 'Sanitize',\n        path: 'globalClickthroughSanitizedEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Sanitizes clickthrough url',\n      })\n      // open in new tab\n      .addBooleanSwitch({\n        name: 'Open In New Tab',\n        path: 'globalClickthroughNewTabEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Opens clickthrough in a new tab',\n      })\n\n      // aliasing\n      .addTextInput({\n        name: 'Global Regex',\n        path: 'globalRegexPattern',\n        description:\n          'The values in the specified column are filtered and displayed according to this regular expression. Ex: String: Url|broadcom.com|mirror|location-1 regex: /Url&#92;|(.*?)&#92;|/ Output: broadcom.com',\n        category: ['Global Aliasing'],\n        defaultValue: '',\n      })\n      .addCustomEditor({\n        name: 'Overrides',\n        id: 'overrideConfig',\n        path: 'overrideConfig',\n        description: 'Overrides for multiple metrics',\n        editor: OverrideEditor,\n        defaultValue: {\n          overrides: [] as OverrideItemType[],\n        },\n        category: ['Overrides'],\n      })\n      .addCustomEditor({\n        name: 'Composites',\n        id: 'compositeConfig',\n        path: 'compositeConfig',\n        description: 'Composites allow you to roll up multiple metrics into a single polygon',\n        editor: CompositeEditor,\n        defaultValue: {\n          composites: [] as CompositeItemType[],\n          enabled: true,\n          animationSpeed: '1500',\n        },\n        category: ['Composites'],\n      });\n  })\n  .setSuggestionsSupplier(new PolystatDataSuggestionsSupplier());\n","import { VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { PolystatOptions } from './types';\n\nexport class PolystatDataSuggestionsSupplier {\n  getSuggestionsForData(builder: VisualizationSuggestionsBuilder) {\n    const { dataSummary: ds } = builder;\n\n    if (!ds.hasData) {\n      return;\n    }\n    if (!ds.hasNumberField) {\n      return;\n    }\n\n    const list = builder.getListAppender<PolystatOptions, {}>({\n      name: 'Polystat',\n      pluginId: 'grafana-polystat-panel',\n      options: {},\n    });\n\n    list.append({\n      name: 'Polystat',\n    });\n  }\n}\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","debug","SemVer","process","env","NODE_DEBUG","test","args","slice","unshift","console","log","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_BUILD_LENGTH","re","safeRe","src","t","tokens","R","tok","n","LETTERDASHNUMBER","safeRegexReplacements","makeSafeRe","value","token","max","split","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","RegExp","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","parse","version","options","loose","includePrerelease","er","TypeError","this","m","trim","match","raw","major","minor","patch","prerelease","map","id","num","build","format","valid","v","clean","s","replace","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","compareBuild","inc","release","identifier","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","numeric","anum","bnum","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","semver","ANY","operator","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","sort","list","rsort","Range","range","set","parseRange","filter","c","isSatisfiable","comparators","result","remainingComparators","testComparator","pop","every","otherComparator","intersects","isX","toLowerCase","hyphenReplace","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","forEach","comparator","r","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","_","M","p","pr","ret","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","some","thisComparators","rangeComparators","thisComparator","rangeComparator","toComparators","maxSatisfying","versions","maxSV","rangeObj","minSatisfying","min","minSV","minVersion","minver","compver","validRange","ltr","gtr","parsed","r1","r2","coerce","String","rtl","next","exec","index","lastIndex","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__545__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__200__","__WEBPACK_EXTERNAL_MODULE__980__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","Symbol","toStringTag","PolygonShapes","HEXAGON_POINTED_TOP","CIRCLE","SQUARE","PolygonNamedShapes","label","OperatorOptions","SortOptions","SortByFieldOptions","DisplayModes","FontFamilies","ARIAL","HELVETICA","HELVETICA_NEUE","INTER","ROBOTO","ROBOTO_MONO","FontFamilyOptions","FontFamilyOptionsLegacy","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","byteToHex","substr","arr","offset","uuid","buf","rnds","random","ThresholdStates","ThresholdItem","styles","useStyles2","getThresholdStyles","threshold","setThreshold","useState","thresholdId","keys","aKey","getThreshold","state","Input","disabled","type","step","ID","onChange","e","valueSetter","currentTarget","div","className","inputPrefix","colorPicker","ColorPicker","color","colorSetter","enableNamedColors","suffix","Select","menuShouldPortal","stateSetter","IconButton","variant","name","tooltip","onClick","remover","theme","css","spacing","Color","asHex","g","asRGB","blendWith","col","Math","round","Mul","RGBToHex","rgb","sep","indexOf","RGBAToHex","orig","alpha","hex","parseInt","parseFloat","fromHex","substring","bigint","constructor","GLOBAL_FILL_COLOR_RGBA","DEFAULT_OK_COLOR_HEX","DEFAULT_OK_COLOR","DEFAULT_WARNING_COLOR_HEX","DEFAULT_WARNING_COLOR","DEFAULT_CRITICAL_COLOR_HEX","DEFAULT_CRITICAL_COLOR","GLOBAL_TEXT_FONT_FAMILY","GLOBAL_TOOLTIP_FONT_FAMILY","GLOBAL_TEXT_FONT_FAMILY_LEGACY","GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY","ThresholdsEditor","tracker","_setTracker","thresholds","items","order","uuidv4","theme2","useTheme2","oldTheme","useTheme","setTracker","allThresholds","element","setter","updateThresholdValue","orderedThresholds","orderBy","updateThresholdColor","useColor","visualization","getColorByName","getColorForTheme","updateThresholdState","colorForThresholdState","removeThreshold","removeIndex","splice","Button","fill","icon","aTracker","getMetricHints","frames","metricHints","Set","hintValue","aField","fields","FieldType","number","labels","appendLabels","aLabel","config","displayNameFromDS","add","OverrideItem","props","setMetricHints","override","_setOverride","setOverride","visibleIcon","hiddenIcon","operatorName","setOperatorName","getOperator","useEffect","context","data","hints","metricName","Card","heading","Meta","FieldSet","Field","description","enabled","placeholder","Cascader","initialValue","allowCustomValue","onSelect","val","hidden","alias","decimals","UnitPicker","unitFormat","span","clickThrough","Switch","transparent","clickThroughSanitize","clickThroughOpenNewTab","Actions","moveUp","moveDown","createDuplicate","OverrideEditor","item","settings","overrideConfig","overrides","allOverrides","isOpen","setIsOpen","size","openStates","updateOverride","original","scaledDecimals","colors","arrayMove","oldIndex","newIndex","k","removeOverride","Collapse","onToggle","currentState","toggleOpener","collapsible","thirdPi","PI","angles","pointX","pointY","reference","l","floating","x","width","f","y","height","u","top","right","bottom","left","async","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","h","w","getClippingRect","isElement","contextElement","getDocumentElement","getOffsetParent","A","getScale","convertOffsetParentRelativeRectToViewportRelativeRect","rect","offsetParent","fn","placement","getDimensions","P","E","T","D","L","O","B","C","H","S","F","V","W","centerOffset","reduce","concat","main","cross","start","end","middlewareData","initialPlacement","mainAxis","crossAxis","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isRTL","flip","overflows","reset","alignmentAxis","limiter","ownerDocument","defaultView","window","getComputedStyle","Node","nodeName","HTMLElement","ShadowRoot","overflow","overflowX","overflowY","display","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","floor","offsetWidth","offsetHeight","$","Element","getBoundingClientRect","isFinite","visualViewport","offsetLeft","offsetTop","frameElement","clientLeft","paddingLeft","clientTop","paddingTop","scrollLeft","scrollTop","pageXOffset","pageYOffset","document","documentElement","assignedSlot","parentNode","host","body","clientWidth","clientHeight","scrollWidth","scrollHeight","direction","position","z","_c","getElementRects","getClientRects","Map","middleware","Boolean","core","base","ref","REACT_TOOLTIP_DISABLE_CORE_STYLES","REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","getElementById","warn","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","setTimeout","clearTimeout","anchorRefs","activeAnchor","current","attach","detach","setActiveAnchor","getTooltipData","SVGElement","getPropertyValue","N","parentElement","scrollingElement","elementReference","tooltipReference","tooltipArrowReference","place","middlewares","border","tooltipStyles","tooltipArrowStyles","then","arrow","borderBottom","borderRight","borderLeft","borderTop","dark","light","success","warning","error","info","classNameArrow","anchorId","anchorSelect","events","openOnClick","positionStrategy","wrapper","delayShow","delayHide","float","noArrow","clickable","closeOnEsc","closeOnScroll","closeOnResize","style","q","afterShow","afterHide","content","contentWrapperRef","K","U","X","Y","opacity","Z","G","J","Q","ee","te","oe","ne","le","ce","ie","se","ae","de","ue","pe","ve","me","ye","fe","he","we","be","Se","Ee","ge","target","isConnected","_e","Ae","Te","clientX","clientY","Le","Oe","querySelector","contains","Re","Ne","addEventListener","event","listener","removeEventListener","MutationObserver","attributeName","getAttribute","removedNodes","addedNodes","nodeType","matches","flatMap","querySelectorAll","observe","childList","subtree","attributes","attributeFilter","disconnect","xe","ResizeObserver","ke","role","dangerouslySetInnerHTML","__html","html","render","children","disableStyleInjection","I","j","getAttributeNames","startsWith","values","entries","dispatchEvent","CustomEvent","detail","disableCore","disableBase","Gradients","pureLight","colorGradients","gradients","aColorStart","aColorEnd","createGradients","okColorStart","okColorEnd","warningColorStart","warningColorEnd","criticalColorStart","criticalColorEnd","gradientId","defs","aGradient","linearGradient","x1","y1","x2","y2","stop","stopColor","LayoutManager","setRadius","radius","setHeight","setWidth","generateHexagonPointedTopLayout","getHexFlatTopRadius","generateUniformLayout","getUniformRadius","hexRadius","d3","numColumns","SQRT3","numRows","truncateFloat","getHexFlatTopDiameters","diameterX","diameterY","getUniformDiameters","horizontalMax","maxColumnsUsed","verticalMax","maxRowsUsed","uniformRadius","generatePossibleColumnAndRowsSizes","columnAutoSize","rowAutoSize","dataSize","squared","sqrt","ceil","generateActualColumnAndRowUsage","displayLimit","polygonsUsed","columnsUsed","shapeToCoordinates","shape","column","row","generatePoints","points","Infinity","generateUniformPoints","xPos","yPos","getRadius","generateRadius","autoSize","getOffsets","getOffsetsHexagonPointedTop","getOffsetsSquare","getOffsetsUniform","shapeWidth","shapeHeight","offsetToViewY","oddCount","evenCount","getOddEvenCountForRange","actualHeightUsed","yoffset","offsetToViewX","widthOffset","actualWidthUsed","xoffset","getDiameters","GetDecimalsForValue","panelDecimals","lodashIsNumber","delta","dec","LN10","magn","pow","norm","getTextWidth","text","font","getContext","measureText","getErrorMessageStyles","typography","h1","fontSize","shade","getNoTriggerTextStyles","getWrapperStyles","getSVGStyles","getSVGPathStyles","Tooltip","renderTime","showTime","valueEnabled","tooltipColumnHeadersEnabled","primarySortByField","primarySortDirection","secondarySortByField","secondarySortDirection","displayMode","tooltipDisplayTextTriggeredEmpty","tooltipFontFamily","getTooltipStyles","table","fontFamily","tooltipTable","thead","isComposite","members","tr","th","tooltipCompositeHeading","colSpan","displayName","getCompositeHeader","tooltipNameHeading","tooltipValueHeading","tfoot","td","tooltipTime","dateTimeFormatWithAbbrevation","tbody","dataToSort","triggerCount","triggered","thresholdLevel","getTriggeredCount","filterTriggered","sortedMembers","sortSettings","getSortDirection","pUseLowercase","lowerCase","pDirection","sDirection","sUseLowercase","pSortFunction","sSortFunction","lodashOrderBy","multiSort","tooltipName","tooltipValue","valueFormatted","getCompositeMetrics","root","borderRadius","background","primary","shadows","z2","Polystat","divStyles","svgStyles","svgPathStyles","noTriggerTextStyles","errorMessageStyles","tooltipTheme","isDark","animationRefs","setAnimationRefs","React","animationMetricIndexes","setAnimationMetricIndexes","animatedItems","setAnimatedItems","processedData","newAnimationRefs","newAnimationMetricIndexes","createRef","animateComposite","useCallback","metricIndex","formatCompositeValue","globalDisplayTextTriggeredEmpty","innerHTML","shouldAnimate","animate","tick","showValue","speed","compositeConfig","animationSpeed","setInterval","clearInterval","autoSizeColumns","autoSizeRows","limit","layoutNumColumns","layoutNumRows","lm","panelWidth","panelHeight","layoutDisplayLimit","autoSizePolygons","globalShape","globalPolygonSize","calculatedPoints","aHexbin","dx","dy","x0","y0","hexbin","binsById","bins","px","point","py","pj","pi","py1","abs","px1","pi2","pj2","px2","py2","bin","hexagon","angle","sin","cos","centers","mesh","fragment","extent","textAreaWidth","textAreaHeight","innerArea","symbol","d3symbol","customShape","symbolCircle","symbolSquare","getCoords","activeLabelFontSize","globalFontSize","activeValueFontSize","showEllipses","numOfChars","ellipseCharacters","globalAutoScaleFonts","autoFontScaler","globalTextFontFamily","globalShowValueEnabled","alignments","getAlignments","panelId","drawShape","fillColor","globalGradientsEnabled","useRadius","coords","path","data-tooltip-id","data-tooltip-content","data-tooltip-position-strategy","stroke","globalPolygonBorderColor","strokeWidth","globalPolygonBorderSize","circle","cx","cy","svg","xmlns","xmlnsXlink","viewBox","ctt","clickThroughTarget","newTabEnabled","resolveClickThroughTarget","useUrl","sanitizeURLEnabled","sanitizedURL","href","labelTextAlignmentX","labelWithValueTextAlignment","textAnchor","globalTextFontAutoColorEnabled","globalTextFontAutoColor","globalTextFontColor","pointerEvents","showName","autoSizeFonts","ellipseEnabled","getTextToDisplay","labelValueAlignmentX","valueWithLabelTextAlignment","globalTooltipsEnabled","Portal","ReactTooltip","boxShadow","contentIndex","globalTooltipsShowTimestampEnabled","globalShowTooltipColumnHeadersEnabled","tooltipPrimarySortByField","tooltipPrimarySortDirection","tooltipSecondarySortByField","tooltipSecondarySortDirection","tooltipDisplayMode","globalTooltipsFontFamily","len","triggeredIndex","triggerCache","aMember","cachedMemberState","buildTriggerCache","assign","textUtil","sanitize","valueOnlyTextAlignment","labelOnlyTextAlignment","maxFont","maxLabel","maxValue","subMetricCount","counter","checkContent","computeTextFontSize","minFont","linesToDisplay","minFontPx","maxFontPx","getTextSizeForWidthAndHeight","frameHasTimestamp","frame","time","flattenLabels","rowNum","labelIndexes","numFields","string","labelWithValues","indexes","labelAndValue","indexValue","getValueOfField","getLabelValues","field","toArray","getWorstSeries","series1","series2","worstSeries","series1ThresholdLevel","series2ThresholdLevel","getThresholdLevelForValue","defaultColor","currentColor","thresholdCount","aThreshold","upperThreshold","lowerThreshold","ClickThroughTransformer","transformSingleMetric","url","cellName","cellValue","encodeURIComponent","cellRawValue","transformNthMetric","nthCellName","matched","nthName","nthCellValue","nthValue","nthCellRawValue","transformComposite","compositeName","transformByRegex","pattern","regex","stringToJsRegex","aMatch","matchType1","matchType2","groups","CUSTOM_SPLIT_DELIMITER","customFormatter","resolveMemberTemplates","replaceVariables","variableRegex","member","seriesMatch","matchResult","resolvedSeriesNames","aName","newName","escapedName","escapeStringForRegex","newNameEscaped","seriesName","seriesNameEscaped","resolveMemberAliasTemplates","templateVars","getTemplateSrv","GetValueByOperator","calcs","timestamp","Date","now","MappingType","ValueToText","RangeToText","isNullValueMap","mapping","ThresholdsMode","SpecialValueMatch","Absolute","Percentage","FieldColorModeId","Thresholds","PaletteClassic","PaletteSaturated","ContinuousGrYlRd","Fixed","RegexToText","SpecialValue","True","False","Null","NaN","NullAndNaN","Empty","LegacyMappingType","GetMappedValue","valueMappings","mappedValue","allFormattedValueMappings","allValueMappings","valueMapping","valueToTextMapping","valueAsNumber","valueToTextMappingAsNumber","addValueToTextMappingText","rangeToTextMapping","fromAsNumber","toAsNumber","addRangeToTextMappingText","t1","t2","getAllFormattedValueMappings","getMappedValue","vm","res","getValueMappingResult","roundValue","formatted","toFixed","resolveOverrideTemplates","template","MatchOverride","resolvedOverrides","anOverride","ProcessDataFrames","compositesEnabled","composites","fieldConfig","globalClickthrough","globalClickthroughTabEnabled","globalClickthroughSanitizedEnabled","globalOperator","globalDecimals","globalDisplayMode","globalRegexPattern","globalFillColor","globalThresholds","globalUnitFormat","sortByDirection","sortByField","timeToInsert","newData","newFrame","meta","hasTimestamp","copiedField","aFieldValues","rowsOfField","ArrayVector","fc","timeField","InsertTime","series","internalData","models","valueFields","valueField","standardCalcs","reduceField","reducers","valueFieldName","getFieldDisplayName","operatorValue","maxDecimals","getValueFormat","unit","formattedValueToString","model","valueRounded","stats","DataFrameToPolystat","aModel","ApplyGlobalRegexPattern","ApplyGlobalFormatting","realGlobalFillColor","aSeries","dataValue","defaults","mappings","realColor","formatFunc","ApplyOverrides","filteredMetrics","keepMetrics","clonedComposites","resolvedComposites","metricComposites","resolved","isTemplated","resolveCompositeTemplates","matchedMetrics","aComposite","showComposite","currentWorstSeries","templatedMembers","metrics","aMetric","seriesItem","showMembers","sanitizeUrl","clone","itemIndex","keptMetric","location","lodashIncludes","ApplyComposites","ApplyGlobalClickThrough","FilterByGlobalDisplayMode","sortField","sortOrder","reverseSort","lodashSortBy","itemContent","lodashToLower","reverse","SortVariableValuesByField","regexPattern","regexVal","temp","extractedTxt","globalClickthroughNewTabEnabled","processDefaultClickThrough","compositeMetrics","dataLen","getComponentStyles","container","CompositeMetricItem","copySelectedMetricToClipboard","metric","aValue","navigator","clipboard","writeText","execCommand","HorizontalGroup","removeMetric","minWidth","updateMetric","updateMetricAlias","CompositeItem","composite","_setComposite","setDisplayMode","getDisplayMode","setComposite","allMetrics","newMetric","currentMetrics","CompositeEditor","_setAnimationSpeed","_setCompositesEnabled","allComposites","updateComposite","removeComposite","compositeIndex","setCompositesEnabled","setAnimationSpeed","toggleState","GlobalThresholdEditor","setGlobalThresholds","globalThresholdsConfig","convertOperators","hasRobotoFont","buildInfo","plugin","PanelPlugin","currentTheme","autoFontColor","setMigrationHandler","panel","polystat","newDefaults","angular","columns","defaultClickThrough","defaultClickThroughNewTab","defaultClickThroughSanitize","fontAutoColor","fontAutoScale","globalOperatorName","migratedThreshold","gradientEnabled","hexagonSortByDirection","hexagonSortByField","polygonBorderColor","polygonBorderSize","polygonGlobalFillColor","radiusAutoSize","rows","tooltipEnabled","tooltipPrimarySortField","tooltipSecondarySortField","tooltipTimestampEnabled","migrateDefaults","migratedOverrides","savedOverrides","seriesOverride","migrateOverrides","migratedComposites","savedComposites","memberIndex","migrateComposites","newMaps","mappingType","newValueMappings","valueMaps","convertOldAngularValueMappings","newRangeMappings","rangeMaps","newMappings","uniques","JSON","stringify","migrateValueAndRangeMaps","useFieldConfig","disableStandardOptions","FieldConfigProperty","Decimals","DisplayName","Max","Min","Links","NoValue","Unit","standardOptions","Mappings","setPanelOptions","builder","addBooleanSwitch","defaultValue","category","addNumberInput","placeHolder","integer","showIf","addSelect","addColorPicker","addTextInput","addUnitPicker","addCustomEditor","editor","setSuggestionsSupplier","getSuggestionsForData","dataSummary","ds","hasData","hasNumberField","getListAppender","pluginId","append"],"sourceRoot":""}